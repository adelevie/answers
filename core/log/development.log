  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (5.7ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateArticles (20120416181217)
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36m (5.1ms)[0m  [1mCREATE TABLE "articles" ("id" serial primary key, "updated" timestamp, "title" character varying(255), "content" text, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120416181217"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateContacts (20120424172229)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "contacts" ("id" serial primary key, "name" character varying(255), "subname" character varying(255), "number" character varying(255), "url" character varying(255), "address" character varying(255), "department" character varying(255), "description" text, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120424172229"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to AddFieldsToArticle (20120430224632)
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "category" character varying(255)[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "type" int
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "preview" text[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "articles" ADD COLUMN "contact_id" int
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "tags" text[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "service_url" character varying(255)
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120430224632"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to RenameTypeToContentType (20120430232605)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m  ALTER TABLE "articles" RENAME COLUMN "type" TO "content_type"
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120430232605"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to DeviseCreateUsers (20120501181542)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (4.8ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying(255) DEFAULT '' NOT NULL, "encrypted_password" character varying(255) DEFAULT '' NOT NULL, "reset_password_token" character varying(255), "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "sign_in_count" integer DEFAULT 0, "current_sign_in_at" timestamp, "last_sign_in_at" timestamp, "current_sign_in_ip" character varying(255), "last_sign_in_ip" character varying(255), "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (2.2ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")[0m
  [1m[35m (2.2ms)[0m  CREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120501181542"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to CreateRailsAdminHistoriesTable (20120501181544)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (4.4ms)[0m  CREATE TABLE "rails_admin_histories" ("id" serial primary key, "message" text, "username" character varying(255), "item" integer, "table" character varying(255), "month" smallint, "year" bigint, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (2.3ms)[0m  [1mCREATE  INDEX  "index_rails_admin_histories" ON "rails_admin_histories"  ("item", "table", "month", "year")[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120501181544"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to AddAdminToUsers (20120501191040)
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "users" ADD COLUMN "admin" bool[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120501191040"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddPublishedToArticle (20120628194351)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (5.0ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "is_published" boolean DEFAULT 'f'[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120628194351"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Migrating to DeviseCreateAdmins (20120628200512)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (4.6ms)[0m  [1mCREATE TABLE "admins" ("id" serial primary key, "email" character varying(255) DEFAULT '' NOT NULL, "encrypted_password" character varying(255) DEFAULT '' NOT NULL, "reset_password_token" character varying(255), "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "sign_in_count" integer DEFAULT 0, "current_sign_in_at" timestamp, "last_sign_in_at" timestamp, "current_sign_in_ip" character varying(255), "last_sign_in_ip" character varying(255), "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (2.4ms)[0m  CREATE UNIQUE INDEX  "index_admins_on_email" ON "admins"  ("email")
  [1m[36m (2.1ms)[0m  [1mCREATE UNIQUE INDEX  "index_admins_on_reset_password_token" ON "admins"  ("reset_password_token")[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120628200512"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to ModifyAdmin (20120628203747)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "admins" DROP "remember_created_at"[0m
  [1m[35m (7.4ms)[0m  ALTER TABLE "admins" ADD COLUMN "failed_attempts" integer DEFAULT 5
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "admins" ADD COLUMN "unlock_token" character varying(255)[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "admins" ADD COLUMN "locked_at" timestamp
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120628203747"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to AddSlugToArticles (20120629070448)
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "articles" ADD COLUMN "slug" character varying(255)
  [1m[36m (2.3ms)[0m  [1mCREATE  INDEX  "index_articles_on_slug" ON "articles"  ("slug")[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120629070448"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateFriendlyIdSlugs (20120629072846)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (2.7ms)[0m  [1mCREATE TABLE "friendly_id_slugs" ("id" serial primary key, "slug" character varying(255) NOT NULL, "sluggable_id" integer NOT NULL, "sluggable_type" character varying(40), "created_at" timestamp) [0m
  [1m[35m (2.2ms)[0m  CREATE  INDEX  "index_friendly_id_slugs_on_sluggable_id" ON "friendly_id_slugs"  ("sluggable_id")
  [1m[36m (2.3ms)[0m  [1mCREATE UNIQUE INDEX  "index_friendly_id_slugs_on_slug_and_sluggable_type" ON "friendly_id_slugs"  ("slug", "sluggable_type")[0m
  [1m[35m (2.4ms)[0m  CREATE  INDEX  "index_friendly_id_slugs_on_sluggable_type" ON "friendly_id_slugs"  ("sluggable_type")
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120629072846"]]
  [1m[35m (1.1ms)[0m  COMMIT
Migrating to ChangeAdminToPublisherUsers (20120629140930)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" RENAME COLUMN "admin" TO "is_moderator"
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120629140930"]]
  [1m[35m (1.0ms)[0m  COMMIT
Migrating to RenameAdminsToAdministrators (20120629143105)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "admins" RENAME TO "administrators"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "admins_id_seq" RENAME TO "administrators_id_seq"[0m
  [1m[35m (0.6ms)[0m  ALTER INDEX "index_admins_on_email" RENAME TO "index_administrators_on_email"
  [1m[36m (0.6ms)[0m  [1mALTER INDEX "index_admins_on_reset_password_token" RENAME TO "index_administrators_on_reset_password_token"[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120629143105"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to AddIsAdminToUsers (20120701155314)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (8.2ms)[0m  [1mALTER TABLE "users" ADD COLUMN "is_admin" boolean DEFAULT 'f'[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120701155314"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateAdminNotes (20120702150748)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (4.8ms)[0m  [1mCREATE TABLE "admin_notes" ("id" serial primary key, "resource_id" character varying(255) NOT NULL, "resource_type" character varying(255) NOT NULL, "user_id" integer, "user_type" character varying(255), "body" text, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (2.9ms)[0m  CREATE  INDEX  "index_admin_notes_on_resource_type_and_resource_id" ON "admin_notes"  ("resource_type", "resource_id")
  [1m[36m (1.9ms)[0m  [1mCREATE  INDEX  "index_admin_notes_on_user_type_and_user_id" ON "admin_notes"  ("user_type", "user_id")[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120702150748"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Migrating to MoveAdminNotesToComments (20120702150749)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mDROP INDEX "index_admin_notes_on_user_type_and_user_id"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "admin_notes" RENAME TO "active_admin_comments"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "admin_notes_id_seq" RENAME TO "active_admin_comments_id_seq"[0m
  [1m[35m (0.5ms)[0m  ALTER INDEX "index_admin_notes_on_resource_type_and_resource_id" RENAME TO "index_active_admin_comments_on_resource_type_and_resource_id"
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "active_admin_comments" RENAME COLUMN "user_type" TO "author_type"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "active_admin_comments" RENAME COLUMN "user_id" TO "author_id"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "active_admin_comments" ADD COLUMN "namespace" character varying(255)[0m
  [1m[35m (2.5ms)[0m  CREATE  INDEX  "index_active_admin_comments_on_namespace" ON "active_admin_comments"  ("namespace")
  [1m[36m (2.3ms)[0m  [1mCREATE  INDEX  "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments"  ("author_type", "author_id")[0m
  [1m[35m (0.8ms)[0m  UPDATE active_admin_comments SET namespace='admin'
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120702150749"]]
  [1m[35m (1.1ms)[0m  COMMIT
Migrating to DropAdministratorTable (20120702165334)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (1.4ms)[0m  DROP TABLE "administrators"
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120702165334"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to AddIsEditorToUsers (20120702171830)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (8.2ms)[0m  ALTER TABLE "users" ADD COLUMN "is_editor" boolean DEFAULT 'f'
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120702171830"]]
  [1m[35m (1.5ms)[0m  COMMIT
Migrating to CreateCategories (20120706171506)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (3.0ms)[0m  CREATE TABLE "categories" ("id" serial primary key, "name" character varying(255), "access_count" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120706171506"]]
  [1m[35m (1.0ms)[0m  COMMIT
Migrating to AddCategoryReferencesToArticles (20120706172717)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" DROP "category"
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "category_id" integer[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120706172717"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to AddArticleReferencesToCategory (20120706173031)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "categories" ADD COLUMN "article_id" integer[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120706173031"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to AddAccessCountToArticles (20120706193649)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (6.8ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "access_count" integer DEFAULT 0[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120706193649"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Migrating to CreateKeywords (20120707184743)
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36m (5.8ms)[0m  [1mCREATE TABLE "keywords" ("id" serial primary key, "name" character varying(255), "metaphone" character varying(255), "stem" character varying(255), "synonyms" text, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120707184743"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Migrating to CreateWordcounts (20120707190634)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (2.9ms)[0m  [1mCREATE TABLE "wordcounts" ("id" serial primary key, "article_id" integer, "keyword_id" integer, "count" integer, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120707190634"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateDelayedJobs (20120714144317)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (4.9ms)[0m  [1mCREATE TABLE "delayed_jobs" ("id" serial primary key, "priority" integer DEFAULT 0, "attempts" integer DEFAULT 0, "handler" text, "last_error" text, "run_at" timestamp, "locked_at" timestamp, "failed_at" timestamp, "locked_by" character varying(255), "queue" character varying(255), "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (2.5ms)[0m  CREATE  INDEX  "delayed_jobs_priority" ON "delayed_jobs"  ("priority", "run_at")
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120714144317"]]
  [1m[35m (1.0ms)[0m  COMMIT
Migrating to AddDescriptionToCategory (20120727004822)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (2.6ms)[0m  ALTER TABLE "categories" ADD COLUMN "description" text
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120727004822"]]
  [1m[35m (1.2ms)[0m  COMMIT
Migrating to ChangeContentTypeArticles (20120727052215)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (7.2ms)[0m  ALTER TABLE "articles" ALTER COLUMN "content_type" TYPE character varying(255)
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120727052215"]]
  [1m[35m (1.5ms)[0m  COMMIT
Migrating to AddAuthorPictureNameToArticles (20120727124910)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "author_pic_file_name" character varying(255)
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "author_pic_content_type" character varying(255)[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "author_pic_file_size" integer
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "author_pic_updated_at" timestamp[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "author_name" character varying(255)
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "author_link" character varying(255)[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120727124910"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateGuides (20120730225526)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (5.7ms)[0m  [1mCREATE TABLE "guides" ("id" serial primary key, "title" character varying(255), "content" text, "preview" text, "contact_id" integer, "tags" text, "category_id" integer, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120730225526"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to AddTypeToArticles (20120807200215)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (1.1ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "type" character varying(255)[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120807200215"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to CreateGuideSteps (20120807233918)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (5.1ms)[0m  [1mCREATE TABLE "guide_steps" ("id" serial primary key, "article_id" integer, "title" character varying(255), "content" text, "preview" text, "step" integer, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120807233918"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to DropGuidesTable (20120807235112)
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36m (1.0ms)[0m  [1mDROP TABLE "guides"[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20120807235112"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Migrating to AddSlugsToCategories (20120817231009)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "categories" ADD COLUMN "slug" character varying(255)[0m
  [1m[35m (2.2ms)[0m  CREATE UNIQUE INDEX  "index_categories_on_slug" ON "categories"  ("slug")
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20120817231009"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to AddContentMarkdownToArticles (20121010140714)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "content_md" text
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20121010140714"]]
  [1m[35m (1.0ms)[0m  COMMIT
Migrating to AddRenderMarkdownToArticle (20121026145929)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (7.5ms)[0m  ALTER TABLE "articles" ADD COLUMN "render_markdown" boolean DEFAULT 't'
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20121026145929"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to AddDivisionOfContentFieldsToArticles (20121028193745)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "articles" ADD COLUMN "content_main" text
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "content_main_extra" text[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "articles" ADD COLUMN "content_need_to_know" text
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20121028193745"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to CreateDepartments (20121106123303)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (4.7ms)[0m  CREATE TABLE "departments" ("id" serial primary key, "name" character varying(255), "acronym" character varying(255), "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "users" ADD COLUMN "department_id" integer[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20121106123303"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to FixNamingConventionsOnRoles (20121107003920)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "users" RENAME COLUMN "is_editor" TO "is_writer"[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" RENAME COLUMN "is_moderator" TO "is_editor"
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20121107003920"]]
  [1m[35m (1.1ms)[0m  COMMIT
Migrating to AddStatusToArticles (20121107014855)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (7.3ms)[0m  ALTER TABLE "articles" ADD COLUMN "status" character varying(255) DEFAULT 'Draft'
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20121107014855"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to AddUserIdToArticle (20121107020439)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "articles" ADD COLUMN "user_id" integer
  [1m[36m (2.6ms)[0m  [1mCREATE  INDEX  "index_articles_on_user_id" ON "articles"  ("user_id")[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20121107020439"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to RemoveIsPublishedFieldFromArticles (20121108074632)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1mALTER TABLE "articles" DROP "is_published"[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20121108074632"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to AddLangContentToArticle (20140527211609)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "title_es" character varying(255)[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "preview_es" text
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "content_main_es" text[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "articles" ADD COLUMN "title_cn" character varying(255)
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "articles" ADD COLUMN "preview_cn" text[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "articles" ADD COLUMN "content_main_cn" text
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140527211609"]]
  [1m[35m (1.1ms)[0m  COMMIT
Migrating to UpgradeToFriendlyIdFive (20140612192304)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (2.9ms)[0m  ALTER TABLE "friendly_id_slugs" ADD COLUMN "scope" character varying(255)
  [1m[36m (0.6ms)[0m  [1mDROP INDEX "index_friendly_id_slugs_on_slug_and_sluggable_type"[0m
  [1m[35m (2.4ms)[0m  CREATE  INDEX  "index_friendly_id_slugs_on_slug_and_sluggable_type" ON "friendly_id_slugs"  ("slug", "sluggable_type")
  [1m[36m (2.2ms)[0m  [1mCREATE UNIQUE INDEX  "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope" ON "friendly_id_slugs"  ("slug", "sluggable_type", "scope")[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140612192304"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Migrating to RemoveSubnameFromContacts (20140805001628)
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "contacts" DROP "subname"[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140805001628"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.7ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"


Started GET "/" for 10.0.2.2 at 2014-08-15 19:13:19 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mCategory Load (7.3ms)[0m  SELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4
  Rendered home/_category.html.erb (0.1ms)
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (76.2ms)
Completed 200 OK in 3055ms (Views: 2998.0ms | ActiveRecord: 12.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 19:13:30 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 53ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 19:13:30 +0000
Processing by HomeController#index as */*
  [1m[36mCategory Load (2.8ms)[0m  [1mSELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4[0m
  Rendered home/_category.html.erb (0.1ms)
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (398.3ms)
Completed 200 OK in 1965ms (Views: 1914.6ms | ActiveRecord: 8.5ms)


Started GET "/search?q=wuttt" for 10.0.2.2 at 2014-08-15 19:13:33 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"wuttt"}
  [1m[33mArticle Search (24.8ms)[0m  curl http://localhost:9200/articles_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"match":{"_all":{"query":"wuttt","operator":"and","boost":10,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"wuttt","operator":"and","boost":10,"analyzer":"searchkick_search2"}}},{"match":{"_all":{"query":"wuttt","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"wuttt","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}}]}},"size":100000,"from":0,"fields":[]}'
Completed 500 Internal Server Error in 224ms

Searchkick::MissingIndexError (Index missing - run Article.reindex):
  app/controllers/search_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (24.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 19:13:37 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 9ms (ActiveRecord: 0.0ms)
  [1m[36mArticle Load (2.9ms)[0m  [1mSELECT "articles".* FROM "articles"[0m


Started GET "/" for 10.0.2.2 at 2014-08-15 19:47:19 +0000


Started GET "/" for 10.0.2.2 at 2014-08-15 19:47:19 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[36mActiveRecord::SchemaMigration Load (2.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mCategory Load (6.2ms)[0m  SELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4
  Rendered home/_category.html.erb (0.1ms)
  Rendered shared/_autocomplete.html.erb (1.7ms)
  Rendered home/index.html.erb within layouts/application (117.1ms)
  [1m[35mCategory Load (2.9ms)[0m  SELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4
  Rendered home/_category.html.erb (0.2ms)
  Rendered shared/_autocomplete.html.erb (2.4ms)
  Rendered home/index.html.erb within layouts/application (136.0ms)
Completed 200 OK in 1877ms (Views: 1786.1ms | ActiveRecord: 12.8ms)
Completed 200 OK in 1702ms (Views: 1620.8ms | ActiveRecord: 13.2ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 19:47:28 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 23ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 19:47:28 +0000
Processing by HomeController#index as */*
  [1m[36mCategory Load (2.0ms)[0m  [1mSELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4[0m
  Rendered home/_category.html.erb (0.1ms)
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (386.8ms)
Completed 200 OK in 1751ms (Views: 1720.6ms | ActiveRecord: 6.9ms)
  [1m[36mArticle Load (1.7ms)[0m  [1mSELECT "articles".* FROM "articles"[0m
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mArticle Exists (2.6ms)[0m  SELECT  1 AS one FROM "articles"  WHERE ("articles"."id" IS NOT NULL) AND "articles"."slug" = 'wut' LIMIT 1
  [1m[36mSQL (1.8ms)[0m  [1mINSERT INTO "articles" ("created_at", "slug", "title", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2014-08-15 20:03:47.358972"], ["slug", "wut"], ["title", "wut"], ["updated_at", "2014-08-15 20:03:47.358972"]]
  [1m[35m (1.0ms)[0m  COMMIT


Started GET "/" for 10.0.2.2 at 2014-08-15 20:04:03 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mCategory Load (4.0ms)[0m  SELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4
  Rendered home/_category.html.erb (0.2ms)
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (67.6ms)
Completed 200 OK in 1398ms (Views: 1349.6ms | ActiveRecord: 8.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 20:04:11 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 19ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 20:04:12 +0000
Processing by HomeController#index as */*
  [1m[36mCategory Load (2.1ms)[0m  [1mSELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4[0m
  Rendered home/_category.html.erb (0.1ms)
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (343.4ms)
Completed 200 OK in 2223ms (Views: 2171.2ms | ActiveRecord: 7.3ms)


Started GET "/admin" for 10.0.2.2 at 2014-08-15 20:04:15 +0000
Processing by Admin::DashboardController#index as HTML
Completed 401 Unauthorized in 19ms


Started GET "/users/sign_in" for 10.0.2.2 at 2014-08-15 20:04:15 +0000
Processing by SessionsController#new as HTML
  Rendered devise/shared/_links.erb (1.8ms)
  Rendered devise/sessions/new.html.erb within layouts/application (104.1ms)
  Rendered shared/_search_form.html.erb (1.5ms)
Completed 200 OK in 339ms (Views: 313.0ms | ActiveRecord: 4.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 20:04:21 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 29ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 20:04:21 +0000
Processing by HomeController#index as */*
  [1m[36mCategory Load (2.3ms)[0m  [1mSELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4[0m
  Rendered home/_category.html.erb (0.1ms)
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (344.9ms)
  [1m[36mUser Load (3.0ms)[0m  [1mSELECT  "users".* FROM "users"   ORDER BY "users"."id" ASC LIMIT 1[0m
Completed 200 OK in 1722ms (Views: 1692.2ms | ActiveRecord: 7.8ms)
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users"


Started POST "/users/sign_in" for 10.0.2.2 at 2014-08-15 20:04:44 +0000
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"HzdSrtlhK8r4fYet8TvWsBAa9ULqcXxmhqvEkD4BWQc=", "user"=>{"email"=>"admin@answers.gsa.io", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Sign in"}
  [1m[35mUser Load (1.1ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."email" = 'admin@answers.gsa.io'  ORDER BY "users"."id" ASC LIMIT 1
Completed 401 Unauthorized in 18ms
Processing by SessionsController#new as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"HzdSrtlhK8r4fYet8TvWsBAa9ULqcXxmhqvEkD4BWQc=", "user"=>{"email"=>"admin@answers.gsa.io", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Sign in"}
  Rendered devise/shared/_links.erb (1.8ms)
  Rendered devise/sessions/new.html.erb within layouts/application (71.5ms)
  Rendered shared/_search_form.html.erb (1.5ms)
Completed 200 OK in 364ms (Views: 280.6ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 20:04:50 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 25ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 20:04:50 +0000
Processing by HomeController#index as */*
  [1m[36mCategory Load (2.5ms)[0m  [1mSELECT  DISTINCT "categories".* FROM "categories" INNER JOIN "articles" ON "articles"."category_id" = "categories"."id" WHERE "articles"."status" = 'Published'  ORDER BY name ASC, access_count DESC LIMIT 4[0m
  Rendered home/_category.html.erb (0.1ms)
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (448.9ms)
Completed 200 OK in 1987ms (Views: 1953.1ms | ActiveRecord: 7.4ms)
PG::UndefinedTable: ERROR:  relation "questions" does not exist
LINE 5:                WHERE a.attrelid = '"questions"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"questions"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

  [1m[36mActiveRecord::SchemaMigration Load (1.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateAnswers (20140717165411)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (25.9ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "need_to_know" text, "text" text, "url" character varying(255), "in_language" character varying(255), "question_id" integer, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (1.8ms)[0m  CREATE  INDEX  "index_answers_on_question_id" ON "answers"  ("question_id")
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140717165411"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to CreateQuestions (20140717170311)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (5.9ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "text" character varying(255), "url" character varying(255), "in_language" character varying(255), "created_at" timestamp, "updated_at" timestamp) 
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140717170311"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to RemoveUrlFromAnswer (20140718162526)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (3.5ms)[0m  ALTER TABLE "answers" DROP "url"
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140718162526"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to RemoveUrlFromQuestion (20140718162552)
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35m (1.2ms)[0m  ALTER TABLE "questions" DROP "url"
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140718162552"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to AddAuthenticationTokenToUsers (20140721194324)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (1.9ms)[0m  ALTER TABLE "users" ADD COLUMN "authentication_token" character varying(255)
  [1m[36m (3.1ms)[0m  [1mCREATE  INDEX  "index_users_on_authentication_token" ON "users"  ("authentication_token")[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140721194324"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Migrating to DropArticlesTable (20140806160418)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140806160418"]]
  [1m[35m (1.3ms)[0m  COMMIT
Migrating to DropCategoriesTable (20140808153110)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140808153110"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to DropKeywordsTable (20140808153128)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140808153128"]]
  [1m[35m (1.0ms)[0m  COMMIT
Migrating to DropContactsTable (20140808153208)
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140808153208"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to DropGuideStepsTable (20140808153240)
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140808153240"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to DropDepartmentsTable (20140808153305)
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140808153305"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.6ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:43.926555"], ["in_language", "en"], ["text", "Can I revise my City job application?"], ["updated_at", "2014-08-15 20:34:43.926555"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.172358"], ["in_language", "en"], ["need_to_know", "If you're in the process of applying, you can save your application as you go and ahead any edit part you please. You can even use past applications for new job openings so you don't need to re-enter every single past employment. But once you've hit submit it's \"bon voyage.\""], ["question_id", 1], ["text", "Once you've hit that submit button, your application is locked in. However, you can save and edit applications for jobs that you are currently applying to as well as revise old applications and use them to apply to new jobs. "], ["updated_at", "2014-08-15 20:34:44.172358"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.341310"], ["in_language", "en"], ["text", "How do I get a motorcycle license?"], ["updated_at", "2014-08-15 20:34:44.341310"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (2.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.399621"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 2], ["text", "Visit the [Motorcycle License Checklist][1] page at the California Department of Motor Vehicles. [1]: http://www.dmv.ca.gov/dl/checklists/mc.htm"], ["updated_at", "2014-08-15 20:34:44.399621"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.416041"], ["in_language", "en"], ["text", "Can a person clear their criminal record? How?"], ["updated_at", "2014-08-15 20:34:44.416041"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.427056"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 3], ["text", "You can expunge -- or clear convictions from -- your criminal record by petitioning the state in which you were convicted, or the federal government. If you were convicted of crime in the State of California, instructions for the process of filing a Petition for Dismissal are [here][1] and [here][2]. [1]: http://www.courts.ca.gov/1070.htm [2]: http://www.saccourt.ca.gov/criminal/docs/1203-4-dismissal-process.pdf"], ["updated_at", "2014-08-15 20:34:44.427056"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.439364"], ["in_language", "en"], ["text", "Can I submit my resume for any future City job openings?"], ["updated_at", "2014-08-15 20:34:44.439364"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.451943"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 4], ["text", "You can file a [Job Interest Card][1] for a specific department within the City of Oakland. After you've filed one you'll get an email when a job opens in that department so you can apply. You cannot file one for a specific job--only by department. Job interest cards last 12 months and then you'll need to re-file them at the above link. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm?action=openjobrequest"], ["updated_at", "2014-08-15 20:34:44.451943"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.466111"], ["in_language", "en"], ["text", "Who do I contact if I found a dog?"], ["updated_at", "2014-08-15 20:34:44.466111"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.480680"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 5], ["text", "The city of Oakland's Animal Services is part of the Oakland Police Department. If you find a dog that you can not keep until you find its owner, call the Oakland Police Department non-emergency number: (510)-777-3333. Open 24 hours per day and 7 days per week. "], ["updated_at", "2014-08-15 20:34:44.480680"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.493492"], ["in_language", "en"], ["text", "Who do I need to inform if I change my address?"], ["updated_at", "2014-08-15 20:34:44.493492"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.506388"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 6], ["text", "The City of Oakland does not need to be informed if you change your address, but you may need to contact other government entities if: 1) You've moved and need to change your mailing address. In this case, contact the US Postal Service [here](https://moversguide.usps.com/icoa/home/icoa-main-flow.do?execution=e1s1&_flowId=icoa-main-flow&referral=MG80). 2) You need to change the address on your drivers license. In this case, contact the CA DMV [here](http://www.dmv.ca.gov/faq/genfaq.htm#CHANGEADDRESS). 3) You need to change your voter registration. In this case, find information about how to register online at the CA Secretary of State [here](https://rtv.sos.ca.gov/elections/register-to-vote/). (Note: You need to go through the whole re-registration process even if you are already registered and simply need to change your address. There is a spot to indicate that you are already registered at another address)."], ["updated_at", "2014-08-15 20:34:44.506388"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.518990"], ["in_language", "en"], ["text", "Where are the public swimming pools in Oakland?"], ["updated_at", "2014-08-15 20:34:44.518990"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.531686"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 7], ["text", "You can find six public pools in Oakland. - Defremery Pool - 1269 18th Street (510) 238-2205 - East Oakland Sports Center - 9161 Edes Avenue (510) 615-5838 - Fremont Pool - 4550 Foothill Blvd (510) 535-5614 - Lions Pool - 3860 Hanly Road (510) 482-7852 - Live Oak Pool - 1055 MacArthur Blvd (510) 238-2292 - Temescal Pool - 371 45th Street (510) 597-5013 "], ["updated_at", "2014-08-15 20:34:44.531686"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (1.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.543401"], ["in_language", "en"], ["text", "How do I get an Oakland ID card?"], ["updated_at", "2014-08-15 20:34:44.543401"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.556164"], ["in_language", "en"], ["need_to_know", "<p>Before your visit, you can {{must??}} make a 30-minute appointment <a href=\"http://..com/locations.html\" target=\"blank\">online or by phone</a>. </p> <p>Oakland's city ID card is identification accepted and respected as a valid residency card by Oakland Police Department, BART Police, Alameda County Sheriffs and other local authorities {{what about city/state/federal service agencies?}}.</p> <p><b>Accepted proof of residency</b> must show your <b>name</b> (or your spouse's, if you bring a certified copy of your marriage certificate {{where do you get this?? what does it cost?? what about civil unions/domestic partnerships??}} and <b>Oakland address</b>, and be <b>dated within the last 30 days</b>:</p> <ol> <li>Utility or services bill</li> <li>Local property tax statement</li> <li>Mortgage payment {{that doesn't make sense, shouldn't it be a mortgage interest payment invoice?}}</li> <li>Bank statement</li> <li>Pay stub</li> <li>Jury summons or court order</li> <li>Federal or state income tax or refund statement</li> <li>Insurance bill</li> <li>Proof of a minor currently enrolled in a local school</li> <li>Written verification by an Oakland-funded {{how are people supposed to know what's Oakland-funded versus county- or state-funded??}} homeless shelter, hospital, health clinic or social services agency of at least 15 days of residency</li> </ol> <p><b>Accepted proof of identity</b>:</br> <ol> <li>US Permanent Resident Card (\"Green Card\")</li> <li>Current US Driver License</li> <li>Current US State Issued ID</li> <li>Current US Military Service ID</li> <li>Mexican Matricula Consular Identification Card</li> <li>Foreign Government Issued National ID Card</li> <li>Foreign Passport</li> <li>Foreign Driver License</li> <li>Foreign Military Service ID</li> <li>Consular Identification Card</li> </ol> </p> <p>If you're 18 and over and provide one of the first six documents above, you can also apply to activate your city ID for use as a pre-paid debit card. Be aware that pre-paid debit card services carry both <a href=\"http://www.oaklandcityid.com/fees.html\" target=\"blank\">monthly and transactional fees</a> that the vendor estimates range from a low end of $15 to a high end of over $27 per month.</p>"], ["question_id", 8], ["text", "<p>You can apply for a city ID card in person at the <a href=\"http://www.oaklandcityid.com/locations.html\" target=\"blank\">City Center or Fruitvale office</a> of <a href=\"http://www.sfglobalsourcing.com/specialties\" target=\"blank\">SF Global LLC</a>, the private company the city has contracted with to provide this service. Oakland's city ID card is available for purchase by Oakland residents 18 years and up {{?? website implies the card is available for at least some minors because it states that the optional financial services are available only to applicants 18 or older}} with proof of residency and identity.</p>"], ["updated_at", "2014-08-15 20:34:44.556164"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.578538"], ["in_language", "en"], ["text", "What can I do when one or more neighbors start to erect large, all enclosing fences? "], ["updated_at", "2014-08-15 20:34:44.578538"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.589614"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 9], ["text", "Installing of an over-sized fence requires a permit from building services. For reasons of fire safety and for neighborhood appearance, fences in front yards are limited to a height of three and a half feet, which is the same or six inches higher than fences allowed in many nearby cities in the Bay Area. Fencing in the back and along the sides of a house can be much taller. Visit the Planning and Building Department's [Permit information page][1] for more information. Although it is best to solve neighborhood issues in local groups and neighborhood associations, complaints can be sent to building services and these may result in fines for alternations without permits or variances. To file a Code Enforcement complaint, call (510) 238-3381 or visit the [City Code Enforcement][2] page. [1]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/ [2]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/CityCodeEnforcement/index.htm "], ["updated_at", "2014-08-15 20:34:44.589614"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.601207"], ["in_language", "en"], ["text", "Can I plant a tree in a park?"], ["updated_at", "2014-08-15 20:34:44.601207"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.611353"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 10], ["text", "You cannot plant a tree in a public park. "], ["updated_at", "2014-08-15 20:34:44.611353"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.626208"], ["in_language", "en"], ["text", "How can I help the homeless?"], ["updated_at", "2014-08-15 20:34:44.626208"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.637140"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 11], ["text", "There are are a number of ways that Oaklanders can help the homeless. You can be involved in city policy, volunteer, make donations, and become an advocate. Throughout the year, the City partners with local organizations for a variety of events. Oakland’s Permanent Access to Housing (PATH) Strategy provides a roadmap for ending homelessness in the City over a period of the next fifteen years. "], ["updated_at", "2014-08-15 20:34:44.637140"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.650316"], ["in_language", "en"], ["text", "How Many People Live In Oakland?"], ["updated_at", "2014-08-15 20:34:44.650316"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.662712"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 12], ["text", "The 2010 Census reported Oakland's population as 390,724. The California Department of Finance has estimated Oakland's population on January 1, 2013, as 399,326."], ["updated_at", "2014-08-15 20:34:44.662712"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.676339"], ["in_language", "en"], ["text", "What Council District am I in?"], ["updated_at", "2014-08-15 20:34:44.676339"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.687727"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 13], ["text", "Go to [http://mapgis.oaklandnet.com/councildistricts/][1] and enter your address. The map shows how the city is divided into 7 council districts - you can click into any district to see the Councilmember, or you can enter your address in the locator field to see the result. The Councilmember contact information is displayed. [1]: http://mapgis.oaklandnet.com/councildistricts/"], ["updated_at", "2014-08-15 20:34:44.687727"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.698753"], ["in_language", "en"], ["text", "Where can I view a live webcast of City Council Meetings?"], ["updated_at", "2014-08-15 20:34:44.698753"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.708684"], ["in_language", "en"], ["need_to_know", "The City of Oakland website can be found at http://www2.oaklandnet.com/"], ["question_id", 14], ["text", " [Oaklandnet.com][1] features [live (real-time streaming) as well as archived video.][2] Streaming video is available in the following formats. View the system requirements below to select the one that is best for you. (Live) [Microsoft Silverlight Users][3] (for PC and Macintosh) (Live) [Realplayer Users][4] Archived Videos and Agendas of the Oakland City Council: [Click here to view agendas, minutes and videos from past Council meetings.][5] [1]: http://www.Oaklandnet.com [2]: http://www2.oaklandnet.com/Government/o/CityCouncil/s/VideoArchive/index.htm [3]: http://oakland.granicus.com/MediaPlayer.php?publish_id=2 [4]: http://helixvideosvr.oaklandnet.com/ramgen/broadcast/encoderstream.rm [5]: http://oakland.legistar.com/calendar.aspx"], ["updated_at", "2014-08-15 20:34:44.708684"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.724830"], ["in_language", "en"], ["text", "How do I report drug dealing?"], ["updated_at", "2014-08-15 20:34:44.724830"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.736165"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 15], ["text", "If there is drug dealing in progress you can report it to the Oakland Police Departments non-emergency number -- **510-777-3333**. Make sure to get the incident number. You can also call the Drug Hotline -- **510-238-DRUG/ 238-3784** drug dealing tip-line – you can leave a recorded message that police use for follow-up and to note chronic drug dealing hot spots. Give as much information as possible including gender, race, age, height, weight, clothing, possible location of drugs and associated vehicles."], ["updated_at", "2014-08-15 20:34:44.736165"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.748108"], ["in_language", "en"], ["text", "Do I need a permit to throw a party?"], ["updated_at", "2014-08-15 20:34:44.748108"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.762271"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 16], ["text", "**Times when you DON'T need an event permit** If you are having a party **on you own property** (whether it's inside or outside, whether you rent or own) you don't need a permit to play amplified music or serve alcohol. ---------- **Times when you WILL need an event permit** There are times when you will need a **special permit** to hold an event. Conditions that require a special event permit include: - an event that is open to the public with 50 or more people will be in attendance - events that require street closures (e.g. a block party) - a party where people will be drinking alcohol outside of private property - a party with amplified sound that can be heard beyond your own property ---------- **How to get the permits you need** If you think your party meets the qualifications above then you will need **at least one permit from the City, maybe more.** Almost **all** events require a permit from the Special Activities unit of the City Administrator's Office. In most (not all) cases, you are going to need to prove that you have liability insurance for your proposed event. You can apply for a permit by contacting either of the following staff people: - Nancy Marcus - 510-238-3294 - nmarcus@oaklandnet.com - Jasmine Chan - 510-238-6914 - jchan@oaklandnet.com If your party is going to require a **street closure** then you must you must file an application with the Special Event Unit of the Oakland Police Department. Be sure to file the application with OPD **at least 30 days prior to your event**. To hold a party in a public space (e.g. a City park) you will need to request a reservation with the Office of Parks and Recreation by phone at 510-238-3187 or by email at oprscheduling@oaklandnet.com. "], ["updated_at", "2014-08-15 20:34:44.762271"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.777158"], ["in_language", "en"], ["text", "Who do I contact to get a space at a Farmer's Market?"], ["updated_at", "2014-08-15 20:34:44.777158"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.789378"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 17], ["text", "There are different organizations that run the various farmer's markets throughout the city. You can find the contact information for specific farmer's markets through the California Certified Farmer's Market website. [http://www.cafarmersmarkets.com/index.cfm][1] [1]: http://www.cafarmersmarkets.com/index.cfm"], ["updated_at", "2014-08-15 20:34:44.789378"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.799044"], ["in_language", "en"], ["text", "Where is City Hall located?"], ["updated_at", "2014-08-15 20:34:44.799044"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.809171"], ["in_language", "en"], ["need_to_know", "Oakland City Hall is conveniently located right off the BART line at the 12th Street/City Center station. For more information about schedules and for a map of the system, visit BART at [www.bart.gov][1] or call (510) 464-7133 (TDD#: (510) 839-2218). City Hall is also accessible via several different bus lines run by AC Transit. For more information about schedules and a system map, visit AC Transit at [www.actransit.org][2] or call (510) 891-4706 (TDD#: (510) 428-2266). Bus lines that serve City Hall include: 1, 1R, 11, 12, 18, 26, 72, 72R, 72M, 58L, 51A and the [free Broadway Shuttle][3]. [1]: http://www.bart.gov [2]: http://www.actransit.dst.cs.us [3]: http://www.meetdowntownoak.com/shuttle.php"], ["question_id", 18], ["text", "**Oakland City Hall**<br> 1 Frank H. Ogawa Plaza<br> Oakland, CA 94612 [![map of oakland city hall][1]](http://mapq.st/146TJoF)<br> Frank H. Ogawa plaza is located on 14th street, between Broadway and Clay. [1]: http://i.imgur.com/DKkMn9M.png "], ["updated_at", "2014-08-15 20:34:44.809171"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.824073"], ["in_language", "en"], ["text", "How can I report students who are skipping school?"], ["updated_at", "2014-08-15 20:34:44.824073"]]
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.836830"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 19], ["text", "Truancy Reporting: To report and get help for youth not in school, phone the following. OUSD Police Non-Emergency Line: **510-874-7777**. Be sure to describe youth, their clothing, their location, their activity (any drugs or alcohol use) when calling in. For questions to OUSD police, email: **police@ousd.k12.ca.us** "], ["updated_at", "2014-08-15 20:34:44.836830"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.847167"], ["in_language", "en"], ["text", "How do I get a replacement birth certificate?"], ["updated_at", "2014-08-15 20:34:44.847167"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.857748"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 20], ["text", "You have to request a replacement birth certificate from the county where you were born. If you were born in Alameda County, you can find directions for ordering replacement birth certificates [here][1]. [1]: http://www.acgov.org/auditor/clerk/birth2b.htm"], ["updated_at", "2014-08-15 20:34:44.857748"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.869006"], ["in_language", "en"], ["text", "How do I contact my Councilmember?"], ["updated_at", "2014-08-15 20:34:44.869006"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.881919"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 21], ["text", "If you know who your councilmember is, you can go to: http://www2.oaklandnet.com/Government/o/ElectedOfficials/index.htm and click on the link for your member. This will take you to a website for that council member and information on who to contact their office , along with support staff If you don't know your representative, you can go to: http://mapgis.oaklandnet.com/councildistricts/ and enter your address for find the link for your representative."], ["updated_at", "2014-08-15 20:34:44.881919"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.892174"], ["in_language", "en"], ["text", "How do I rent a facility?"], ["updated_at", "2014-08-15 20:34:44.892174"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.902906"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 22], ["text", "Please call Central Reservations at (510) 238-3187 or review our [Rental Facilities page][1] for additional information. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-08-15 20:34:44.902906"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.915278"], ["in_language", "en"], ["text", "How do I start residential garbage and recycling service in Oakland?"], ["updated_at", "2014-08-15 20:34:44.915278"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.925592"], ["in_language", "en"], ["need_to_know", "To establish residential garbage services and green waste pickup in Oakland: - **If you own your home:** contact Waste Management of Alameda County at (510) 613-8710 to start weekly garbage and yard trimmings/food scraps collection service. - **If you are renting:** contact your landlord or property manager to start weekly garbage and yard trimmings/food scraps collection service. To start weekly recycling collection service for both owners and renters, contact your recycling company: - **North and West Oakland:** Recycling service is provided by California Waste Solutions. Call (510) 836-6200 to subscribe for service or to request a cart. - **East Oakland:** Recycling service is provided by Waste Management of Alameda County. Call (510) 613-8710 to subscribe for service or to request a cart."], ["question_id", 23], ["text", ""], ["updated_at", "2014-08-15 20:34:44.925592"]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.938975"], ["in_language", "en"], ["text", "Where can I receive language assistance?"], ["updated_at", "2014-08-15 20:34:44.938975"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.948602"], ["in_language", "en"], ["need_to_know", "The Equal Access Office provides many kinds of language assistance to Oakland residents. [This webpage on the City's website][1] has a list of Language Assistance accommodations, that include: - How to know which city services have language assistance provided - A printable card you can carry with you to help city staff know that you need help in a language other than English **You can contact the Office of Equal Access for more information**<br> 150 Frank H. Ogawa Plaza, 2nd Floor, Oakland, CA 94612<br> phone: (510) 238-6813<br> [equalaccess@oaklandnet.com][2] [1]: http://www2.oaklandnet.com/Government/o/HumanResources/o/EqualAccess/DOWD000747 [2]: mailto:equalaccess@oaklandnet.com"], ["question_id", 24], ["text", "Language assistance can also include: - Interpreters - Assistance from a bilingual staff member (who has received appropriate training) - Multimedia resources (for example, a multilingual CD-Rom) - Multilingual information on web sites - Multilingual telephone information - Translated printed materials"], ["updated_at", "2014-08-15 20:34:44.948602"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.962654"], ["in_language", "en"], ["text", "How much is the City’s total budget?"], ["updated_at", "2014-08-15 20:34:44.962654"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.971710"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 25], ["text", "The City’s annual budget across all funds for the current fiscal year (FY 2012-13) is about $1 billion."], ["updated_at", "2014-08-15 20:34:44.971710"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:44.984531"], ["in_language", "en"], ["text", "How do I report an abandoned vehicle?"], ["updated_at", "2014-08-15 20:34:44.984531"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:44.994327"], ["in_language", "en"], ["need_to_know", "To report abandoned vehicles parked on a public street for over 72 hours, you can: - Call the Abandoned Auto Detail at (510) 777-8622. - Email the location, description, and license number of the vehicle, if known, to AbandonedAuto@oaklandnet.com. To report an abandoned vehicle parked on private property or a private street, you can: - Call the Vehicle Abatement Detail at (510) 777-8538. The Abandoned Auto Detail operates Monday through Friday, 6am to 4pm. "], ["question_id", 26], ["text", ""], ["updated_at", "2014-08-15 20:34:44.994327"]]
  [1m[35m (1.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.009328"], ["in_language", "en"], ["text", "What is the City doing to help the homeless?"], ["updated_at", "2014-08-15 20:34:45.009328"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.017801"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 27], ["text", "The City of Oakland's homeless programs provide housing and services to people in Oakland who are homeless, hungry, HIV/AIDS positive, or living on extremely low incomes. Community Housing Services recognizes the tremendous need for services specific to the homeless population. We partner with non-profit organizations to assist the homeless and near-homeless community with homeless prevention, rapid re-housing, permanent supportive housing, shelter, transitional/supportive housing and special needs housing. We also provide other homeless support services such as food, employment, physical and mental health, drug abuse and domestic violence programs."], ["updated_at", "2014-08-15 20:34:45.017801"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (2.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.031103"], ["in_language", "en"], ["text", "How do I request information from the Oakland Police Department"], ["updated_at", "2014-08-15 20:34:45.031103"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.051111"], ["in_language", "en"], ["need_to_know", "Your request will either be fulfilled or denied- if it is denied you will be furnished with details of why the request is not being fulfilled. **Public records include:** - Complaints - Crime Reports - Department publications - Employment contracts - Offense reports - Recordings - List item - Traffic accident reports - Traffic enforcement incidents - Training records "], ["question_id", 28], ["text", "You may request certain types of information from the OPD using an Online, mail or in-person process. We highly suggest the online method. **Online** Step 1: Copy the Public Records [request form][1] to your computer Step 2: Save the PDF document to your computer and then complete the details on the PDF document itself. Step 3: Re-SAVE the PDF on your computer with the details completed. Step 4: Email it to [OPDPublicRecordsRequest@oaklandnet.com][2]. **In-Person** Step 1: Picking up a copy of the form in person at the [Police Administration Building][3] Patrol Desk on the first floor. Step 2: Bring the completed form to the OPD Records Division Kiosk on the first floor of the PAB. The Records Kiosk is open to the public from 8:00 am to 3:00 pm Monday through Friday and from 8:00 am until noon on Saturday and Sunday. **By Mail** Send your completed paper form to: Public Records Request Coordinator Oakland Police Department Records Section 455 7th Street, Room 306 Oakland, CA 94607 Contact Information for Assistance If you need additional assistance with a Public Records request, please contact the Public Records Request Coordinator: (510) 238-7143. [1]: http://www2.oaklandnet.com/Government/o/OPD/s/document/DOWD002885 [2]: http://mailto:OPDPublicRecordsRequest@oaklandnet.com?Subject=RecordsRequest [3]: http://maps.google.com/maps?hl=en&source=hp&ie=UTF8&q=oakland%20police%20department&fb=1&gl=us&hq=police%20department&hnear=oakland&ei=FJrfSrydOYWyswPn-IXoCA&ved=0CCsQnQIwBg&view=map&f=d&daddr=455%207th%20St,%20Oakland,%20CA&geocode=CU8p8gFnSfHUFcnGQAIdCD22-A"], ["updated_at", "2014-08-15 20:34:45.051111"]]
  [1m[35m (2.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.078567"], ["in_language", "en"], ["text", "What charter schools are near me?"], ["updated_at", "2014-08-15 20:34:45.078567"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.089309"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 29], ["text", "The [Center for Education Reform][1] can help you find charter schools near you. [This link][2] will show a list of all the charter schools in Oakland. You can also focus the list by choosing the grade level or locations you need. [1]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D= [2]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D="], ["updated_at", "2014-08-15 20:34:45.089309"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.109044"], ["in_language", "en"], ["text", "What are the parking holidays in Oakland?"], ["updated_at", "2014-08-15 20:34:45.109044"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.173669"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 30], ["text", " The only days when there is no parking enforcement in Oakland are: - New Year's Day (January 1st) - Martin Luther King Jr. Day - President's Day - Memorial Day - Independence Day (July 4th) - Labor Day - Thanksgiving Day - Christmas Day (December 25th)"], ["updated_at", "2014-08-15 20:34:45.173669"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.185588"], ["in_language", "en"], ["text", "How do I get a marriage license?"], ["updated_at", "2014-08-15 20:34:45.185588"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.195697"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 31], ["text", "Alameda County will issue you a marriage license is you and your future spouse request one in-person at the County Clerk-Recorder's Office. You can find more information [here][1]. [1]: http://www.acgov.org/auditor/clerk/ml.htm"], ["updated_at", "2014-08-15 20:34:45.195697"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.205176"], ["in_language", "en"], ["text", "Where can I find classes, programs and events that are happening at the library?"], ["updated_at", "2014-08-15 20:34:45.205176"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.216665"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 32], ["text", "You can find a listing of library events on the library's website [here][1]. You can also pick up a monthly calendar of events at any [library branch][2]. [1]: http://oaklandlibrary.org/events [2]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-08-15 20:34:45.216665"]]
  [1m[35m (3.2ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.230614"], ["in_language", "en"], ["text", "How do I get a disabled person parking permit?"], ["updated_at", "2014-08-15 20:34:45.230614"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.246448"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 33], ["text", "Disabled parking permits need to be obtained from the California Department of Motor Vehicles. You can find more information and the application form [here](http://www.dmv.ca.gov/pubs/brochures/fast_facts/ffvr07.htm#)."], ["updated_at", "2014-08-15 20:34:45.246448"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.268919"], ["in_language", "en"], ["text", "Are there internships at the City?"], ["updated_at", "2014-08-15 20:34:45.268919"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.283283"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 34], ["text", "You can find more information on City internships on the City of Oakland website. Different departments (including the [City Auditor][1], and the [Public Ethics Commission][2]) offer internships which can be found posted on the individual department's website. Go to the City of Oakland website, and search \"[internship][3]\". [1]: http://www.oaklandauditor.com/en/ruby/careers/40 [2]: http://www2.oaklandnet.com/Government/o/CityAdministration/d/PublicEthics/internships/index.htm [3]: http://www2.oaklandnet.com/Search/index.htm?cx=017801668647536616097:grdicmryz10&cof=FORID:10&ie=UTF-8&q=internship&sa=Search"], ["updated_at", "2014-08-15 20:34:45.283283"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.295379"], ["in_language", "en"], ["text", "How can I rent event space in Oakland?"], ["updated_at", "2014-08-15 20:34:45.295379"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.308841"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 35], ["text", "Oakland Parks & Recreation offers rental facilities, listed here: [http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm][1] There are also private facilities available to rent in Oakland. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-08-15 20:34:45.308841"]]
  [1m[35m (2.2ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.330241"], ["in_language", "en"], ["text", "Where can I get tax forms?"], ["updated_at", "2014-08-15 20:34:45.330241"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.340631"], ["in_language", "en"], ["need_to_know", "If you would like to download tax forms online: Federal tax forms are available from the Internal Revenue Service. Many of the frequently used Federal tax forms can be found at http://www.irs.gov/uac/Forms,-Publications,-and-Other-Tax-Products. State tax forms are available from the State of California’s Franchise Tax Board. Many of the frequently used state tax forms can be found at https://www.ftb.ca.gov/forms/search/index.aspx."], ["question_id", 36], ["text", "You can find tax forms at the [Oakland Public Library][1] (like the 1040 EZ tax form). Some are in print form, and others can be printed by a library staff member (printing charges may apply). Before you go, it's helpful to bring the exact form number you need so the library staff member can find it with ease. If you don't have the form number, not to worry: a staff member is happy to help. To find an Oakland Public Library location near you, [look at the map][2]. [1]: http://www.oaklandlibrary.org/using-library/locations-hours [2]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5"], ["updated_at", "2014-08-15 20:34:45.340631"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.351255"], ["in_language", "en"], ["text", "What are the safest areas in Oakland?"], ["updated_at", "2014-08-15 20:34:45.351255"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.362233"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 37], ["text", "The best way to find out what areas of Oakland have the fewest reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-08-15 20:34:45.362233"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.378253"], ["in_language", "en"], ["text", "Are there any sex offenders in my neighborhood?"], ["updated_at", "2014-08-15 20:34:45.378253"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.388410"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 38], ["text", "You can search for your address on the [Meghan's Law Website][1] to find registered sex offenders that live nearby. Before you search the map, you have to click \"continue\" at the bottom of the first page, then click the check box and \"continue\" at the bottom of the second page. Then you will see a map of California and you can search for your address by clicking on the \"address\" box on the left side of the page. [1]: http://www.meganslaw.ca.gov/"], ["updated_at", "2014-08-15 20:34:45.388410"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.431808"], ["in_language", "en"], ["text", "What do I do if my car has been towed?"], ["updated_at", "2014-08-15 20:34:45.431808"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (2.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.447648"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 39], ["text", "If you think your car has been towed, first check the A&B Towing site (http://www.abimpound.com/towed.html) to see if they know. You should also call the Police Department Records Division at (510) 238-3021 to confirm your car has been towed. If it has been towed, you can go to the Records Division, 3rd floor, Police Administration Building, 455 7th Street (at Broadway) to get a Release Form for your vehicle."], ["updated_at", "2014-08-15 20:34:45.447648"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.461433"], ["in_language", "en"], ["text", "Where is the closest public library?"], ["updated_at", "2014-08-15 20:34:45.461433"]]
  [1m[36m (2.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.478380"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 40], ["text", "To see a map of all of the Oakland Public Libraries, go [here][1]. You can click on each dot to see the address, phone number and hours. You can find a list of library locations on the Oakland Public Library Website [here][2]. If you are looking for a library close to where you are right now, no matter where you are, you can click [here][3]. [1]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5 [2]: http://oaklandlibrary.org/using-library/locations-hours [3]: https://maps.google.com/maps?ie=UTF-8&q=closest%20public%20library"], ["updated_at", "2014-08-15 20:34:45.478380"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.500089"], ["in_language", "en"], ["text", "Where are the recycling centers located?"], ["updated_at", "2014-08-15 20:34:45.500089"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.511843"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 41], ["text", "Here's a [directory of recycling drop off centers in and around Oakland][1]. For more information about recycling in Oakland, visit [www.oaklandrecycles.com][2]. [1]: http://www2.oaklandnet.com/oakca/groups/pwa/documents/form/oak027311.pdf [2]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm"], ["updated_at", "2014-08-15 20:34:45.511843"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.530221"], ["in_language", "en"], ["text", "What are the current job openings at the City?"], ["updated_at", "2014-08-15 20:34:45.530221"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.548142"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 42], ["text", "Check the [Human Resources page][1] for a list of open jobs. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["updated_at", "2014-08-15 20:34:45.548142"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.564154"], ["in_language", "en"], ["text", "What youth services and activities are available?"], ["updated_at", "2014-08-15 20:34:45.564154"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.583273"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 43], ["text", "Several city departments offer services for youth. You can see the Parks and Recreation listings [here][1]. The Oakland Public Library has many services and listings of services for [kids][2] and [teens][3]. Measure Y youth programs are [here][4]. **Late Night Live** Provides safe places for youth and families late Friday and Saturday nights. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Summer Job Program** Program to employ low-income youth during the summer. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Mentoring Initiative** Program that finds caring adults to work with Foster youth, formerly incarcerated youth and chronically absent youth. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Summer Stars Program** An outdoor camping experience for middle school students from our toughest neighborhoods. Find dates for the next trip at the Summer Star's [website][5]. If you would like to sign up your group for a three day/two night camping trip, please contact us via email at oaklandpal@oaklandpal.org OR call 510-615-5758. **Oakland Police Activities League (PAL)** Program dedicated to offering programs and opportunities for kids to work with positive role models and learn about success and failure without guns and drugs. Offers basketball, track and field, overnight camping, and more. [Oakland PAL Website][6] **Oakland Police Explorers** Program designed for high school students who are at least 14.5 years old and want a chance to see what law enforcement is all about. If you are interested in the Explorer Program at the Oakland Police Department, contact the Explorer Advisors, Officer Mildred Oliver or Officer Jumaal Hill at: ph: 510-615-5758 fax: 510-615-5864 oaklandpal@oaklandpal.org **OK (Our Kids) Program** Program focused on reducing the high incarceration and homicide rates of African-American young men (12-18 years old) by providing needed services to youth, promoting economic self-reliance, and encouraging responsible citizenship. [Website][7] ph: 510-238-7998 okprogram@okprogramofoakland.com **GREAT Program** The Gang Resistance, Education and Training program is a structured, school-based program implemented in areas where gang activity either exists or are emerging. [Website][8] You can also find information about some of the [organizations with which we are partnering to give hope to Oakland's youth][10]. [1]: https://securerw.oaklandnet.com/registrationmain.sdi [2]: http://oaklandlibrary.org/kids [3]: http://oaklandlibrary.org/teens [4]: http://oaklandunite.org/youth/ [5]: http://oaklandpal.org/mayor_quan_summer_stars_camping_program [6]: http://oaklandpal.org/home [7]: http://www.okprogramofoakland.com/ [8]: http://www.great-online.org/ [9]: http://www.oaklandlibrary.org/teens/your-life/mind-body/mental-health-0 [10]: http://www2.oaklandnet.com/Government/o/Mayor/i/EducationLeadership/OAK025457"], ["updated_at", "2014-08-15 20:34:45.583273"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (1.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.600278"], ["in_language", "en"], ["text", "Where can I get free Wi-Fi?"], ["updated_at", "2014-08-15 20:34:45.600278"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.627883"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 44], ["text", "You can use free Wi-Fi at all Oakland Public Library locations. You can see a list of libraries [here][1]. You can use free Wi-Fi inside City Hall at 1 Frank H. Ogawa Plaza, Oakland, CA 94612. [1]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-08-15 20:34:45.627883"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (1.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.643433"], ["in_language", "en"], ["text", "What can and can't I recycle?"], ["updated_at", "2014-08-15 20:34:45.643433"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.659030"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 45], ["text", "You can find a list of what you can and cannot recycle for both residential and commercial services on the [Oakland Recycles website][1]. For recyclable items that are not listed on the Oakland Recycles website, please visit [www.stopwaste.org][2] and use the online Recycling Guide (towards the bottom right side of the Stop Waste web page. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm [2]: http://www.stopwaste.org"], ["updated_at", "2014-08-15 20:34:45.659030"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.673234"], ["in_language", "en"], ["text", "How can I see how my city councilperson voted on a particular issue?"], ["updated_at", "2014-08-15 20:34:45.673234"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.684402"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 46], ["text", "Visit the City Clerk's Legistar search feature at [http://oakland.legistar.com/legislation.aspx][1]. Click on the record number for the legislation in the search results and then on Action Details. [1]: http://oakland.legistar.com/legislation.aspx"], ["updated_at", "2014-08-15 20:34:45.684402"]]
  [1m[35m (3.3ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.704763"], ["in_language", "en"], ["text", "Where do I get a bus pass?"], ["updated_at", "2014-08-15 20:34:45.704763"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.713721"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 47], ["text", "[AC Transit](http://actransit.com) makes bus passes available at many Oakland retail locations, including supermarkets, drug stores, senior centers and news stands. Search for your nearest retail location using your Zip code at [AC Transit's retail locations finder](http://www.actransit.org/rider-info/where-to-buy-a-pass/). Passes can be purchased by mail using the [AC Transit order form](http://www.actransit.org/wp-content/uploads/Ticket_-Order_Form-8.2011.pdf). All AC Transit vehicles accept payments using [Clipper Card](http://www.actransit.org/rider-info/why-clipper/), the Bay Area’s reloadable card for paying transit fares. A Clipper card keeps track of the value on it and automatically deducts the right fare, including transfers and discounts. You can load an AC Transit pass onto a Clipper card, a pass from another agency, or cash value."], ["updated_at", "2014-08-15 20:34:45.713721"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.728396"], ["in_language", "en"], ["text", "How do I register to vote?"], ["updated_at", "2014-08-15 20:34:45.728396"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.737984"], ["in_language", "en"], ["need_to_know", "---------- *Have other questions about how to register to vote, or whether you need to? Go to the [Alameda County Registrar of Voters FAQ Page][1]* [1]: http://www.acgov.org/rov/registrationfaq.htm "], ["question_id", 48], ["text", " **If you just need to register or re-register to vote -- you can do it online!** **Go to the [California Secretary of State's online voter registration page][1].** [1]: http://registertovote.ca.gov/"], ["updated_at", "2014-08-15 20:34:45.737984"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.754979"], ["in_language", "en"], ["text", "Can I speak with a live person at the City for help with a question?"], ["updated_at", "2014-08-15 20:34:45.754979"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.765727"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 49], ["text", "You can call the Oaklanders Assistance Center at (510) 444-CITY, which is (510) 444-2489. Or email your question to [oac@oaklandnet.com][1]. If you prefer, you may visit the center in-person. Office hours are typically 8:30 am to 5pm. [1]: http://mailto:oac@oaklandnet.com"], ["updated_at", "2014-08-15 20:34:45.765727"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.780483"], ["in_language", "en"], ["text", "How much does it cost to ride a bus in Oakland?"], ["updated_at", "2014-08-15 20:34:45.780483"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.797488"], ["in_language", "en"], ["need_to_know", "You might also consider a convenient buss pass. [Click here to see the answer on where to purchase bus passes][1]. [1]: http://answers.oaklandnet.com/quick_answers/where-do-i-get-a-bus-pass"], ["question_id", 50], ["text", "You can find a full detailed listing of bus fares on the AC Transit site [here][1]. * Regular bus fare is $2.10. * Youth bus fare is $1.05 (ages 5-18) * Senior bus fare is $1.05 (ages 65+) [1]: http://www.actransit.org/rider-info/bus-fares/"], ["updated_at", "2014-08-15 20:34:45.797488"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.807148"], ["in_language", "en"], ["text", "Who do I contact if a tree is protruding on to my property?"], ["updated_at", "2014-08-15 20:34:45.807148"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.817976"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 51], ["text", "If there is a tree protruding onto your property you will need to determine if the tree itself is on public or private property. If the tree is on: - **Private Property** - you will need to communicate with the owner and discuss a solution. If the resolution is tree removal, the owner will need to file a [removal permit][1]. - **Public Property** - Please call (510) 615-5566 or submit your request online by clicking here, use the SeeClickFix mobile or web app or email pwacallcenter@oaklandnet.com. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/o/TreeServices/OAK023048"], ["updated_at", "2014-08-15 20:34:45.817976"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.836744"], ["in_language", "en"], ["text", "Does the City have a calendar of fun events?"], ["updated_at", "2014-08-15 20:34:45.836744"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.849113"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 52], ["text", "Visit Oakland, the official destination marketing organization for the City of Oakland, maintains an online event calendar at [www.visitoakland.org][1]. Submit your event information via email to [events@visitoakland.org][2]. [1]: http://www.visitoakland.org [2]: http://mailto:events@visitoakland.org"], ["updated_at", "2014-08-15 20:34:45.849113"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.860279"], ["in_language", "en"], ["text", "How do I get a passport?"], ["updated_at", "2014-08-15 20:34:45.860279"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.874885"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 53], ["text", "To get a passport or to renew your existing passport, visit the U.S. State Department's [website][1] and fill out an application. Then bring your finished application, original birth certificate and check or money order to a local processing center. Visit the following website to find a nearby center. You may need to schedule an appointment. [http://iafdb.travel.state.gov/][2] [1]: http://travel.state.gov/passport/ [2]: http://iafdb.travel.state.gov/"], ["updated_at", "2014-08-15 20:34:45.874885"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.885143"], ["in_language", "en"], ["text", "How can I report an animal nuisance?"], ["updated_at", "2014-08-15 20:34:45.885143"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.898228"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 54], ["text", "If it is an emergency (a vicious dog or an animal in distress), call (510) 777-3333. If it is not an emergency (barking dogs, obnoxious cats, crowing roosters), call (510) 535-5602. Please note that roosters are illegal in Oakland. "], ["updated_at", "2014-08-15 20:34:45.898228"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.915046"], ["in_language", "en"], ["text", "What is the closest park to my house?"], ["updated_at", "2014-08-15 20:34:45.915046"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.930224"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 55], ["text", "You can see a list of all the parks and where they are on a map here[1] [1]: http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm"], ["updated_at", "2014-08-15 20:34:45.930224"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.944821"], ["in_language", "en"], ["text", "What are the closest hiking trails?"], ["updated_at", "2014-08-15 20:34:45.944821"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.959093"], ["in_language", "en"], ["need_to_know", "There are many trails in the hills and various parks. The Parks and Recreation department lists the names of all of their <a href=\"http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm\">parks</a>, as well as various walking tours. You can search for all Bay Area trails near you on an interactive map. <a href=\"http://www.transitandtrails.org/find/trailheads\">Transit to Trails</a> shows many city and county parks, including those that can be reached by public transit. Yelp also lists trails, with reviews: <a href=\"http://www.yelp.com/search?find_desc=Walking+Trails&find_loc=Oakland%2C+CA\">Search Yelp for Walking Trails.</a> "], ["question_id", 56], ["text", ""], ["updated_at", "2014-08-15 20:34:45.959093"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:45.974385"], ["in_language", "en"], ["text", "What is the City's budget process?"], ["updated_at", "2014-08-15 20:34:45.974385"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:45.986589"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 57], ["text", "The City of Oakland operates on a two-year budget cycle and is how City Council establishes its goals, program priorities and desired service levels for the upcoming fiscal period. The City Charter requires the City's budget be balanced -- expenditures must not exceed revenues. The Charter also requires that the budget must be adopted on or before June 30. Budget development and adoption occurs on odd numbered years and mid-cycle budget amendments occur on even numbered years. [Click here to visit the City's web page on the budget process.][1] [1]: http://ttp://www2.oaklandnet.com/Governmacnt/o/CityAdministration/d/BudgetOffice/DOWD005079."], ["updated_at", "2014-08-15 20:34:45.986589"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.003134"], ["in_language", "en"], ["text", "How do you request a bike rack In your neighborhood or commercial street?"], ["updated_at", "2014-08-15 20:34:46.003134"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.019895"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 58], ["text", "You can request a rack on City owned property by filling out the request form. The form asks for information about the address, the business name and your relationship to the business (if available)"], ["updated_at", "2014-08-15 20:34:46.019895"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.029428"], ["in_language", "en"], ["text", "I am behind on my property taxes. Is there a City program that can help?"], ["updated_at", "2014-08-15 20:34:46.029428"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.045939"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 59], ["text", "The City does not assist with the payment of property taxes. Questions about delinquent property taxes should be directed to the Alameda County Treasurer-Tax Collector’s Office at [www.acgov.org/treasurer/][1], or by calling 510.272.6800. The County does offer payment plans. With respect to City liens placed on property taxes, under very limited circumstances, payment plans with the City may be allowed and the lien(s) would be reversed. For more information, contact the Oakland Housing Assistance Center: - Phone: (510) 238-6182 - Email: housingassistance@oaklandnet.com - Address: 250 Frank Ogawa Plaza 6th Floor Oakland, CA 94612 - [http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm][2] [1]: http://www.acgov.org/treasurer/ [2]: http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm"], ["updated_at", "2014-08-15 20:34:46.045939"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.058960"], ["in_language", "en"], ["text", "How do you report a problem with your smartphone."], ["updated_at", "2014-08-15 20:34:46.058960"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.075871"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 60], ["text", "When you are outside and see an issue that the City of Oakland is responsible, take out your smartphone, click a picture, and then report it. This problems gets tracked in the City's database. You get a link to share with your neighbors, while being informed when the City fixes the problem. First download the app - SeeClickFix. You will need to register with SeeClickFix to get an account. Then, you track your reports by going to the web site https://seeclickfix.com. Once you start reporting these issues, you are notified of nearby problems and can support your neighbors efforts to make your neighborhood better."], ["updated_at", "2014-08-15 20:34:46.075871"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (1.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.087151"], ["in_language", "en"], ["text", "How do I contact my Council Member?"], ["updated_at", "2014-08-15 20:34:46.087151"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (2.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.099754"], ["in_language", "en"], ["need_to_know", "If you know your Council district number, the general phone number for each Councilmember is (510) 238-700[# of District]. For example, the phone number for the District 4 Office (Montclair-Laurel-Allendale) is (510) 238-7004. Oakland's At-Large Councilmember's Office phone is (510) 238-7008. The City's naming convention for emaill addresses is first-initial-last-name@oaklandnet.com, for example Councilmember Libby Schaaf's email is lschaaf@oaklandnet.com. If you want to know what Councilmembers serve on a particular Council Committee go [here][4]. If you want to email ALL Councilmembers at once, send to citycouncil@oaklandnet.com . Many Councilmembers have newsletters you can subscribe to and some hold public office hours for drop-in visits."], ["question_id", 61], ["text", "If you don't know who your Councilmember is, use this [locator tool][1] or call the Council Office Front Desk at (510) 238-7584. The [locator tool][2] also provides your Councilmember's email. Links to all Councilmember websites are [here][3]. [1]: http://mapgis.oaklandnet.com/councildistricts/ [2]: http://%20http://mapgis.oaklandnet.com/councildistricts/ [3]: http://www2.oaklandnet.com/Government/o/CityCouncil/index.htm [4]: http://www2.oaklandnet.com/oakca1/groups/cityclerk/documents/webcontent/oak040150.pdf"], ["updated_at", "2014-08-15 20:34:46.099754"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.112622"], ["in_language", "en"], ["text", "Can I apply for more than one City job at a time?"], ["updated_at", "2014-08-15 20:34:46.112622"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (3.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.120888"], ["in_language", "en"], ["need_to_know", "Let's say you've applied to a job before at the [Employment Opportunities][1] page. High five. Your standard information is are all saved with your account in your online profile. Address, past work history, all the stock info is saved. You can use the stored information for your new job with a click of a button and update it as you need to. **However, most jobs have Supplemental Questions that you MUST answer.** These questions are specific and unique. For instance, if I apply for a Park Ranger job and a Park Supervisor job, my resume is going to look pretty much the same and I can use it for both. But the questions asked by the applications for the two jobs are different, so I need to answer those questions differently. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["question_id", 62], ["text", "Yes, you can apply for any City job that is open and apply for as many of them as you like at the same time. But for each position, you have to fill out separate applications since each job posting usually requires information unique to that job – it might be special questions, or you’ll have to attach a copy of a certificate, that sort of thing."], ["updated_at", "2014-08-15 20:34:46.120888"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.135019"], ["in_language", "en"], ["text", "Where can I get help with my taxes?"], ["updated_at", "2014-08-15 20:34:46.135019"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.145285"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 63], ["text", "You can find help with your taxes--for free!--at the following locations: * [American Association Retired Persons (AARP) Foundation Tax-Aide][1] * United Way of Bay Area [SparkPoint Centers][2] * Oakland Public Library [Tax Assistance Program][3] Closer to tax time, visit these organizations: * [The Unity Council][4] * [The East Bay Asian Development Corporation][5] The Internal Revenue Service (IRS) also offers [free tax preparation help][6] on their website. [1]: http://www.aarp.org/money/taxes/aarp_taxaide/ [2]: http://www.uwba.org/cut-poverty/sparkpoint/ [3]: http://www.oaklandlibrary.org/services/tax-assistance-program [4]: http://www.unitycouncil.org/ [5]: http://www.ebaldc.org/ [6]: http://www.irs.gov/Individuals/Free-Tax-Return-Preparation-for-You-by-Volunteers"], ["updated_at", "2014-08-15 20:34:46.145285"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.162195"], ["in_language", "en"], ["text", "How do I get a permit for constructing a building?"], ["updated_at", "2014-08-15 20:34:46.162195"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.177953"], ["in_language", "en"], ["need_to_know", "The type of permit you need to obtain is dependent on the specifics of your project. Before you go, review the [checklist of documents](http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/index.htm) to bring with you in order to apply for your permit. "], ["question_id", 64], ["text", "**Apply in person at the City of Oakland's Building Services Department Permit Center on the second floor of 250 Frank H. Ogawa Plaza, Oakland.** "], ["updated_at", "2014-08-15 20:34:46.177953"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.187562"], ["in_language", "en"], ["text", "When/what are festivals in Oakland?"], ["updated_at", "2014-08-15 20:34:46.187562"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.195890"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 65], ["text", "You can find a list of upcoming and ongoing festivals as well as a general list of fun events taking place in Oakland on the [Visit Oakland Calendar of Festivals page][1]. [1]: http://visitoakland.org/visiting_calendar_of_events.cfm?all=1"], ["updated_at", "2014-08-15 20:34:46.195890"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.211563"], ["in_language", "en"], ["text", "What are the most dangerous areas in Oakland?"], ["updated_at", "2014-08-15 20:34:46.211563"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.222603"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 66], ["text", "The best way to find out what areas of Oakland have the most reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-08-15 20:34:46.222603"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.232949"], ["in_language", "en"], ["text", "What is the best place to live, work, and play?"], ["updated_at", "2014-08-15 20:34:46.232949"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.244562"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 67], ["text", "...the City of Oakland!"], ["updated_at", "2014-08-15 20:34:46.244562"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-15 20:34:46.258147"], ["in_language", "en"], ["text", "I am an Oakland landlord. How can I evict a tenant?"], ["updated_at", "2014-08-15 20:34:46.258147"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-15 20:34:46.273009"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 68], ["text", "**Verify that you are legally allowed to evict the tenant.** ◦ A tenant may be evicted for failing to pay rent. ◦  A tenant may be evicted for violating the lease. ◦  A tenant may be evicted for using the rental unit for an unlawful purpose. ◦  A tenant may be evicted for manufacturing or dealing illegal drugs in the rental unit. ◦  A tenant may be evicted for the unlawful use of a weapon or ammunition. ◦ A tenant may be evicted for materially damaging the rental unit. ◦  A tenant may be evicted for causing a significant nuisance to other tenants. **Serve the tenant with a 3-Day Notice to Pay Rent or Quit form.** ◦ Take the completed form to the tenant and hand it to him or her. If he or she refuses to take it, leave it on the ground near the tenant. ◦ If you are unable to serve it directly to the tenant, leave it with someone who is at least 18 years old at the rental unit or with an adult at the tenant's place of work. A copy must also be mailed to the tenant in this situation. ◦ If unable to serve the form directly to another person, post it on the tenant's door and mail a copy of the form to him or her. **Allow the tenant 3 business days (Monday to Friday) after delivering the notice to remedy the situation.** ◦  The 3-day period begins the day after the notice is served. **File an Unlawful Detainer Complaint, a Civil Case Cover Sheet, and a Pre-judgment Right of Possession form.** ◦ The Unlawful Detainer Complaint can be found at the following URL: http://www.courts.ca.gov/documents/ud100.pdf. This is an eviction notice. ◦  The Civil Case Cover Sheet can be found at the following URL: http://www.courts.ca.gov/documents/cm010.pdf ◦  Submit the paperwork to the courthouse in the county that the property is in. ◦ The County Clerk will give you a Summons and a stamped copy of the Unlawful Detainer Complaint. Make sure you also receive the Pre-judgment Right of Possession form. In some cases, you must provide multiple copies for the Clerk to stamp. **Serve the tenant with the Unlawful Detainer Complaint, the Summons, and the Pre-judgment Right of Possession form.** ◦  Serve these in the same way as you served the 3-day Notice to Pay Rent or Quit form. ◦  The tenant will have 5 days to file a response with you and the court. Post and mail the tenant has 10 days to respond, after the 10 days start counting the 5 days, if no response file for judgement. **Complete the court process.** ◦ If the tenant does not answer within 5 days after being served, request a default judgment from the court. This can be done by submitting a following form to the court. ◦  If a default judgment is issued, you will be given a Writ of Possession. Take this form to the local Sheriff and have him or her evict the tenant. ◦  If the tenant decides to challenge the eviction, you or the tenant may request a trial in front of a judge or jury. The trial will occur within 21 days of the request. ◦ If you win the case, you will be awarded possession of the property and possibly monetary awards. ◦ If you win the case, the court will order the Sheriff to post a notice giving the tenant 5 days to vacate the rental unit. If the tenant does not leave, the Sheriff will forcibly remove him or her. ◦ If the tenant wins the case, he or she will be permitted to remain in the rental unit. You may have to pay his or her court fees and he or she may be ordered to pay any past-due rent. **Store the tenant's items for 2 weeks if he or she is evicted.** ◦ If the tenant leaves items behind, you must store them for 2 weeks and attempt to arrange for the tenant to retrieve them. ◦  If anything remains after this period, you may keep, sell, or dispose of the items. More info: http://www.dca.ca.gov/publications/landlordbook/index.shtml http://www2.oaklandnet.com/oakca/groups/ceda/documents/policy/dowd008116.pdf [1]: http://www.courts.ca.gov/documents/ud100.pdf"], ["updated_at", "2014-08-15 20:34:46.273009"]]
  [1m[35m (1.2ms)[0m  COMMIT


Started GET "/" for 10.0.2.2 at 2014-08-15 20:34:55 +0000
  [1m[35mActiveRecord::SchemaMigration Load (0.8ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (16.2ms)
Completed 200 OK in 174ms (Views: 172.4ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 20:35:02 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 19ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 20:35:02 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (221.4ms)
Completed 200 OK in 1712ms (Views: 1710.9ms | ActiveRecord: 0.0ms)


Started GET "/search?q=budget+process" for 10.0.2.2 at 2014-08-15 20:35:05 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"budget process"}
  [1m[33mQuestion Search (109.3ms)[0m  curl http://localhost:9200/questions_development%2Canswers_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"match":{"_all":{"query":"budget process","operator":"and","boost":10,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"budget process","operator":"and","boost":10,"analyzer":"searchkick_search2"}}},{"match":{"_all":{"query":"budget process","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"budget process","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}}]}},"size":100000,"from":0,"fields":[]}'
Completed 500 Internal Server Error in 147ms

Searchkick::InvalidQueryError ([400] {"error":"SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[rzetMzQ5RPew1ro9schkdw][questions_development][2]: SearchParseException[[questions_development][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[questions_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][questions_development][1]: SearchParseException[[questions_development][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[questions_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][questions_development][4]: SearchParseException[[questions_development][4]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[questions_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][questions_development][3]: SearchParseException[[questions_development][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[questions_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][answers_development][3]: SearchParseException[[answers_development][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[answers_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][answers_development][4]: SearchParseException[[answers_development][4]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[answers_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][answers_development][1]: SearchParseException[[answers_development][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[answers_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][answers_development][2]: SearchParseException[[answers_development][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[answers_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][answers_development][0]: SearchParseException[[answers_development][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[answers_development] [match] analyzer [searchkick_search] not found]; }{[rzetMzQ5RPew1ro9schkdw][questions_development][0]: SearchParseException[[questions_development][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\":{\"dis_max\":{\"queries\":[{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":10,\"analyzer\":\"searchkick_search2\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search\"}}},{\"match\":{\"_all\":{\"query\":\"budget process\",\"operator\":\"and\",\"boost\":1,\"fuzziness\":1,\"max_expansions\":3,\"analyzer\":\"searchkick_search2\"}}}]}},\"size\":100000,\"from\":0,\"fields\":[]}]]]; nested: QueryParsingException[[questions_development] [match] analyzer [searchkick_search] not found]; }]","status":400}):
  app/controllers/search_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (21.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 20:35:11 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)
  [1m[36m (1.1ms)[0m  [1mSELECT COUNT(*) FROM "questions"[0m
  [1m[35m (0.9ms)[0m  SELECT COUNT(*) FROM "answers"
  [1m[33mQuestion Search (35.2ms)[0m  curl http://localhost:9200/questions_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search2"}},{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}]}},"size":100000,"from":0,"fields":[]}'
  [1m[36mQuestion Load (1.9ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1000[0m
  [1m[35mAnswer Load (2.0ms)[0m  SELECT  "answers".* FROM "answers"   ORDER BY "answers"."id" ASC LIMIT 1000
  [1m[33mQuestion Search (147.7ms)[0m  curl http://localhost:9200/questions_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search2"}},{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"license","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}]}},"size":100000,"from":0,"fields":[]}'


Started GET "/search?q=budget+process" for 10.0.2.2 at 2014-08-15 20:36:00 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"budget process"}
  [1m[33mQuestion Search (150.6ms)[0m  curl http://localhost:9200/questions_development%2Canswers_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"match":{"_all":{"query":"budget process","operator":"and","boost":10,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"budget process","operator":"and","boost":10,"analyzer":"searchkick_search2"}}},{"match":{"_all":{"query":"budget process","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"budget process","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}}]}},"size":100000,"from":0,"fields":[]}'
  [1m[36mQuestion Load (3.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (57)[0m
  [1m[35mAnswer Load (0.9ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."id" IN (57)
search-request: IP:10.0.2.2, params[:query]:budget process, QUERY:budget process, FIRST_RESULT:What is the City's budget process?, RESULTS_N:2
  Rendered search/index.html.erb within layouts/application (1.5ms)
  Rendered shared/_search_form.html.erb (1.4ms)
Completed 200 OK in 420ms (Views: 216.8ms | Searchkick: 150.6ms | ActiveRecord: 10.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 20:36:06 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 20:36:06 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (166.8ms)
Completed 200 OK in 1491ms (Views: 1489.8ms | ActiveRecord: 0.0ms)


Started GET "/answers/57" for 10.0.2.2 at 2014-08-15 21:01:48 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"57"}
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 57]]
  [1m[35mAnswer Load (1.1ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 57]]
  Rendered questions/show.html.erb within layouts/application (98.0ms)
  Rendered shared/_search_form.html.erb (1.4ms)
Completed 200 OK in 373ms (Views: 351.4ms | ActiveRecord: 10.0ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-15 21:01:51 +0000
Processing by QuestionsController#index as HTML
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (7.9ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 285ms (Views: 282.5ms | ActiveRecord: 1.1ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 21:01:52 +0000
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (28.5ms)
Completed 200 OK in 297ms (Views: 296.1ms | ActiveRecord: 0.0ms)


Started GET "/search?q=license" for 10.0.2.2 at 2014-08-15 21:22:14 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"license"}
  [1m[33mQuestion Search (53.2ms)[0m  curl http://localhost:9200/questions_development%2Canswers_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"match":{"_all":{"query":"license","operator":"and","boost":10,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"license","operator":"and","boost":10,"analyzer":"searchkick_search2"}}},{"match":{"_all":{"query":"license","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"license","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}}]}},"size":100000,"from":0,"fields":[]}'
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (31, 2)
  [1m[36mAnswer Load (1.1ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."id" IN (2, 31, 26, 8, 6)[0m
search-request: IP:10.0.2.2, params[:query]:license, QUERY:license, FIRST_RESULT:How do I get a marriage license?, RESULTS_N:7
  Rendered search/index.html.erb within layouts/application (2.0ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 344ms (Views: 224.4ms | Searchkick: 53.2ms | ActiveRecord: 1.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-15 21:22:20 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 21:22:20 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (151.3ms)
Completed 200 OK in 507ms (Views: 505.7ms | ActiveRecord: 0.0ms)


Started GET "/answers/2" for 10.0.2.2 at 2014-08-15 21:22:25 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mAnswer Load (1.2ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 2]]
  Rendered questions/show.html.erb within layouts/application (79.8ms)
  Rendered shared/_search_form.html.erb (1.2ms)
Completed 200 OK in 275ms (Views: 256.9ms | ActiveRecord: 9.4ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-15 21:22:29 +0000
Processing by QuestionsController#index as HTML
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (8.1ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 273ms (Views: 270.9ms | ActiveRecord: 1.1ms)


Started GET "/answers/3" for 10.0.2.2 at 2014-08-15 22:20:15 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"3"}
  [1m[35mQuestion Load (1.5ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 3]]
  [1m[36mAnswer Load (1.2ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 3]]
  Rendered questions/show.html.erb within layouts/application (37.4ms)
  Rendered shared/_search_form.html.erb (1.2ms)
Completed 200 OK in 591ms (Views: 566.4ms | ActiveRecord: 13.1ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-15 22:20:19 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.8ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (12.1ms)
  Rendered shared/_search_form.html.erb (1.8ms)
Completed 200 OK in 617ms (Views: 613.2ms | ActiveRecord: 1.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-15 22:20:22 +0000
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.3ms)
  Rendered home/index.html.erb within layouts/application (62.4ms)
Completed 200 OK in 529ms (Views: 527.1ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 14:08:38 +0000


Started GET "/" for 10.0.2.2 at 2014-08-18 14:08:39 +0000
  [1m[36mActiveRecord::SchemaMigration Load (5.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m


Started GET "/" for 10.0.2.2 at 2014-08-18 14:08:39 +0000
Processing by HomeController#index as HTML
  [1m[36mActiveRecord::SchemaMigration Load (2.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  Rendered shared/_autocomplete.html.erb (7.6ms)
  Rendered home/index.html.erb within layouts/application (54.5ms)
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (2.1ms)
  Rendered home/index.html.erb within layouts/application (59.3ms)
  Rendered shared/_autocomplete.html.erb (2.1ms)
  Rendered home/index.html.erb within layouts/application (57.4ms)
Completed 200 OK in 2765ms (Views: 2736.3ms | ActiveRecord: 0.0ms)
Completed 200 OK in 2692ms (Views: 2672.0ms | ActiveRecord: 0.0ms)
Completed 200 OK in 3060ms (Views: 3029.3ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 14:08:48 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 26ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 14:08:48 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (129.6ms)
Completed 200 OK in 1383ms (Views: 1381.7ms | ActiveRecord: 0.0ms)
  [1m[36mActiveRecord::SchemaMigration Load (1.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to ActsAsTaggableOnMigration (20140818141434)
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36m (27.9ms)[0m  [1mCREATE TABLE "tags" ("id" serial primary key, "name" character varying(255)) [0m
  [1m[35m (5.8ms)[0m  CREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "taggable_id" integer, "taggable_type" character varying(255), "tagger_id" integer, "tagger_type" character varying(255), "context" character varying(128), "created_at" timestamp) 
  [1m[36m (1.8ms)[0m  [1mCREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")[0m
  [1m[35m (1.9ms)[0m  CREATE  INDEX  "index_taggings_on_taggable_id_and_taggable_type_and_context" ON "taggings"  ("taggable_id", "taggable_type", "context")
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140818141434"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to AddMissingUniqueIndices (20140818141435)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (1.8ms)[0m  CREATE UNIQUE INDEX  "index_tags_on_name" ON "tags"  ("name")
  [1m[36m (3.9ms)[0m  [1mDROP INDEX "index_taggings_on_tag_id"[0m
  [1m[35m (1.1ms)[0m  DROP INDEX "index_taggings_on_taggable_id_and_taggable_type_and_context"
  [1m[36m (3.0ms)[0m  [1mCREATE UNIQUE INDEX  "taggings_idx" ON "taggings"  ("tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type")[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140818141435"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Migrating to AddTaggingsCounterCacheToTags (20140818141436)
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36m (4.9ms)[0m  [1mALTER TABLE "tags" ADD COLUMN "taggings_count" integer DEFAULT 0[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT  "tags".* FROM "tags"   ORDER BY "tags"."id" ASC LIMIT 1000
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140818141436"]]
  [1m[35m (1.4ms)[0m  COMMIT
Migrating to AddMissingTaggableIndex (20140818141437)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (3.7ms)[0m  CREATE  INDEX  "index_taggings_on_taggable_id_and_taggable_type_and_context" ON "taggings"  ("taggable_id", "taggable_type", "context")
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140818141437"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mQuestion Load (4.9ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35m (1.8ms)[0m  SELECT COUNT(*) FROM "questions"
  [1m[36mQuestion Load (1.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'categories' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 1], ["taggable_type", "Question"]]


Started GET "/" for 10.0.2.2 at 2014-08-18 14:22:11 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007ff248e7a210>):
  app/models/question.rb:4:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:2:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (23.1ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 14:22:15 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007ff2493f5f50>):
  app/models/question.rb:4:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:2:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (2.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (23.3ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 14:23:33 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (27.1ms)
Completed 200 OK in 1818ms (Views: 1798.6ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 14:23:41 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 23ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 14:23:41 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (193.7ms)
Completed 200 OK in 2068ms (Views: 2066.5ms | ActiveRecord: 0.0ms)
  [1m[36mQuestion Load (1.5ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mQuestion Load (1.4ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('duh'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (1.2ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'duh' LIMIT 1
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "duh"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 1 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:41:39.364262"], ["tag_id", 1], ["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[36mQuestion Load (1.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[36mQuestion Load (3.0ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mQuestion Load (1.5ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mQuestion Load (1.3ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mQuestion Load (1.2ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mAnswer Load (9.4ms)[0m  SELECT "answers".* FROM "answers"
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 1]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 2]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 3]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 4]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 5]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 6]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 7]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 8]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 9]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 10]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 11]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 12]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 13]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 14]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 15]]
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 16]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 17]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 18]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 19]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 20]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 21]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 22]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 23]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 24]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 25]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 26]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 27]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 28]]
  [1m[35m (2.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 29]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 30]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 31]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 32]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 33]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 34]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 35]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 36]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 37]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 38]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 39]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 40]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 41]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 42]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 43]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 44]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 45]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 46]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 47]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 48]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 49]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 50]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 51]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 52]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 53]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 54]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 55]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 56]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 57]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 58]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 59]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 60]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 61]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 62]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 63]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 64]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 65]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 66]]
  [1m[35m (2.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 67]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 68]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36mQuestion Load (1.4ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mActsAsTaggableOn::Tagging Load (1.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2[0m  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36mSQL (1.0ms)[0m  [1mUPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) - 1 WHERE "tags"."id" = 1[0m
  [1m[35mSQL (1.0ms)[0m  DELETE FROM "taggings" WHERE "taggings"."id" = $1  [["id", 1]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[36mSQL (1.3ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 1]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 2], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 2], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 2], ["taggable_type", "Question"]]
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 2]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 3], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 3], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 3], ["taggable_type", "Question"]]
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 3]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 4], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 4], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 4], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 4]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 5], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 5], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 5], ["taggable_type", "Question"]]
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 5]]
  [1m[35m (2.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 6], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 6], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 6], ["taggable_type", "Question"]]
  [1m[36mSQL (1.2ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 6]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 7], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 7], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 7], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 7]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 8], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 8], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 8], ["taggable_type", "Question"]]
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 8]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 9], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 9], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 9], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 9]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 10], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 10], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 10], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 10]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 11], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 11], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 11], ["taggable_type", "Question"]]
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 11]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 12], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 12], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 12], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 12]]
  [1m[35m (2.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 13], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 13], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 13], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 13]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 14], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 14], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 14], ["taggable_type", "Question"]]
  [1m[36mSQL (1.3ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 14]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 15], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 15], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 15], ["taggable_type", "Question"]]
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 15]]
  [1m[35m (2.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 16], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 16], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 16], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 16]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 17], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 17], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 17], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 17]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 18], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 18], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 18], ["taggable_type", "Question"]]
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 18]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 19], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 19], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 19], ["taggable_type", "Question"]]
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 19]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 20], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 20], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 20], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 20]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 21], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 21], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 21], ["taggable_type", "Question"]]
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 21]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 22], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 22], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 22], ["taggable_type", "Question"]]
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 22]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 23], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 23], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 23], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 23]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 24], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 24], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 24], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 24]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 25], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 25], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 25], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 25]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 26], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 26], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 26], ["taggable_type", "Question"]]
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 26]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 27], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 27], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 27], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 27]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 28], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 28], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 28], ["taggable_type", "Question"]]
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 28]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 29], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 29], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 29], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 29]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 30], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 30], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 30], ["taggable_type", "Question"]]
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 30]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 31], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 31], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 31], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 31]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 32], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 32], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (2.0ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 32], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 32]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 33], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 33], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 33], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 33]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 34], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 34], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 34], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 34]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 35], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 35], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 35], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 35]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 36], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 36], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 36], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 36]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 37], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 37], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 37], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 37]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.4ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 38], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 38], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 38], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 38]]
  [1m[35m (1.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 39], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 39], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 39], ["taggable_type", "Question"]]
  [1m[36mSQL (1.2ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 39]]
  [1m[35m (2.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 40], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 40], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 40], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 40]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 41], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 41], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 41], ["taggable_type", "Question"]]
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 41]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 42], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.3ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 42], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 42], ["taggable_type", "Question"]]
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 42]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 43], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 43], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 43], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 43]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 44], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 44], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 44], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 44]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 45], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 45], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 45], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 45]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 46], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 46], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 46], ["taggable_type", "Question"]]
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 46]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 47], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 47], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 47], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 47]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 48], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 48], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 48], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 48]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 49], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 49], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 49], ["taggable_type", "Question"]]
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 49]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 50], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 50], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 50], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 50]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 51], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 51], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 51], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 51]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 52], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 52], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 52], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 52]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 53], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 53], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 53], ["taggable_type", "Question"]]
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 53]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 54], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 54], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 54], ["taggable_type", "Question"]]
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 54]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 55], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 55], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 55], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 55]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 56], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 56], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 56], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 56]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 57], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 57], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 57], ["taggable_type", "Question"]]
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 57]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 58], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 58], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 58], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 58]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 59], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 59], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 59], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 59]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 60], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 60], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 60], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 60]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 61], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 61], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 61], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 61]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 62], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 62], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 62], ["taggable_type", "Question"]]
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 62]]
  [1m[35m (2.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 63], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 63], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 63], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 63]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 64], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 64], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 64], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 64]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 65], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 65], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 65], ["taggable_type", "Question"]]
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 65]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 66], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.3ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 66], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 66], ["taggable_type", "Question"]]
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 66]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 67], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.3ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 67], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 67], ["taggable_type", "Question"]]
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 67]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2  [["taggable_id", 68], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 68], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings" INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('categories'))  [["taggable_id", 68], ["taggable_type", "Question"]]
  [1m[36mSQL (1.3ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 68]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:03.627959"], ["in_language", "en"], ["text", "Can I revise my City job application?"], ["updated_at", "2014-08-18 14:57:03.627959"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (1.1ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'employment' LIMIT 1
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "employment"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 69 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:03.688703"], ["tag_id", 2], ["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (2.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:03.770155"], ["in_language", "en"], ["need_to_know", "If you're in the process of applying, you can save your application as you go and ahead any edit part you please. You can even use past applications for new job openings so you don't need to re-enter every single past employment. But once you've hit submit it's \"bon voyage.\""], ["question_id", 69], ["text", "Once you've hit that submit button, your application is locked in. However, you can save and edit applications for jobs that you are currently applying to as well as revise old applications and use them to apply to new jobs. "], ["updated_at", "2014-08-18 14:57:03.770155"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:03.798056"], ["in_language", "en"], ["text", "How do I get a motorcycle license?"], ["updated_at", "2014-08-18 14:57:03.798056"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 70], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 70 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:03.807096"], ["tag_id", 2], ["taggable_id", 70], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:03.822215"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 70], ["text", "Visit the [Motorcycle License Checklist][1] page at the California Department of Motor Vehicles. [1]: http://www.dmv.ca.gov/dl/checklists/mc.htm"], ["updated_at", "2014-08-18 14:57:03.822215"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:03.842641"], ["in_language", "en"], ["text", "Can a person clear their criminal record? How?"], ["updated_at", "2014-08-18 14:57:03.842641"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (1.1ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'transportation' LIMIT 1
  [1m[36mSQL (1.5ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "transportation"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 71], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 71 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:03.861785"], ["tag_id", 3], ["taggable_id", 71], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:03.876058"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 71], ["text", "You can expunge -- or clear convictions from -- your criminal record by petitioning the state in which you were convicted, or the federal government. If you were convicted of crime in the State of California, instructions for the process of filing a Petition for Dismissal are [here][1] and [here][2]. [1]: http://www.courts.ca.gov/1070.htm [2]: http://www.saccourt.ca.gov/criminal/docs/1203-4-dismissal-process.pdf"], ["updated_at", "2014-08-18 14:57:03.876058"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:03.899632"], ["in_language", "en"], ["text", "Can I submit my resume for any future City job openings?"], ["updated_at", "2014-08-18 14:57:03.899632"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 72], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 72 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:03.912704"], ["tag_id", 3], ["taggable_id", 72], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:03.929497"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 72], ["text", "You can file a [Job Interest Card][1] for a specific department within the City of Oakland. After you've filed one you'll get an email when a job opens in that department so you can apply. You cannot file one for a specific job--only by department. Job interest cards last 12 months and then you'll need to re-file them at the above link. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm?action=openjobrequest"], ["updated_at", "2014-08-18 14:57:03.929497"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:03.958848"], ["in_language", "en"], ["text", "Who do I contact if I found a dog?"], ["updated_at", "2014-08-18 14:57:03.958848"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (0.7ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'pets' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "pets"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 73], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 73 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:03.971623"], ["tag_id", 4], ["taggable_id", 73], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:03.989761"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 73], ["text", "The city of Oakland's Animal Services is part of the Oakland Police Department. If you find a dog that you can not keep until you find its owner, call the Oakland Police Department non-emergency number: (510)-777-3333. Open 24 hours per day and 7 days per week. "], ["updated_at", "2014-08-18 14:57:03.989761"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.009926"], ["in_language", "en"], ["text", "Who do I need to inform if I change my address?"], ["updated_at", "2014-08-18 14:57:04.009926"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 74], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 74 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.022332"], ["tag_id", 3], ["taggable_id", 74], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.038438"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 74], ["text", "The City of Oakland does not need to be informed if you change your address, but you may need to contact other government entities if: 1) You've moved and need to change your mailing address. In this case, contact the US Postal Service [here](https://moversguide.usps.com/icoa/home/icoa-main-flow.do?execution=e1s1&_flowId=icoa-main-flow&referral=MG80). 2) You need to change the address on your drivers license. In this case, contact the CA DMV [here](http://www.dmv.ca.gov/faq/genfaq.htm#CHANGEADDRESS). 3) You need to change your voter registration. In this case, find information about how to register online at the CA Secretary of State [here](https://rtv.sos.ca.gov/elections/register-to-vote/). (Note: You need to go through the whole re-registration process even if you are already registered and simply need to change your address. There is a spot to indicate that you are already registered at another address)."], ["updated_at", "2014-08-18 14:57:04.038438"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.070784"], ["in_language", "en"], ["text", "Where are the public swimming pools in Oakland?"], ["updated_at", "2014-08-18 14:57:04.070784"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 75], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 75 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.081678"], ["tag_id", 2], ["taggable_id", 75], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.098288"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 75], ["text", "You can find six public pools in Oakland. - Defremery Pool - 1269 18th Street (510) 238-2205 - East Oakland Sports Center - 9161 Edes Avenue (510) 615-5838 - Fremont Pool - 4550 Foothill Blvd (510) 535-5614 - Lions Pool - 3860 Hanly Road (510) 482-7852 - Live Oak Pool - 1055 MacArthur Blvd (510) 238-2292 - Temescal Pool - 371 45th Street (510) 597-5013 "], ["updated_at", "2014-08-18 14:57:04.098288"]]
  [1m[35m (3.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.118558"], ["in_language", "en"], ["text", "How do I get an Oakland ID card?"], ["updated_at", "2014-08-18 14:57:04.118558"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (0.8ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'trash' LIMIT 1
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "trash"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 76], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 76 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.138162"], ["tag_id", 5], ["taggable_id", 76], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.153062"], ["in_language", "en"], ["need_to_know", "<p>Before your visit, you can {{must??}} make a 30-minute appointment <a href=\"http://..com/locations.html\" target=\"blank\">online or by phone</a>. </p> <p>Oakland's city ID card is identification accepted and respected as a valid residency card by Oakland Police Department, BART Police, Alameda County Sheriffs and other local authorities {{what about city/state/federal service agencies?}}.</p> <p><b>Accepted proof of residency</b> must show your <b>name</b> (or your spouse's, if you bring a certified copy of your marriage certificate {{where do you get this?? what does it cost?? what about civil unions/domestic partnerships??}} and <b>Oakland address</b>, and be <b>dated within the last 30 days</b>:</p> <ol> <li>Utility or services bill</li> <li>Local property tax statement</li> <li>Mortgage payment {{that doesn't make sense, shouldn't it be a mortgage interest payment invoice?}}</li> <li>Bank statement</li> <li>Pay stub</li> <li>Jury summons or court order</li> <li>Federal or state income tax or refund statement</li> <li>Insurance bill</li> <li>Proof of a minor currently enrolled in a local school</li> <li>Written verification by an Oakland-funded {{how are people supposed to know what's Oakland-funded versus county- or state-funded??}} homeless shelter, hospital, health clinic or social services agency of at least 15 days of residency</li> </ol> <p><b>Accepted proof of identity</b>:</br> <ol> <li>US Permanent Resident Card (\"Green Card\")</li> <li>Current US Driver License</li> <li>Current US State Issued ID</li> <li>Current US Military Service ID</li> <li>Mexican Matricula Consular Identification Card</li> <li>Foreign Government Issued National ID Card</li> <li>Foreign Passport</li> <li>Foreign Driver License</li> <li>Foreign Military Service ID</li> <li>Consular Identification Card</li> </ol> </p> <p>If you're 18 and over and provide one of the first six documents above, you can also apply to activate your city ID for use as a pre-paid debit card. Be aware that pre-paid debit card services carry both <a href=\"http://www.oaklandcityid.com/fees.html\" target=\"blank\">monthly and transactional fees</a> that the vendor estimates range from a low end of $15 to a high end of over $27 per month.</p>"], ["question_id", 76], ["text", "<p>You can apply for a city ID card in person at the <a href=\"http://www.oaklandcityid.com/locations.html\" target=\"blank\">City Center or Fruitvale office</a> of <a href=\"http://www.sfglobalsourcing.com/specialties\" target=\"blank\">SF Global LLC</a>, the private company the city has contracted with to provide this service. Oakland's city ID card is available for purchase by Oakland residents 18 years and up {{?? website implies the card is available for at least some minors because it states that the optional financial services are available only to applicants 18 or older}} with proof of residency and identity.</p>"], ["updated_at", "2014-08-18 14:57:04.153062"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.248285"], ["in_language", "en"], ["text", "What can I do when one or more neighbors start to erect large, all enclosing fences? "], ["updated_at", "2014-08-18 14:57:04.248285"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 77], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 77 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.257930"], ["tag_id", 4], ["taggable_id", 77], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.271279"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 77], ["text", "Installing of an over-sized fence requires a permit from building services. For reasons of fire safety and for neighborhood appearance, fences in front yards are limited to a height of three and a half feet, which is the same or six inches higher than fences allowed in many nearby cities in the Bay Area. Fencing in the back and along the sides of a house can be much taller. Visit the Planning and Building Department's [Permit information page][1] for more information. Although it is best to solve neighborhood issues in local groups and neighborhood associations, complaints can be sent to building services and these may result in fines for alternations without permits or variances. To file a Code Enforcement complaint, call (510) 238-3381 or visit the [City Code Enforcement][2] page. [1]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/ [2]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/CityCodeEnforcement/index.htm "], ["updated_at", "2014-08-18 14:57:04.271279"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.302309"], ["in_language", "en"], ["text", "Can I plant a tree in a park?"], ["updated_at", "2014-08-18 14:57:04.302309"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 78], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 78 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.316737"], ["tag_id", 2], ["taggable_id", 78], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.332083"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 78], ["text", "You cannot plant a tree in a public park. "], ["updated_at", "2014-08-18 14:57:04.332083"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.347463"], ["in_language", "en"], ["text", "How can I help the homeless?"], ["updated_at", "2014-08-18 14:57:04.347463"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 79], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 79 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.359001"], ["tag_id", 4], ["taggable_id", 79], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.380752"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 79], ["text", "There are are a number of ways that Oaklanders can help the homeless. You can be involved in city policy, volunteer, make donations, and become an advocate. Throughout the year, the City partners with local organizations for a variety of events. Oakland’s Permanent Access to Housing (PATH) Strategy provides a roadmap for ending homelessness in the City over a period of the next fifteen years. "], ["updated_at", "2014-08-18 14:57:04.380752"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.407019"], ["in_language", "en"], ["text", "How Many People Live In Oakland?"], ["updated_at", "2014-08-18 14:57:04.407019"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 80], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 80 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.427721"], ["tag_id", 5], ["taggable_id", 80], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.448127"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 80], ["text", "The 2010 Census reported Oakland's population as 390,724. The California Department of Finance has estimated Oakland's population on January 1, 2013, as 399,326."], ["updated_at", "2014-08-18 14:57:04.448127"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.462361"], ["in_language", "en"], ["text", "What Council District am I in?"], ["updated_at", "2014-08-18 14:57:04.462361"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 81], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 81 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.474277"], ["tag_id", 5], ["taggable_id", 81], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.489469"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 81], ["text", "Go to [http://mapgis.oaklandnet.com/councildistricts/][1] and enter your address. The map shows how the city is divided into 7 council districts - you can click into any district to see the Councilmember, or you can enter your address in the locator field to see the result. The Councilmember contact information is displayed. [1]: http://mapgis.oaklandnet.com/councildistricts/"], ["updated_at", "2014-08-18 14:57:04.489469"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.507732"], ["in_language", "en"], ["text", "Where can I view a live webcast of City Council Meetings?"], ["updated_at", "2014-08-18 14:57:04.507732"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 82], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 82 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.521691"], ["tag_id", 4], ["taggable_id", 82], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.536322"], ["in_language", "en"], ["need_to_know", "The City of Oakland website can be found at http://www2.oaklandnet.com/"], ["question_id", 82], ["text", " [Oaklandnet.com][1] features [live (real-time streaming) as well as archived video.][2] Streaming video is available in the following formats. View the system requirements below to select the one that is best for you. (Live) [Microsoft Silverlight Users][3] (for PC and Macintosh) (Live) [Realplayer Users][4] Archived Videos and Agendas of the Oakland City Council: [Click here to view agendas, minutes and videos from past Council meetings.][5] [1]: http://www.Oaklandnet.com [2]: http://www2.oaklandnet.com/Government/o/CityCouncil/s/VideoArchive/index.htm [3]: http://oakland.granicus.com/MediaPlayer.php?publish_id=2 [4]: http://helixvideosvr.oaklandnet.com/ramgen/broadcast/encoderstream.rm [5]: http://oakland.legistar.com/calendar.aspx"], ["updated_at", "2014-08-18 14:57:04.536322"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.556381"], ["in_language", "en"], ["text", "How do I report drug dealing?"], ["updated_at", "2014-08-18 14:57:04.556381"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 83], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 83 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.570797"], ["tag_id", 2], ["taggable_id", 83], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.586151"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 83], ["text", "If there is drug dealing in progress you can report it to the Oakland Police Departments non-emergency number -- **510-777-3333**. Make sure to get the incident number. You can also call the Drug Hotline -- **510-238-DRUG/ 238-3784** drug dealing tip-line – you can leave a recorded message that police use for follow-up and to note chronic drug dealing hot spots. Give as much information as possible including gender, race, age, height, weight, clothing, possible location of drugs and associated vehicles."], ["updated_at", "2014-08-18 14:57:04.586151"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (1.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.604977"], ["in_language", "en"], ["text", "Do I need a permit to throw a party?"], ["updated_at", "2014-08-18 14:57:04.604977"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 84], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 84 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.618143"], ["tag_id", 5], ["taggable_id", 84], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.638426"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 84], ["text", "**Times when you DON'T need an event permit** If you are having a party **on you own property** (whether it's inside or outside, whether you rent or own) you don't need a permit to play amplified music or serve alcohol. ---------- **Times when you WILL need an event permit** There are times when you will need a **special permit** to hold an event. Conditions that require a special event permit include: - an event that is open to the public with 50 or more people will be in attendance - events that require street closures (e.g. a block party) - a party where people will be drinking alcohol outside of private property - a party with amplified sound that can be heard beyond your own property ---------- **How to get the permits you need** If you think your party meets the qualifications above then you will need **at least one permit from the City, maybe more.** Almost **all** events require a permit from the Special Activities unit of the City Administrator's Office. In most (not all) cases, you are going to need to prove that you have liability insurance for your proposed event. You can apply for a permit by contacting either of the following staff people: - Nancy Marcus - 510-238-3294 - nmarcus@oaklandnet.com - Jasmine Chan - 510-238-6914 - jchan@oaklandnet.com If your party is going to require a **street closure** then you must you must file an application with the Special Event Unit of the Oakland Police Department. Be sure to file the application with OPD **at least 30 days prior to your event**. To hold a party in a public space (e.g. a City park) you will need to request a reservation with the Office of Parks and Recreation by phone at 510-238-3187 or by email at oprscheduling@oaklandnet.com. "], ["updated_at", "2014-08-18 14:57:04.638426"]]
  [1m[35m (2.3ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.665278"], ["in_language", "en"], ["text", "Who do I contact to get a space at a Farmer's Market?"], ["updated_at", "2014-08-18 14:57:04.665278"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 85], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 85 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.676693"], ["tag_id", 2], ["taggable_id", 85], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.693691"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 85], ["text", "There are different organizations that run the various farmer's markets throughout the city. You can find the contact information for specific farmer's markets through the California Certified Farmer's Market website. [http://www.cafarmersmarkets.com/index.cfm][1] [1]: http://www.cafarmersmarkets.com/index.cfm"], ["updated_at", "2014-08-18 14:57:04.693691"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.710488"], ["in_language", "en"], ["text", "Where is City Hall located?"], ["updated_at", "2014-08-18 14:57:04.710488"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 86], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 86 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.723444"], ["tag_id", 2], ["taggable_id", 86], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.736489"], ["in_language", "en"], ["need_to_know", "Oakland City Hall is conveniently located right off the BART line at the 12th Street/City Center station. For more information about schedules and for a map of the system, visit BART at [www.bart.gov][1] or call (510) 464-7133 (TDD#: (510) 839-2218). City Hall is also accessible via several different bus lines run by AC Transit. For more information about schedules and a system map, visit AC Transit at [www.actransit.org][2] or call (510) 891-4706 (TDD#: (510) 428-2266). Bus lines that serve City Hall include: 1, 1R, 11, 12, 18, 26, 72, 72R, 72M, 58L, 51A and the [free Broadway Shuttle][3]. [1]: http://www.bart.gov [2]: http://www.actransit.dst.cs.us [3]: http://www.meetdowntownoak.com/shuttle.php"], ["question_id", 86], ["text", "**Oakland City Hall**<br> 1 Frank H. Ogawa Plaza<br> Oakland, CA 94612 [![map of oakland city hall][1]](http://mapq.st/146TJoF)<br> Frank H. Ogawa plaza is located on 14th street, between Broadway and Clay. [1]: http://i.imgur.com/DKkMn9M.png "], ["updated_at", "2014-08-18 14:57:04.736489"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.753216"], ["in_language", "en"], ["text", "How can I report students who are skipping school?"], ["updated_at", "2014-08-18 14:57:04.753216"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 87], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 87 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.769202"], ["tag_id", 3], ["taggable_id", 87], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.784392"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 87], ["text", "Truancy Reporting: To report and get help for youth not in school, phone the following. OUSD Police Non-Emergency Line: **510-874-7777**. Be sure to describe youth, their clothing, their location, their activity (any drugs or alcohol use) when calling in. For questions to OUSD police, email: **police@ousd.k12.ca.us** "], ["updated_at", "2014-08-18 14:57:04.784392"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.797668"], ["in_language", "en"], ["text", "How do I get a replacement birth certificate?"], ["updated_at", "2014-08-18 14:57:04.797668"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 88], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 88 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.806769"], ["tag_id", 2], ["taggable_id", 88], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.825523"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 88], ["text", "You have to request a replacement birth certificate from the county where you were born. If you were born in Alameda County, you can find directions for ordering replacement birth certificates [here][1]. [1]: http://www.acgov.org/auditor/clerk/birth2b.htm"], ["updated_at", "2014-08-18 14:57:04.825523"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.841983"], ["in_language", "en"], ["text", "How do I contact my Councilmember?"], ["updated_at", "2014-08-18 14:57:04.841983"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 89], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 89 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.850458"], ["tag_id", 4], ["taggable_id", 89], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.867940"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 89], ["text", "If you know who your councilmember is, you can go to: http://www2.oaklandnet.com/Government/o/ElectedOfficials/index.htm and click on the link for your member. This will take you to a website for that council member and information on who to contact their office , along with support staff If you don't know your representative, you can go to: http://mapgis.oaklandnet.com/councildistricts/ and enter your address for find the link for your representative."], ["updated_at", "2014-08-18 14:57:04.867940"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.885841"], ["in_language", "en"], ["text", "How do I rent a facility?"], ["updated_at", "2014-08-18 14:57:04.885841"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 90], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 90 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.898678"], ["tag_id", 3], ["taggable_id", 90], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.916274"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 90], ["text", "Please call Central Reservations at (510) 238-3187 or review our [Rental Facilities page][1] for additional information. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-08-18 14:57:04.916274"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.930145"], ["in_language", "en"], ["text", "How do I start residential garbage and recycling service in Oakland?"], ["updated_at", "2014-08-18 14:57:04.930145"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 91], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 91 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:04.939214"], ["tag_id", 2], ["taggable_id", 91], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:04.959877"], ["in_language", "en"], ["need_to_know", "To establish residential garbage services and green waste pickup in Oakland: - **If you own your home:** contact Waste Management of Alameda County at (510) 613-8710 to start weekly garbage and yard trimmings/food scraps collection service. - **If you are renting:** contact your landlord or property manager to start weekly garbage and yard trimmings/food scraps collection service. To start weekly recycling collection service for both owners and renters, contact your recycling company: - **North and West Oakland:** Recycling service is provided by California Waste Solutions. Call (510) 836-6200 to subscribe for service or to request a cart. - **East Oakland:** Recycling service is provided by Waste Management of Alameda County. Call (510) 613-8710 to subscribe for service or to request a cart."], ["question_id", 91], ["text", ""], ["updated_at", "2014-08-18 14:57:04.959877"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:04.979569"], ["in_language", "en"], ["text", "Where can I receive language assistance?"], ["updated_at", "2014-08-18 14:57:04.979569"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (0.7ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'education' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "education"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 92], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 92 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.002389"], ["tag_id", 6], ["taggable_id", 92], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.043164"], ["in_language", "en"], ["need_to_know", "The Equal Access Office provides many kinds of language assistance to Oakland residents. [This webpage on the City's website][1] has a list of Language Assistance accommodations, that include: - How to know which city services have language assistance provided - A printable card you can carry with you to help city staff know that you need help in a language other than English **You can contact the Office of Equal Access for more information**<br> 150 Frank H. Ogawa Plaza, 2nd Floor, Oakland, CA 94612<br> phone: (510) 238-6813<br> [equalaccess@oaklandnet.com][2] [1]: http://www2.oaklandnet.com/Government/o/HumanResources/o/EqualAccess/DOWD000747 [2]: mailto:equalaccess@oaklandnet.com"], ["question_id", 92], ["text", "Language assistance can also include: - Interpreters - Assistance from a bilingual staff member (who has received appropriate training) - Multimedia resources (for example, a multilingual CD-Rom) - Multilingual information on web sites - Multilingual telephone information - Translated printed materials"], ["updated_at", "2014-08-18 14:57:05.043164"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.122702"], ["in_language", "en"], ["text", "How much is the City’s total budget?"], ["updated_at", "2014-08-18 14:57:05.122702"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 93], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 93 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.132344"], ["tag_id", 6], ["taggable_id", 93], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.148326"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 93], ["text", "The City’s annual budget across all funds for the current fiscal year (FY 2012-13) is about $1 billion."], ["updated_at", "2014-08-18 14:57:05.148326"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.168061"], ["in_language", "en"], ["text", "How do I report an abandoned vehicle?"], ["updated_at", "2014-08-18 14:57:05.168061"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 94], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 94 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.180083"], ["tag_id", 5], ["taggable_id", 94], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.196895"], ["in_language", "en"], ["need_to_know", "To report abandoned vehicles parked on a public street for over 72 hours, you can: - Call the Abandoned Auto Detail at (510) 777-8622. - Email the location, description, and license number of the vehicle, if known, to AbandonedAuto@oaklandnet.com. To report an abandoned vehicle parked on private property or a private street, you can: - Call the Vehicle Abatement Detail at (510) 777-8538. The Abandoned Auto Detail operates Monday through Friday, 6am to 4pm. "], ["question_id", 94], ["text", ""], ["updated_at", "2014-08-18 14:57:05.196895"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.217173"], ["in_language", "en"], ["text", "What is the City doing to help the homeless?"], ["updated_at", "2014-08-18 14:57:05.217173"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (0.6ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'recycling' LIMIT 1
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "recycling"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 95], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 95 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.238220"], ["tag_id", 7], ["taggable_id", 95], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.253131"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 95], ["text", "The City of Oakland's homeless programs provide housing and services to people in Oakland who are homeless, hungry, HIV/AIDS positive, or living on extremely low incomes. Community Housing Services recognizes the tremendous need for services specific to the homeless population. We partner with non-profit organizations to assist the homeless and near-homeless community with homeless prevention, rapid re-housing, permanent supportive housing, shelter, transitional/supportive housing and special needs housing. We also provide other homeless support services such as food, employment, physical and mental health, drug abuse and domestic violence programs."], ["updated_at", "2014-08-18 14:57:05.253131"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.270370"], ["in_language", "en"], ["text", "How do I request information from the Oakland Police Department"], ["updated_at", "2014-08-18 14:57:05.270370"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 96], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 96 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.286606"], ["tag_id", 3], ["taggable_id", 96], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.300278"], ["in_language", "en"], ["need_to_know", "Your request will either be fulfilled or denied- if it is denied you will be furnished with details of why the request is not being fulfilled. **Public records include:** - Complaints - Crime Reports - Department publications - Employment contracts - Offense reports - Recordings - List item - Traffic accident reports - Traffic enforcement incidents - Training records "], ["question_id", 96], ["text", "You may request certain types of information from the OPD using an Online, mail or in-person process. We highly suggest the online method. **Online** Step 1: Copy the Public Records [request form][1] to your computer Step 2: Save the PDF document to your computer and then complete the details on the PDF document itself. Step 3: Re-SAVE the PDF on your computer with the details completed. Step 4: Email it to [OPDPublicRecordsRequest@oaklandnet.com][2]. **In-Person** Step 1: Picking up a copy of the form in person at the [Police Administration Building][3] Patrol Desk on the first floor. Step 2: Bring the completed form to the OPD Records Division Kiosk on the first floor of the PAB. The Records Kiosk is open to the public from 8:00 am to 3:00 pm Monday through Friday and from 8:00 am until noon on Saturday and Sunday. **By Mail** Send your completed paper form to: Public Records Request Coordinator Oakland Police Department Records Section 455 7th Street, Room 306 Oakland, CA 94607 Contact Information for Assistance If you need additional assistance with a Public Records request, please contact the Public Records Request Coordinator: (510) 238-7143. [1]: http://www2.oaklandnet.com/Government/o/OPD/s/document/DOWD002885 [2]: http://mailto:OPDPublicRecordsRequest@oaklandnet.com?Subject=RecordsRequest [3]: http://maps.google.com/maps?hl=en&source=hp&ie=UTF8&q=oakland%20police%20department&fb=1&gl=us&hq=police%20department&hnear=oakland&ei=FJrfSrydOYWyswPn-IXoCA&ved=0CCsQnQIwBg&view=map&f=d&daddr=455%207th%20St,%20Oakland,%20CA&geocode=CU8p8gFnSfHUFcnGQAIdCD22-A"], ["updated_at", "2014-08-18 14:57:05.300278"]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.318156"], ["in_language", "en"], ["text", "What charter schools are near me?"], ["updated_at", "2014-08-18 14:57:05.318156"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 97], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 97 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.330135"], ["tag_id", 5], ["taggable_id", 97], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.345757"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 97], ["text", "The [Center for Education Reform][1] can help you find charter schools near you. [This link][2] will show a list of all the charter schools in Oakland. You can also focus the list by choosing the grade level or locations you need. [1]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D= [2]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D="], ["updated_at", "2014-08-18 14:57:05.345757"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.360540"], ["in_language", "en"], ["text", "What are the parking holidays in Oakland?"], ["updated_at", "2014-08-18 14:57:05.360540"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 98], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 98 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.370385"], ["tag_id", 5], ["taggable_id", 98], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.388138"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 98], ["text", " The only days when there is no parking enforcement in Oakland are: - New Year's Day (January 1st) - Martin Luther King Jr. Day - President's Day - Memorial Day - Independence Day (July 4th) - Labor Day - Thanksgiving Day - Christmas Day (December 25th)"], ["updated_at", "2014-08-18 14:57:05.388138"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.405723"], ["in_language", "en"], ["text", "How do I get a marriage license?"], ["updated_at", "2014-08-18 14:57:05.405723"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 99], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 99 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.420624"], ["tag_id", 7], ["taggable_id", 99], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.433603"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 99], ["text", "Alameda County will issue you a marriage license is you and your future spouse request one in-person at the County Clerk-Recorder's Office. You can find more information [here][1]. [1]: http://www.acgov.org/auditor/clerk/ml.htm"], ["updated_at", "2014-08-18 14:57:05.433603"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.446835"], ["in_language", "en"], ["text", "Where can I find classes, programs and events that are happening at the library?"], ["updated_at", "2014-08-18 14:57:05.446835"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 100], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 100 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.457454"], ["tag_id", 4], ["taggable_id", 100], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.474439"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 100], ["text", "You can find a listing of library events on the library's website [here][1]. You can also pick up a monthly calendar of events at any [library branch][2]. [1]: http://oaklandlibrary.org/events [2]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-08-18 14:57:05.474439"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (2.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.493472"], ["in_language", "en"], ["text", "How do I get a disabled person parking permit?"], ["updated_at", "2014-08-18 14:57:05.493472"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 101], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 101 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.504811"], ["tag_id", 5], ["taggable_id", 101], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.521972"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 101], ["text", "Disabled parking permits need to be obtained from the California Department of Motor Vehicles. You can find more information and the application form [here](http://www.dmv.ca.gov/pubs/brochures/fast_facts/ffvr07.htm#)."], ["updated_at", "2014-08-18 14:57:05.521972"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.535009"], ["in_language", "en"], ["text", "Are there internships at the City?"], ["updated_at", "2014-08-18 14:57:05.535009"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 102], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 102 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.547886"], ["tag_id", 7], ["taggable_id", 102], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.567291"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 102], ["text", "You can find more information on City internships on the City of Oakland website. Different departments (including the [City Auditor][1], and the [Public Ethics Commission][2]) offer internships which can be found posted on the individual department's website. Go to the City of Oakland website, and search \"[internship][3]\". [1]: http://www.oaklandauditor.com/en/ruby/careers/40 [2]: http://www2.oaklandnet.com/Government/o/CityAdministration/d/PublicEthics/internships/index.htm [3]: http://www2.oaklandnet.com/Search/index.htm?cx=017801668647536616097:grdicmryz10&cof=FORID:10&ie=UTF-8&q=internship&sa=Search"], ["updated_at", "2014-08-18 14:57:05.567291"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.586945"], ["in_language", "en"], ["text", "How can I rent event space in Oakland?"], ["updated_at", "2014-08-18 14:57:05.586945"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 103], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 103 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.599848"], ["tag_id", 3], ["taggable_id", 103], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.616575"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 103], ["text", "Oakland Parks & Recreation offers rental facilities, listed here: [http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm][1] There are also private facilities available to rent in Oakland. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-08-18 14:57:05.616575"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.630188"], ["in_language", "en"], ["text", "Where can I get tax forms?"], ["updated_at", "2014-08-18 14:57:05.630188"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 104], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 104 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.639124"], ["tag_id", 7], ["taggable_id", 104], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.657946"], ["in_language", "en"], ["need_to_know", "If you would like to download tax forms online: Federal tax forms are available from the Internal Revenue Service. Many of the frequently used Federal tax forms can be found at http://www.irs.gov/uac/Forms,-Publications,-and-Other-Tax-Products. State tax forms are available from the State of California’s Franchise Tax Board. Many of the frequently used state tax forms can be found at https://www.ftb.ca.gov/forms/search/index.aspx."], ["question_id", 104], ["text", "You can find tax forms at the [Oakland Public Library][1] (like the 1040 EZ tax form). Some are in print form, and others can be printed by a library staff member (printing charges may apply). Before you go, it's helpful to bring the exact form number you need so the library staff member can find it with ease. If you don't have the form number, not to worry: a staff member is happy to help. To find an Oakland Public Library location near you, [look at the map][2]. [1]: http://www.oaklandlibrary.org/using-library/locations-hours [2]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5"], ["updated_at", "2014-08-18 14:57:05.657946"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.672594"], ["in_language", "en"], ["text", "What are the safest areas in Oakland?"], ["updated_at", "2014-08-18 14:57:05.672594"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 105], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 105 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.682388"], ["tag_id", 2], ["taggable_id", 105], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.697939"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 105], ["text", "The best way to find out what areas of Oakland have the fewest reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-08-18 14:57:05.697939"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.718181"], ["in_language", "en"], ["text", "Are there any sex offenders in my neighborhood?"], ["updated_at", "2014-08-18 14:57:05.718181"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 106], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 106 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.730237"], ["tag_id", 5], ["taggable_id", 106], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.747742"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 106], ["text", "You can search for your address on the [Meghan's Law Website][1] to find registered sex offenders that live nearby. Before you search the map, you have to click \"continue\" at the bottom of the first page, then click the check box and \"continue\" at the bottom of the second page. Then you will see a map of California and you can search for your address by clicking on the \"address\" box on the left side of the page. [1]: http://www.meganslaw.ca.gov/"], ["updated_at", "2014-08-18 14:57:05.747742"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.763966"], ["in_language", "en"], ["text", "What do I do if my car has been towed?"], ["updated_at", "2014-08-18 14:57:05.763966"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 107], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 107 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.774266"], ["tag_id", 6], ["taggable_id", 107], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.790740"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 107], ["text", "If you think your car has been towed, first check the A&B Towing site (http://www.abimpound.com/towed.html) to see if they know. You should also call the Police Department Records Division at (510) 238-3021 to confirm your car has been towed. If it has been towed, you can go to the Records Division, 3rd floor, Police Administration Building, 455 7th Street (at Broadway) to get a Release Form for your vehicle."], ["updated_at", "2014-08-18 14:57:05.790740"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.806337"], ["in_language", "en"], ["text", "Where is the closest public library?"], ["updated_at", "2014-08-18 14:57:05.806337"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 108], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 108 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.815719"], ["tag_id", 2], ["taggable_id", 108], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.829507"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 108], ["text", "To see a map of all of the Oakland Public Libraries, go [here][1]. You can click on each dot to see the address, phone number and hours. You can find a list of library locations on the Oakland Public Library Website [here][2]. If you are looking for a library close to where you are right now, no matter where you are, you can click [here][3]. [1]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5 [2]: http://oaklandlibrary.org/using-library/locations-hours [3]: https://maps.google.com/maps?ie=UTF-8&q=closest%20public%20library"], ["updated_at", "2014-08-18 14:57:05.829507"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.845520"], ["in_language", "en"], ["text", "Where are the recycling centers located?"], ["updated_at", "2014-08-18 14:57:05.845520"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 109], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 109 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.858388"], ["tag_id", 4], ["taggable_id", 109], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.876634"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 109], ["text", "Here's a [directory of recycling drop off centers in and around Oakland][1]. For more information about recycling in Oakland, visit [www.oaklandrecycles.com][2]. [1]: http://www2.oaklandnet.com/oakca/groups/pwa/documents/form/oak027311.pdf [2]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm"], ["updated_at", "2014-08-18 14:57:05.876634"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.888520"], ["in_language", "en"], ["text", "What are the current job openings at the City?"], ["updated_at", "2014-08-18 14:57:05.888520"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 110], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 110 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.899625"], ["tag_id", 5], ["taggable_id", 110], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.916245"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 110], ["text", "Check the [Human Resources page][1] for a list of open jobs. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["updated_at", "2014-08-18 14:57:05.916245"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.929698"], ["in_language", "en"], ["text", "What youth services and activities are available?"], ["updated_at", "2014-08-18 14:57:05.929698"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 111], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 111 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.938521"], ["tag_id", 4], ["taggable_id", 111], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:05.951094"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 111], ["text", "Several city departments offer services for youth. You can see the Parks and Recreation listings [here][1]. The Oakland Public Library has many services and listings of services for [kids][2] and [teens][3]. Measure Y youth programs are [here][4]. **Late Night Live** Provides safe places for youth and families late Friday and Saturday nights. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Summer Job Program** Program to employ low-income youth during the summer. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Mentoring Initiative** Program that finds caring adults to work with Foster youth, formerly incarcerated youth and chronically absent youth. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Summer Stars Program** An outdoor camping experience for middle school students from our toughest neighborhoods. Find dates for the next trip at the Summer Star's [website][5]. If you would like to sign up your group for a three day/two night camping trip, please contact us via email at oaklandpal@oaklandpal.org OR call 510-615-5758. **Oakland Police Activities League (PAL)** Program dedicated to offering programs and opportunities for kids to work with positive role models and learn about success and failure without guns and drugs. Offers basketball, track and field, overnight camping, and more. [Oakland PAL Website][6] **Oakland Police Explorers** Program designed for high school students who are at least 14.5 years old and want a chance to see what law enforcement is all about. If you are interested in the Explorer Program at the Oakland Police Department, contact the Explorer Advisors, Officer Mildred Oliver or Officer Jumaal Hill at: ph: 510-615-5758 fax: 510-615-5864 oaklandpal@oaklandpal.org **OK (Our Kids) Program** Program focused on reducing the high incarceration and homicide rates of African-American young men (12-18 years old) by providing needed services to youth, promoting economic self-reliance, and encouraging responsible citizenship. [Website][7] ph: 510-238-7998 okprogram@okprogramofoakland.com **GREAT Program** The Gang Resistance, Education and Training program is a structured, school-based program implemented in areas where gang activity either exists or are emerging. [Website][8] You can also find information about some of the [organizations with which we are partnering to give hope to Oakland's youth][10]. [1]: https://securerw.oaklandnet.com/registrationmain.sdi [2]: http://oaklandlibrary.org/kids [3]: http://oaklandlibrary.org/teens [4]: http://oaklandunite.org/youth/ [5]: http://oaklandpal.org/mayor_quan_summer_stars_camping_program [6]: http://oaklandpal.org/home [7]: http://www.okprogramofoakland.com/ [8]: http://www.great-online.org/ [9]: http://www.oaklandlibrary.org/teens/your-life/mind-body/mental-health-0 [10]: http://www2.oaklandnet.com/Government/o/Mayor/i/EducationLeadership/OAK025457"], ["updated_at", "2014-08-18 14:57:05.951094"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:05.970733"], ["in_language", "en"], ["text", "Where can I get free Wi-Fi?"], ["updated_at", "2014-08-18 14:57:05.970733"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 112], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 112 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:05.983840"], ["tag_id", 7], ["taggable_id", 112], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.003754"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 112], ["text", "You can use free Wi-Fi at all Oakland Public Library locations. You can see a list of libraries [here][1]. You can use free Wi-Fi inside City Hall at 1 Frank H. Ogawa Plaza, Oakland, CA 94612. [1]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-08-18 14:57:06.003754"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.025179"], ["in_language", "en"], ["text", "What can and can't I recycle?"], ["updated_at", "2014-08-18 14:57:06.025179"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 113], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 113 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.042922"], ["tag_id", 5], ["taggable_id", 113], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.059718"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 113], ["text", "You can find a list of what you can and cannot recycle for both residential and commercial services on the [Oakland Recycles website][1]. For recyclable items that are not listed on the Oakland Recycles website, please visit [www.stopwaste.org][2] and use the online Recycling Guide (towards the bottom right side of the Stop Waste web page. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm [2]: http://www.stopwaste.org"], ["updated_at", "2014-08-18 14:57:06.059718"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.092900"], ["in_language", "en"], ["text", "How can I see how my city councilperson voted on a particular issue?"], ["updated_at", "2014-08-18 14:57:06.092900"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 114], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 114 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.107766"], ["tag_id", 5], ["taggable_id", 114], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.125416"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 114], ["text", "Visit the City Clerk's Legistar search feature at [http://oakland.legistar.com/legislation.aspx][1]. Click on the record number for the legislation in the search results and then on Action Details. [1]: http://oakland.legistar.com/legislation.aspx"], ["updated_at", "2014-08-18 14:57:06.125416"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.148147"], ["in_language", "en"], ["text", "Where do I get a bus pass?"], ["updated_at", "2014-08-18 14:57:06.148147"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 115], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 115 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.167370"], ["tag_id", 4], ["taggable_id", 115], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.188488"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 115], ["text", "[AC Transit](http://actransit.com) makes bus passes available at many Oakland retail locations, including supermarkets, drug stores, senior centers and news stands. Search for your nearest retail location using your Zip code at [AC Transit's retail locations finder](http://www.actransit.org/rider-info/where-to-buy-a-pass/). Passes can be purchased by mail using the [AC Transit order form](http://www.actransit.org/wp-content/uploads/Ticket_-Order_Form-8.2011.pdf). All AC Transit vehicles accept payments using [Clipper Card](http://www.actransit.org/rider-info/why-clipper/), the Bay Area’s reloadable card for paying transit fares. A Clipper card keeps track of the value on it and automatically deducts the right fare, including transfers and discounts. You can load an AC Transit pass onto a Clipper card, a pass from another agency, or cash value."], ["updated_at", "2014-08-18 14:57:06.188488"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.215904"], ["in_language", "en"], ["text", "How do I register to vote?"], ["updated_at", "2014-08-18 14:57:06.215904"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 116], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 116 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.231831"], ["tag_id", 2], ["taggable_id", 116], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.250610"], ["in_language", "en"], ["need_to_know", "---------- *Have other questions about how to register to vote, or whether you need to? Go to the [Alameda County Registrar of Voters FAQ Page][1]* [1]: http://www.acgov.org/rov/registrationfaq.htm "], ["question_id", 116], ["text", " **If you just need to register or re-register to vote -- you can do it online!** **Go to the [California Secretary of State's online voter registration page][1].** [1]: http://registertovote.ca.gov/"], ["updated_at", "2014-08-18 14:57:06.250610"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (3.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.274380"], ["in_language", "en"], ["text", "Can I speak with a live person at the City for help with a question?"], ["updated_at", "2014-08-18 14:57:06.274380"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 117], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 117 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.295722"], ["tag_id", 2], ["taggable_id", 117], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.314990"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 117], ["text", "You can call the Oaklanders Assistance Center at (510) 444-CITY, which is (510) 444-2489. Or email your question to [oac@oaklandnet.com][1]. If you prefer, you may visit the center in-person. Office hours are typically 8:30 am to 5pm. [1]: http://mailto:oac@oaklandnet.com"], ["updated_at", "2014-08-18 14:57:06.314990"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (7.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.345661"], ["in_language", "en"], ["text", "How much does it cost to ride a bus in Oakland?"], ["updated_at", "2014-08-18 14:57:06.345661"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 118], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 118 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.358739"], ["tag_id", 5], ["taggable_id", 118], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.385667"], ["in_language", "en"], ["need_to_know", "You might also consider a convenient buss pass. [Click here to see the answer on where to purchase bus passes][1]. [1]: http://answers.oaklandnet.com/quick_answers/where-do-i-get-a-bus-pass"], ["question_id", 118], ["text", "You can find a full detailed listing of bus fares on the AC Transit site [here][1]. * Regular bus fare is $2.10. * Youth bus fare is $1.05 (ages 5-18) * Senior bus fare is $1.05 (ages 65+) [1]: http://www.actransit.org/rider-info/bus-fares/"], ["updated_at", "2014-08-18 14:57:06.385667"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.404559"], ["in_language", "en"], ["text", "Who do I contact if a tree is protruding on to my property?"], ["updated_at", "2014-08-18 14:57:06.404559"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 119], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 119 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.415350"], ["tag_id", 4], ["taggable_id", 119], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.431239"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 119], ["text", "If there is a tree protruding onto your property you will need to determine if the tree itself is on public or private property. If the tree is on: - **Private Property** - you will need to communicate with the owner and discuss a solution. If the resolution is tree removal, the owner will need to file a [removal permit][1]. - **Public Property** - Please call (510) 615-5566 or submit your request online by clicking here, use the SeeClickFix mobile or web app or email pwacallcenter@oaklandnet.com. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/o/TreeServices/OAK023048"], ["updated_at", "2014-08-18 14:57:06.431239"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.451640"], ["in_language", "en"], ["text", "Does the City have a calendar of fun events?"], ["updated_at", "2014-08-18 14:57:06.451640"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 120], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 120 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.475759"], ["tag_id", 4], ["taggable_id", 120], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (4.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (2.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.501777"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 120], ["text", "Visit Oakland, the official destination marketing organization for the City of Oakland, maintains an online event calendar at [www.visitoakland.org][1]. Submit your event information via email to [events@visitoakland.org][2]. [1]: http://www.visitoakland.org [2]: http://mailto:events@visitoakland.org"], ["updated_at", "2014-08-18 14:57:06.501777"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.516546"], ["in_language", "en"], ["text", "How do I get a passport?"], ["updated_at", "2014-08-18 14:57:06.516546"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 121], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 121 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.531145"], ["tag_id", 7], ["taggable_id", 121], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.551197"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 121], ["text", "To get a passport or to renew your existing passport, visit the U.S. State Department's [website][1] and fill out an application. Then bring your finished application, original birth certificate and check or money order to a local processing center. Visit the following website to find a nearby center. You may need to schedule an appointment. [http://iafdb.travel.state.gov/][2] [1]: http://travel.state.gov/passport/ [2]: http://iafdb.travel.state.gov/"], ["updated_at", "2014-08-18 14:57:06.551197"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.567375"], ["in_language", "en"], ["text", "How can I report an animal nuisance?"], ["updated_at", "2014-08-18 14:57:06.567375"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 122], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (6.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 122 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.592115"], ["tag_id", 3], ["taggable_id", 122], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.610303"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 122], ["text", "If it is an emergency (a vicious dog or an animal in distress), call (510) 777-3333. If it is not an emergency (barking dogs, obnoxious cats, crowing roosters), call (510) 535-5602. Please note that roosters are illegal in Oakland. "], ["updated_at", "2014-08-18 14:57:06.610303"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.624395"], ["in_language", "en"], ["text", "What is the closest park to my house?"], ["updated_at", "2014-08-18 14:57:06.624395"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 123], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 123 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.644156"], ["tag_id", 3], ["taggable_id", 123], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.659364"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 123], ["text", "You can see a list of all the parks and where they are on a map here[1] [1]: http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm"], ["updated_at", "2014-08-18 14:57:06.659364"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (1.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.685588"], ["in_language", "en"], ["text", "What are the closest hiking trails?"], ["updated_at", "2014-08-18 14:57:06.685588"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 124], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 124 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.699727"], ["tag_id", 7], ["taggable_id", 124], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.716382"], ["in_language", "en"], ["need_to_know", "There are many trails in the hills and various parks. The Parks and Recreation department lists the names of all of their <a href=\"http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm\">parks</a>, as well as various walking tours. You can search for all Bay Area trails near you on an interactive map. <a href=\"http://www.transitandtrails.org/find/trailheads\">Transit to Trails</a> shows many city and county parks, including those that can be reached by public transit. Yelp also lists trails, with reviews: <a href=\"http://www.yelp.com/search?find_desc=Walking+Trails&find_loc=Oakland%2C+CA\">Search Yelp for Walking Trails.</a> "], ["question_id", 124], ["text", ""], ["updated_at", "2014-08-18 14:57:06.716382"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.754272"], ["in_language", "en"], ["text", "What is the City's budget process?"], ["updated_at", "2014-08-18 14:57:06.754272"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 125], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 125 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.764187"], ["tag_id", 4], ["taggable_id", 125], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.778253"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 125], ["text", "The City of Oakland operates on a two-year budget cycle and is how City Council establishes its goals, program priorities and desired service levels for the upcoming fiscal period. The City Charter requires the City's budget be balanced -- expenditures must not exceed revenues. The Charter also requires that the budget must be adopted on or before June 30. Budget development and adoption occurs on odd numbered years and mid-cycle budget amendments occur on even numbered years. [Click here to visit the City's web page on the budget process.][1] [1]: http://ttp://www2.oaklandnet.com/Governmacnt/o/CityAdministration/d/BudgetOffice/DOWD005079."], ["updated_at", "2014-08-18 14:57:06.778253"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.794183"], ["in_language", "en"], ["text", "How do you request a bike rack In your neighborhood or commercial street?"], ["updated_at", "2014-08-18 14:57:06.794183"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 126], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 126 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.805181"], ["tag_id", 7], ["taggable_id", 126], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (1.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.826081"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 126], ["text", "You can request a rack on City owned property by filling out the request form. The form asks for information about the address, the business name and your relationship to the business (if available)"], ["updated_at", "2014-08-18 14:57:06.826081"]]
  [1m[35m (2.2ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.842308"], ["in_language", "en"], ["text", "I am behind on my property taxes. Is there a City program that can help?"], ["updated_at", "2014-08-18 14:57:06.842308"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 127], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 127 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.855103"], ["tag_id", 4], ["taggable_id", 127], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.869343"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 127], ["text", "The City does not assist with the payment of property taxes. Questions about delinquent property taxes should be directed to the Alameda County Treasurer-Tax Collector’s Office at [www.acgov.org/treasurer/][1], or by calling 510.272.6800. The County does offer payment plans. With respect to City liens placed on property taxes, under very limited circumstances, payment plans with the City may be allowed and the lien(s) would be reversed. For more information, contact the Oakland Housing Assistance Center: - Phone: (510) 238-6182 - Email: housingassistance@oaklandnet.com - Address: 250 Frank Ogawa Plaza 6th Floor Oakland, CA 94612 - [http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm][2] [1]: http://www.acgov.org/treasurer/ [2]: http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm"], ["updated_at", "2014-08-18 14:57:06.869343"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.887690"], ["in_language", "en"], ["text", "How do you report a problem with your smartphone."], ["updated_at", "2014-08-18 14:57:06.887690"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 128], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 128 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.907821"], ["tag_id", 6], ["taggable_id", 128], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.922534"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 128], ["text", "When you are outside and see an issue that the City of Oakland is responsible, take out your smartphone, click a picture, and then report it. This problems gets tracked in the City's database. You get a link to share with your neighbors, while being informed when the City fixes the problem. First download the app - SeeClickFix. You will need to register with SeeClickFix to get an account. Then, you track your reports by going to the web site https://seeclickfix.com. Once you start reporting these issues, you are notified of nearby problems and can support your neighbors efforts to make your neighborhood better."], ["updated_at", "2014-08-18 14:57:06.922534"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.943196"], ["in_language", "en"], ["text", "How do I contact my Council Member?"], ["updated_at", "2014-08-18 14:57:06.943196"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 129], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 129 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:06.962643"], ["tag_id", 4], ["taggable_id", 129], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:06.979951"], ["in_language", "en"], ["need_to_know", "If you know your Council district number, the general phone number for each Councilmember is (510) 238-700[# of District]. For example, the phone number for the District 4 Office (Montclair-Laurel-Allendale) is (510) 238-7004. Oakland's At-Large Councilmember's Office phone is (510) 238-7008. The City's naming convention for emaill addresses is first-initial-last-name@oaklandnet.com, for example Councilmember Libby Schaaf's email is lschaaf@oaklandnet.com. If you want to know what Councilmembers serve on a particular Council Committee go [here][4]. If you want to email ALL Councilmembers at once, send to citycouncil@oaklandnet.com . Many Councilmembers have newsletters you can subscribe to and some hold public office hours for drop-in visits."], ["question_id", 129], ["text", "If you don't know who your Councilmember is, use this [locator tool][1] or call the Council Office Front Desk at (510) 238-7584. The [locator tool][2] also provides your Councilmember's email. Links to all Councilmember websites are [here][3]. [1]: http://mapgis.oaklandnet.com/councildistricts/ [2]: http://%20http://mapgis.oaklandnet.com/councildistricts/ [3]: http://www2.oaklandnet.com/Government/o/CityCouncil/index.htm [4]: http://www2.oaklandnet.com/oakca1/groups/cityclerk/documents/webcontent/oak040150.pdf"], ["updated_at", "2014-08-18 14:57:06.979951"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (1.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:06.996809"], ["in_language", "en"], ["text", "Can I apply for more than one City job at a time?"], ["updated_at", "2014-08-18 14:57:06.996809"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 130], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 130 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:07.009389"], ["tag_id", 5], ["taggable_id", 130], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (5.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:07.027595"], ["in_language", "en"], ["need_to_know", "Let's say you've applied to a job before at the [Employment Opportunities][1] page. High five. Your standard information is are all saved with your account in your online profile. Address, past work history, all the stock info is saved. You can use the stored information for your new job with a click of a button and update it as you need to. **However, most jobs have Supplemental Questions that you MUST answer.** These questions are specific and unique. For instance, if I apply for a Park Ranger job and a Park Supervisor job, my resume is going to look pretty much the same and I can use it for both. But the questions asked by the applications for the two jobs are different, so I need to answer those questions differently. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["question_id", 130], ["text", "Yes, you can apply for any City job that is open and apply for as many of them as you like at the same time. But for each position, you have to fill out separate applications since each job posting usually requires information unique to that job – it might be special questions, or you’ll have to attach a copy of a certificate, that sort of thing."], ["updated_at", "2014-08-18 14:57:07.027595"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (1.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:07.045398"], ["in_language", "en"], ["text", "Where can I get help with my taxes?"], ["updated_at", "2014-08-18 14:57:07.045398"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 131], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 131 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:07.058872"], ["tag_id", 4], ["taggable_id", 131], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:07.080192"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 131], ["text", "You can find help with your taxes--for free!--at the following locations: * [American Association Retired Persons (AARP) Foundation Tax-Aide][1] * United Way of Bay Area [SparkPoint Centers][2] * Oakland Public Library [Tax Assistance Program][3] Closer to tax time, visit these organizations: * [The Unity Council][4] * [The East Bay Asian Development Corporation][5] The Internal Revenue Service (IRS) also offers [free tax preparation help][6] on their website. [1]: http://www.aarp.org/money/taxes/aarp_taxaide/ [2]: http://www.uwba.org/cut-poverty/sparkpoint/ [3]: http://www.oaklandlibrary.org/services/tax-assistance-program [4]: http://www.unitycouncil.org/ [5]: http://www.ebaldc.org/ [6]: http://www.irs.gov/Individuals/Free-Tax-Return-Preparation-for-You-by-Volunteers"], ["updated_at", "2014-08-18 14:57:07.080192"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (1.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:07.098137"], ["in_language", "en"], ["text", "How do I get a permit for constructing a building?"], ["updated_at", "2014-08-18 14:57:07.098137"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 132], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 132 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:07.115674"], ["tag_id", 2], ["taggable_id", 132], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:07.131562"], ["in_language", "en"], ["need_to_know", "The type of permit you need to obtain is dependent on the specifics of your project. Before you go, review the [checklist of documents](http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/index.htm) to bring with you in order to apply for your permit. "], ["question_id", 132], ["text", "**Apply in person at the City of Oakland's Building Services Department Permit Center on the second floor of 250 Frank H. Ogawa Plaza, Oakland.** "], ["updated_at", "2014-08-18 14:57:07.131562"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (4.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:07.153070"], ["in_language", "en"], ["text", "When/what are festivals in Oakland?"], ["updated_at", "2014-08-18 14:57:07.153070"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 133], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 133 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:07.165938"], ["tag_id", 4], ["taggable_id", 133], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:07.188223"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 133], ["text", "You can find a list of upcoming and ongoing festivals as well as a general list of fun events taking place in Oakland on the [Visit Oakland Calendar of Festivals page][1]. [1]: http://visitoakland.org/visiting_calendar_of_events.cfm?all=1"], ["updated_at", "2014-08-18 14:57:07.188223"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:07.211675"], ["in_language", "en"], ["text", "What are the most dangerous areas in Oakland?"], ["updated_at", "2014-08-18 14:57:07.211675"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 134], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 134 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:07.220620"], ["tag_id", 7], ["taggable_id", 134], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:07.233940"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 134], ["text", "The best way to find out what areas of Oakland have the most reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-08-18 14:57:07.233940"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:07.247395"], ["in_language", "en"], ["text", "What is the best place to live, work, and play?"], ["updated_at", "2014-08-18 14:57:07.247395"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 135], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 135 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:07.256796"], ["tag_id", 2], ["taggable_id", 135], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:07.274720"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 135], ["text", "...the City of Oakland!"], ["updated_at", "2014-08-18 14:57:07.274720"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-08-18 14:57:07.286406"], ["in_language", "en"], ["text", "I am an Oakland landlord. How can I evict a tenant?"], ["updated_at", "2014-08-18 14:57:07.286406"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 136], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 136 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-08-18 14:57:07.295634"], ["tag_id", 4], ["taggable_id", 136], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-08-18 14:57:07.308829"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 136], ["text", "**Verify that you are legally allowed to evict the tenant.** ◦ A tenant may be evicted for failing to pay rent. ◦  A tenant may be evicted for violating the lease. ◦  A tenant may be evicted for using the rental unit for an unlawful purpose. ◦  A tenant may be evicted for manufacturing or dealing illegal drugs in the rental unit. ◦  A tenant may be evicted for the unlawful use of a weapon or ammunition. ◦ A tenant may be evicted for materially damaging the rental unit. ◦  A tenant may be evicted for causing a significant nuisance to other tenants. **Serve the tenant with a 3-Day Notice to Pay Rent or Quit form.** ◦ Take the completed form to the tenant and hand it to him or her. If he or she refuses to take it, leave it on the ground near the tenant. ◦ If you are unable to serve it directly to the tenant, leave it with someone who is at least 18 years old at the rental unit or with an adult at the tenant's place of work. A copy must also be mailed to the tenant in this situation. ◦ If unable to serve the form directly to another person, post it on the tenant's door and mail a copy of the form to him or her. **Allow the tenant 3 business days (Monday to Friday) after delivering the notice to remedy the situation.** ◦  The 3-day period begins the day after the notice is served. **File an Unlawful Detainer Complaint, a Civil Case Cover Sheet, and a Pre-judgment Right of Possession form.** ◦ The Unlawful Detainer Complaint can be found at the following URL: http://www.courts.ca.gov/documents/ud100.pdf. This is an eviction notice. ◦  The Civil Case Cover Sheet can be found at the following URL: http://www.courts.ca.gov/documents/cm010.pdf ◦  Submit the paperwork to the courthouse in the county that the property is in. ◦ The County Clerk will give you a Summons and a stamped copy of the Unlawful Detainer Complaint. Make sure you also receive the Pre-judgment Right of Possession form. In some cases, you must provide multiple copies for the Clerk to stamp. **Serve the tenant with the Unlawful Detainer Complaint, the Summons, and the Pre-judgment Right of Possession form.** ◦  Serve these in the same way as you served the 3-day Notice to Pay Rent or Quit form. ◦  The tenant will have 5 days to file a response with you and the court. Post and mail the tenant has 10 days to respond, after the 10 days start counting the 5 days, if no response file for judgement. **Complete the court process.** ◦ If the tenant does not answer within 5 days after being served, request a default judgment from the court. This can be done by submitting a following form to the court. ◦  If a default judgment is issued, you will be given a Writ of Possession. Take this form to the local Sheriff and have him or her evict the tenant. ◦  If the tenant decides to challenge the eviction, you or the tenant may request a trial in front of a judge or jury. The trial will occur within 21 days of the request. ◦ If you win the case, you will be awarded possession of the property and possibly monetary awards. ◦ If you win the case, the court will order the Sheriff to post a notice giving the tenant 5 days to vacate the rental unit. If the tenant does not leave, the Sheriff will forcibly remove him or her. ◦ If the tenant wins the case, he or she will be permitted to remain in the rental unit. You may have to pay his or her court fees and he or she may be ordered to pay any past-due rent. **Store the tenant's items for 2 weeks if he or she is evicted.** ◦ If the tenant leaves items behind, you must store them for 2 weeks and attempt to arrange for the tenant to retrieve them. ◦  If anything remains after this period, you may keep, sell, or dispose of the items. More info: http://www.dca.ca.gov/publications/landlordbook/index.shtml http://www2.oaklandnet.com/oakca/groups/ceda/documents/policy/dowd008116.pdf [1]: http://www.courts.ca.gov/documents/ud100.pdf"], ["updated_at", "2014-08-18 14:57:07.308829"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36mQuestion Load (2.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[36mQuestion Load (2.0ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 70], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 71], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 72], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 73], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 74], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 75], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 76], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 77], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 78], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 79], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 80], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 81], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 82], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 83], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 84], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 85], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 86], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 87], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 88], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 89], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 90], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 91], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 92], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 93], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 94], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 95], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 96], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 97], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.2ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 98], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 99], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 100], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 101], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 102], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 103], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 104], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 105], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 106], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 107], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 108], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 109], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 110], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 111], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 112], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 113], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 114], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 115], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 116], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 117], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 118], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 119], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 120], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 121], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 122], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 123], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 124], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 125], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 126], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (2.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 127], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 128], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 129], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 130], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 131], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 132], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 133], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 134], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 135], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 136], ["taggable_type", "Question"]]
  [1m[35mQuestion Load (1.3ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 70], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 71], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 72], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 73], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 74], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 75], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 76], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 77], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 78], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 79], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 80], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 81], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 82], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 83], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 84], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 85], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 86], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 87], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 88], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 89], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 90], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 91], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 92], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 93], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 94], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 95], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 96], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 97], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 98], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 99], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 100], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 101], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 102], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 103], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 104], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 105], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 106], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 107], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 108], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 109], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 110], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 111], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 112], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 113], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 114], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 115], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 116], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 117], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 118], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 119], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 120], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 121], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 122], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 123], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 124], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 125], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 126], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 127], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 128], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 129], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 130], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 131], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 132], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 133], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 134], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)[0m  [["taggable_id", 135], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 136], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id


Started GET "/" for 10.0.2.2 at 2014-08-18 15:50:37 +0000


Started GET "/" for 10.0.2.2 at 2014-08-18 15:50:37 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (2.5ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.3ms)
  Rendered home/index.html.erb within layouts/application (38.9ms)
Completed 200 OK in 319ms (Views: 271.6ms | ActiveRecord: 16.0ms)
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (2.8ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (28.3ms)
Completed 200 OK in 219ms (Views: 191.3ms | ActiveRecord: 13.2ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 15:50:44 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:50:44 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (153.0ms)
Completed 200 OK in 535ms (Views: 529.2ms | ActiveRecord: 1.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:51:11 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (2.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (27.5ms)
Completed 200 OK in 292ms (Views: 287.4ms | ActiveRecord: 2.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 15:51:17 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 24ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:51:17 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (2.2ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (136.9ms)
Completed 200 OK in 611ms (Views: 602.2ms | ActiveRecord: 2.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:52:09 +0000

SyntaxError (/home/vagrant/answers/app/controllers/home_controller.rb:10: syntax error, unexpected tIDENTIFIER, expecting ')'
...:tags).sort_by(:&taggings_count).reverse
...                               ^):
  app/controllers/home_controller.rb:10: syntax error, unexpected tIDENTIFIER, expecting ')'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.5ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:52:22 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (20.4ms)
Completed 200 OK in 285ms (Views: 273.5ms | ActiveRecord: 4.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 15:52:29 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 23ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:52:29 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (3.9ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (223.4ms)
Completed 200 OK in 2067ms (Views: 2017.9ms | ActiveRecord: 17.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:53:16 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (21.0ms)
Completed 200 OK in 204ms (Views: 192.8ms | ActiveRecord: 5.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 15:53:23 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 15:53:23 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (124.3ms)
Completed 200 OK in 492ms (Views: 474.6ms | ActiveRecord: 8.2ms)
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mQuestion Load (1.4ms)[0m  SELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mActsAsTaggableOn::Tag Exists (0.9ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'fud' LIMIT 1
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "tags" ("name", "taggings_count") VALUES ($1, $2) RETURNING "id"[0m  [["name", "fud"], ["taggings_count", 1]]
  [1m[35m (0.9ms)[0m  COMMIT


Started GET "/" for 10.0.2.2 at 2014-08-18 17:10:37 +0000


Started GET "/" for 10.0.2.2 at 2014-08-18 17:10:37 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (4.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (20.7ms)
Completed 200 OK in 305ms (Views: 256.1ms | ActiveRecord: 15.9ms)
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (2.3ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (20.6ms)
Completed 200 OK in 219ms (Views: 201.8ms | ActiveRecord: 8.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 17:10:44 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:10:44 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.7ms)
  Rendered home/index.html.erb within layouts/application (196.4ms)
Completed 200 OK in 693ms (Views: 681.5ms | ActiveRecord: 5.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:11:24 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered home/_category.html.erb (24.9ms)
  Rendered home/index.html.erb within layouts/application (42.0ms)
Completed 500 Internal Server Error in 85ms

ActionView::Template::Error (wrong number of arguments (0 for 1..4)):
    1: <div class="category">
    2:   <span class="left"><a href="/">Fake Link to <%= tag.name %></a></span>
    3:   <p class="right">
    4:   <ul>
    5:     Render 3 Questions Here.
  app/views/home/_category.html.erb:2:in `_app_views_home__category_html_erb__2451429972438325115_70198562980120'
  app/views/home/index.html.erb:32:in `_app_views_home_index_html_erb__1097941360780811165_70198571627360'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (15.9ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:12:18 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered home/index.html.erb within layouts/application (27.5ms)
Completed 500 Internal Server Error in 69ms

ActionView::Template::Error (undefined method `keys' for #<Array:0x007fb0c0d7aa78>):
    29:           <p><%= tag.name %>: <%= tag.taggings_count %></p>
    30:         <% end %>
    31:         
    32:         <%= render partial: 'home/category', locals: tags %>
    33:         <!-- #=
    34:          # TODO: replace with Tag 
    35:          # render partial: 'home/category', collection: popular_categories %>
  app/views/home/index.html.erb:32:in `_app_views_home_index_html_erb__1097941360780811165_70198563102580'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.5ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:12:19 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered home/index.html.erb within layouts/application (23.8ms)
Completed 500 Internal Server Error in 97ms

ActionView::Template::Error (undefined method `keys' for #<Array:0x007fb0db6829a8>):
    29:           <p><%= tag.name %>: <%= tag.taggings_count %></p>
    30:         <% end %>
    31:         
    32:         <%= render partial: 'home/category', locals: tags %>
    33:         <!-- #=
    34:          # TODO: replace with Tag 
    35:          # render partial: 'home/category', collection: popular_categories %>
  app/views/home/index.html.erb:32:in `_app_views_home_index_html_erb__1097941360780811165_70198563102580'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:12:20 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered home/index.html.erb within layouts/application (25.0ms)
Completed 500 Internal Server Error in 79ms

ActionView::Template::Error (undefined method `keys' for #<Array:0x007fb0daa5ebe0>):
    29:           <p><%= tag.name %>: <%= tag.taggings_count %></p>
    30:         <% end %>
    31:         
    32:         <%= render partial: 'home/category', locals: tags %>
    33:         <!-- #=
    34:          # TODO: replace with Tag 
    35:          # render partial: 'home/category', collection: popular_categories %>
  app/views/home/index.html.erb:32:in `_app_views_home_index_html_erb__1097941360780811165_70198563102580'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:13:22 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (14.1ms)
Completed 200 OK in 191ms (Views: 187.2ms | ActiveRecord: 1.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 17:13:28 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 31ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:13:28 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (195.3ms)
Completed 200 OK in 1632ms (Views: 1599.0ms | ActiveRecord: 12.1ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:14:39 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (67.2ms)
Completed 200 OK in 345ms (Views: 333.1ms | ActiveRecord: 5.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 17:14:46 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:14:46 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (191.6ms)
Completed 200 OK in 564ms (Views: 553.0ms | ActiveRecord: 4.6ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:15:10 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (30.6ms)
Completed 200 OK in 293ms (Views: 287.7ms | ActiveRecord: 1.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-18 17:15:15 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-18 17:15:16 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (136.1ms)
Completed 200 OK in 1633ms (Views: 1573.3ms | ActiveRecord: 15.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 15:38:24 +0000


Started GET "/" for 10.0.2.2 at 2014-08-19 15:38:25 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (9.6ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActiveRecord::SchemaMigration Load (1.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (36.1ms)
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (3.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (42.4ms)
Completed 200 OK in 1662ms (Views: 1596.6ms | ActiveRecord: 20.8ms)
Completed 200 OK in 1554ms (Views: 1482.2ms | ActiveRecord: 14.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 15:38:33 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 24ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 15:38:33 +0000


Started GET "/" for 10.0.2.2 at 2014-08-19 15:38:33 +0000
Processing by HomeController#index as */*
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (3.2ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[36mActsAsTaggableOn::Tag Load (3.6ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (39.5ms)
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (219.3ms)
Completed 200 OK in 1585ms (Views: 1517.7ms | ActiveRecord: 13.1ms)
Completed 200 OK in 2399ms (Views: 2347.8ms | ActiveRecord: 16.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 15:38:41 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 36ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 15:38:41 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (185.2ms)
Completed 200 OK in 1498ms (Views: 1457.1ms | ActiveRecord: 13.6ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 16:13:09 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (24.2ms)
Completed 200 OK in 297ms (Views: 292.2ms | ActiveRecord: 1.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 16:13:15 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 21ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 16:13:15 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (188.5ms)
Completed 200 OK in 1644ms (Views: 1605.1ms | ActiveRecord: 15.5ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 18:56:14 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (22.4ms)
Completed 200 OK in 292ms (Views: 279.7ms | ActiveRecord: 4.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 18:56:21 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 18:56:21 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (151.9ms)
Completed 200 OK in 523ms (Views: 518.2ms | ActiveRecord: 1.4ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:22:06 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.7ms)
  Rendered home/index.html.erb within layouts/application (25.9ms)
Completed 200 OK in 290ms (Views: 284.6ms | ActiveRecord: 1.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 19:22:12 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:22:12 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (198.3ms)
Completed 200 OK in 623ms (Views: 617.3ms | ActiveRecord: 2.4ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:24:21 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (17.0ms)
Completed 200 OK in 401ms (Views: 396.1ms | ActiveRecord: 1.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 19:24:26 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:24:27 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.7ms)
  Rendered home/index.html.erb within layouts/application (132.9ms)
Completed 200 OK in 507ms (Views: 492.7ms | ActiveRecord: 5.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:28:34 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (23.4ms)
Completed 200 OK in 431ms (Views: 426.8ms | ActiveRecord: 1.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 19:28:40 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:28:40 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (166.6ms)
Completed 200 OK in 613ms (Views: 601.9ms | ActiveRecord: 4.9ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:29:37 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (28.1ms)
Completed 200 OK in 305ms (Views: 299.6ms | ActiveRecord: 1.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-19 19:29:43 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-19 19:29:43 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (192.1ms)
Completed 200 OK in 622ms (Views: 608.9ms | ActiveRecord: 6.9ms)


Started GET "/" for 10.0.2.2 at 2014-08-20 15:24:19 +0000


Started GET "/" for 10.0.2.2 at 2014-08-20 15:24:20 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (9.0ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActiveRecord::SchemaMigration Load (1.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (34.1ms)
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (2.2ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (41.0ms)
Completed 200 OK in 1826ms (Views: 1763.6ms | ActiveRecord: 19.8ms)
Completed 200 OK in 1711ms (Views: 1652.9ms | ActiveRecord: 12.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-20 15:24:27 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (2.7ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (24.4ms)
Completed 200 OK in 374ms (Views: 364.3ms | ActiveRecord: 2.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-20 15:24:30 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-20 15:24:30 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (138.0ms)
Completed 200 OK in 501ms (Views: 494.6ms | ActiveRecord: 1.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-20 15:28:59 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (24.0ms)
Completed 200 OK in 219ms (Views: 214.2ms | ActiveRecord: 1.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-20 15:29:05 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 37ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-20 15:29:06 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (4.5ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (130.6ms)
Completed 200 OK in 1751ms (Views: 1706.0ms | ActiveRecord: 17.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-20 15:29:22 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (20.3ms)
Completed 200 OK in 298ms (Views: 292.6ms | ActiveRecord: 1.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-20 15:29:28 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 38ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-20 15:29:29 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  Rendered shared/_autocomplete.html.erb (1.5ms)
  Rendered home/index.html.erb within layouts/application (135.1ms)
Completed 200 OK in 1565ms (Views: 1528.5ms | ActiveRecord: 13.7ms)
  [1m[36mQuestion Load (2.8ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mActsAsTaggableOn::Tagging Load (2.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE (taggings.context = ('tags')) AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" IN (69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136)
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE "tags"."id" IN (2, 3, 4, 5, 6, 7)[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.2ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.1ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (2.3ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  [1m[36m (0.8ms)[0m  [1mSELECT COUNT(*) FROM "tags"[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  [1m[36mQuestion Load (14.0ms)[0m  [1mSELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"[0m
  [1m[35mQuestion Load (2.2ms)[0m  SELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[35mQuestion Load (1.7ms)[0m  SELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_counts ASC
PG::UndefinedColumn: ERROR:  column tags.tagging_counts does not exist
LINE 1: ...s" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggi...
                                                             ^
: SELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_counts ASC
  [1m[36mQuestion Load (1.4ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_counts ASC LIMIT 1[0m
PG::UndefinedColumn: ERROR:  column tags.tagging_counts does not exist
LINE 1: ...s" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggi...
                                                             ^
: SELECT  "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_counts ASC LIMIT 1
  [1m[35mQuestion Load (1.3ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_counts ASC LIMIT 1
PG::UndefinedColumn: ERROR:  column tags.tagging_counts does not exist
LINE 1: ...s" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggi...
                                                             ^
: SELECT  "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_counts ASC LIMIT 1
  [1m[36mQuestion Load (2.0ms)[0m  [1mSELECT  "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[36mQuestion Load (1.4ms)[0m  [1mSELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_count ASC[0m
PG::UndefinedColumn: ERROR:  column tags.tagging_count does not exist
LINE 1: ...s" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggi...
                                                             ^
: SELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.tagging_count ASC
  [1m[35mQuestion Load (1.4ms)[0m  SELECT  "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[36mQuestion Load (1.9ms)[0m  [1mSELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggings_count DESC[0m
  [1m[35mQuestion Load (1.9ms)[0m  SELECT "questions".* FROM "questions" INNER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) INNER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggings_count DESC
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 136], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 119], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 129], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 89], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 115], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 77], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 111], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 109], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 100], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 133], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 79], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 127], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 125], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 82], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 73], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 120], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 131], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 85], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 70], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 75], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 78], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 83], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 69], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 86], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 88], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 91], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 105], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 108], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 116], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 117], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 132], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 135], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 101], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 106], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 110], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 113], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 114], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 118], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 84], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 81], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 80], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 76], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 130], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 97], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 98], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 94], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 95], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 72], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 134], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 99], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 112], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 126], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 90], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 87], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 96], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 121], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 122], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 123], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 102], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 103], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 104], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 74], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 124], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 71], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 128], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 93], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1[0m  [["taggable_id", 107], ["taggable_type", "Question"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  ORDER BY "tags"."id" ASC LIMIT 1  [["taggable_id", 92], ["taggable_type", "Question"]]
  [1m[36mSQL (1.3ms)[0m  [1mSELECT "questions"."id" AS t0_r0, "questions"."text" AS t0_r1, "questions"."in_language" AS t0_r2, "questions"."created_at" AS t0_r3, "questions"."updated_at" AS t0_r4, "tags"."id" AS t1_r0, "tags"."name" AS t1_r1, "tags"."taggings_count" AS t1_r2 FROM "questions" LEFT OUTER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) LEFT OUTER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggings_count DESC[0m
  [1m[35mSQL (2.7ms)[0m  SELECT "questions"."id" AS t0_r0, "questions"."text" AS t0_r1, "questions"."in_language" AS t0_r2, "questions"."created_at" AS t0_r3, "questions"."updated_at" AS t0_r4, "tags"."id" AS t1_r0, "tags"."name" AS t1_r1, "tags"."taggings_count" AS t1_r2 FROM "questions" LEFT OUTER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) LEFT OUTER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"  ORDER BY tags.taggings_count DESC
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"[0m
  [1m[36mActsAsTaggableOn::Tagging Load (2.1ms)[0m  [1mSELECT "taggings".* FROM "taggings"[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.4ms)[0m  SELECT "taggings".* FROM "taggings"
  [1m[36mActsAsTaggableOn::Tagging Load (1.8ms)[0m  [1mSELECT  "taggings".* FROM "taggings"   ORDER BY "taggings"."id" ASC LIMIT 1[0m
  [1m[35m (1.1ms)[0m  SELECT COUNT(*) FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question'
  [1m[36mActsAsTaggableOn::Tagging Load (1.4ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question' GROUP BY tag_id[0m
PG::GroupingError: ERROR:  column "taggings.id" must appear in the GROUP BY clause or be used in an aggregate function
LINE 1: SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tagga...
               ^
: SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question' GROUP BY tag_id
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question' GROUP BY tag_id
PG::GroupingError: ERROR:  column "taggings.id" must appear in the GROUP BY clause or be used in an aggregate function
LINE 1: SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tagga...
               ^
: SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question' GROUP BY tag_id
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question' GROUP BY tag_id[0m
PG::GroupingError: ERROR:  column "taggings.id" must appear in the GROUP BY clause or be used in an aggregate function
LINE 1: SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tagga...
               ^
: SELECT "taggings".* FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question' GROUP BY tag_id
  [1m[35m (0.8ms)[0m  SELECT COUNT(*) FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question'
  [1m[36m (1.3ms)[0m  [1mSELECT COUNT("taggings"."taggable_id") FROM "taggings"  WHERE "taggings"."taggable_type" = 'Question'[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.4ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.5ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[36mActsAsTaggableOn::Tag Load (2.3ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (-1.5ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (-3.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (-3.1ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (6.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1[0m
  [1m[35mQuestion Load (1.3ms)[0m  SELECT "questions".* FROM "questions"  GROUP BY tags
PG::UndefinedColumn: ERROR:  column "tags" does not exist
LINE 1: SELECT "questions".* FROM "questions"  GROUP BY tags
                                                        ^
: SELECT "questions".* FROM "questions"  GROUP BY tags
  [1m[36mQuestion Load (-2.6ms)[0m  [1mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mQuestion Load (-2.2ms)[0m  SELECT COUNT(*) FROM "questions"
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT COUNT(alan) FROM "questions"[0m
PG::UndefinedColumn: ERROR:  column "alan" does not exist
LINE 1: SELECT COUNT(alan) FROM "questions"
                     ^
: SELECT COUNT(alan) FROM "questions"
  [1m[36mActsAsTaggableOn::Tag Load (-1.8ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35m (2.3ms)[0m  SELECT DISTINCT(tags) FROM "questions" LEFT OUTER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) LEFT OUTER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"
  [1m[36m (-2.5ms)[0m  [1mSELECT DISTINCT(tags) FROM "questions" LEFT OUTER JOIN "taggings" ON "taggings"."taggable_id" = "questions"."id" AND "taggings"."taggable_type" = 'Question' AND (taggings.context = ('tags')) LEFT OUTER JOIN "tags" ON "tags"."id" = "taggings"."tag_id"[0m
  [1m[35mQuestion Load (1.7ms)[0m  SELECT DISTINCT(tags) FROM "questions"
PG::UndefinedColumn: ERROR:  column "tags" does not exist
LINE 1: SELECT DISTINCT(tags) FROM "questions"
                        ^
: SELECT DISTINCT(tags) FROM "questions"
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT DISTINCT(tags) FROM "questions"[0m
PG::UndefinedColumn: ERROR:  column "tags" does not exist
LINE 1: SELECT DISTINCT(tags) FROM "questions"
                        ^
: SELECT DISTINCT(tags) FROM "questions"
  [1m[35m (1.7ms)[0m  SELECT * FROM questions;
  [1m[36m (1.5ms)[0m  [1mSELECT * FROM questions;[0m
  [1m[35m (1.6ms)[0m  SELECT * FROM questions;
  [1m[36m (1.0ms)[0m  [1mSELECT * FROM questions;[0m
  [1m[35m (1.4ms)[0m  SELECT * FROM questions;
  [1m[36mQuestion Load (5.9ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mActsAsTaggableOn::Tagging Load (9.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE (taggings.context = ('tags')) AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" IN (69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136)
  [1m[36mActsAsTaggableOn::Tag Load (4.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE "tags"."id" IN (2, 3, 4, 5, 6, 7)[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.5ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.1ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 4
  [1m[36mActsAsTaggableOn::Tag Load (2.2ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.4ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1 OFFSET 1
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1 OFFSET 2[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.2ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1 OFFSET 3
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4, 2, 5, 3)[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" INNER JOIN "taggings" ON "taggings"."tag_id" = "tags"."id" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1[0m
PG::DuplicateAlias: ERROR:  table name "taggings" specified more than once
: SELECT  tags.*, taggings.tags_count AS count FROM "tags" INNER JOIN "taggings" ON "taggings"."tag_id" = "tags"."id" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4, 2, 5, 3)[0m


Started GET "/" for 10.0.2.2 at 2014-08-21 15:24:48 +0000


Started GET "/" for 10.0.2.2 at 2014-08-21 15:24:48 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.3ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (55.0ms)
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (3.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (55.2ms)
Completed 200 OK in 1741ms (Views: 1673.9ms | ActiveRecord: 14.0ms)
Completed 200 OK in 1642ms (Views: 1582.7ms | ActiveRecord: 15.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:24:51 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (29.9ms)
Completed 200 OK in 301ms (Views: 297.8ms | ActiveRecord: 1.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 15:24:57 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:24:58 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (245.0ms)
Completed 200 OK in 567ms (Views: 563.5ms | ActiveRecord: 2.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:25:08 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  Rendered home/index.html.erb within layouts/application (27.9ms)
Completed 500 Internal Server Error in 85ms

ActionView::Template::Error (undefined method `uppercase' for "pets":String):
    27:       <div class="pop-categories" id="tags">
    28:         <% tags.each do |tag| %>
    29:           <div class="category">
    30:             <span class="left"><a href="/"><%= tag.name.uppercase %></a></span>
    31:             <p class="right">
    32:             <ul>
    33:               <p><a href="/">A Link</a></p>
  app/views/home/index.html.erb:30:in `block in _app_views_home_index_html_erb___3310061566223869830_70269559891620'
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb___3310061566223869830_70269559891620'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (15.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:25:34 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (18.7ms)
Completed 200 OK in 215ms (Views: 211.3ms | ActiveRecord: 1.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 15:25:41 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 37ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:25:41 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (171.1ms)
Completed 200 OK in 675ms (Views: 669.1ms | ActiveRecord: 1.4ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:26:43 +0000
Processing by HomeController#index as HTML
  Rendered home/index.html.erb within layouts/application (2.0ms)
Completed 500 Internal Server Error in 69ms

SyntaxError (/home/vagrant/answers/app/views/home/index.html.erb:33: syntax error, unexpected keyword_do_block, expecting keyword_end
'.freeze;               tag.taggings[0..2] do |question| 
                                             ^
/home/vagrant/answers/app/views/home/index.html.erb:47: syntax error, unexpected keyword_ensure, expecting end-of-input):
  app/views/home/index.html.erb:33: syntax error, unexpected keyword_do_block, expecting keyword_end
  app/views/home/index.html.erb:47: syntax error, unexpected keyword_ensure, expecting end-of-input
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.7ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:26:56 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  Rendered home/index.html.erb within layouts/application (93.1ms)
Completed 500 Internal Server Error in 165ms

ActionView::Template::Error (undefined method `text' for #<ActsAsTaggableOn::Tagging:0x007fd1d0b939e0>):
    31:             <p class="right">
    32:             <ul>
    33:               <% tag.taggings[0..2].each do |question| %>
    34:                 <p><a href="/"><%= question.text %></a></p>
    35:               <% end %>
    36:             </ul>
    37:             </p>
  app/views/home/index.html.erb:34:in `block (2 levels) in _app_views_home_index_html_erb___3310061566223869830_70269560562720'
  app/views/home/index.html.erb:33:in `each'
  app/views/home/index.html.erb:33:in `block in _app_views_home_index_html_erb___3310061566223869830_70269560562720'
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb___3310061566223869830_70269560562720'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.4ms)
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 1
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4, 2, 5, 3)[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]


Started GET "/" for 10.0.2.2 at 2014-08-21 15:30:08 +0000
Processing by HomeController#index as HTML
  Rendered home/index.html.erb within layouts/application (53.2ms)
Completed 500 Internal Server Error in 119ms

ActionView::Template::Error (undefined local variable or method `tags_with_questions' for #<#<Class:0x007fd1d02b6750>:0x007fd1d12291d8>):
    25:         <h2>Most Popular Tags:</h2>
    26:       </div>
    27:       <div class="pop-categories" id="tags">
    28:         <% tags_with_questions.each do |tag| %>
    29:           <div class="category">
    30:             <span class="left"><a href="/"><%= tag[:tag].name.capitalize %></a></span>
    31:             <p class="right">
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb___3310061566223869830_70269566811200'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:30:29 +0000
Processing by HomeController#index as HTML
  Rendered home/index.html.erb within layouts/application (58.7ms)
Completed 500 Internal Server Error in 120ms

ActionView::Template::Error (undefined local variable or method `tags_with_questions' for #<#<Class:0x007fd1d02b6750>:0x007fd1b8ed99c8>):
    25:         <h2>Most Popular Tags:</h2>
    26:       </div>
    27:       <div class="pop-categories" id="tags">
    28:         <% tags_with_questions.each do |tag| %>
    29:           <div class="category">
    30:             <span class="left"><a href="/"><%= tag[:tag].name.capitalize %></a></span>
    31:             <p class="right">
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb___3310061566223869830_70269566811200'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:30:30 +0000
Processing by HomeController#index as HTML
  Rendered home/index.html.erb within layouts/application (42.6ms)
Completed 500 Internal Server Error in 83ms

ActionView::Template::Error (undefined local variable or method `tags_with_questions' for #<#<Class:0x007fd1d02b6750>:0x007fd1ca9ebd00>):
    25:         <h2>Most Popular Tags:</h2>
    26:       </div>
    27:       <div class="pop-categories" id="tags">
    28:         <% tags_with_questions.each do |tag| %>
    29:           <div class="category">
    30:             <span class="left"><a href="/"><%= tag[:tag].name.capitalize %></a></span>
    31:             <p class="right">
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb___3310061566223869830_70269566811200'
  app/controllers/home_controller.rb:11:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (0.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.4ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:32:13 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (2.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (28.5ms)
Completed 200 OK in 1266ms (Views: 1210.3ms | ActiveRecord: 13.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 15:32:21 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:32:22 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (223.4ms)
Completed 200 OK in 722ms (Views: 715.2ms | ActiveRecord: 2.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:33:13 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (3.5ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (30.1ms)
Completed 200 OK in 1539ms (Views: 1472.4ms | ActiveRecord: 14.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 15:33:22 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 31ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:33:22 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (3.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  Rendered shared/_autocomplete.html.erb (1.4ms)
  Rendered home/index.html.erb within layouts/application (157.4ms)
Completed 200 OK in 1788ms (Views: 1740.6ms | ActiveRecord: 15.4ms)
  [1m[36mActsAsTaggableOn::Tag Load (2.3ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 73]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 73]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 73]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 73]]


Started GET "/" for 10.0.2.2 at 2014-08-21 15:40:07 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (2.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 73]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 77]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 79]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 82]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 69]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 70]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 75]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 78]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 76]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 80]]
  [1m[35mQuestion Load (0.5ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 81]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 84]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 71]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 72]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 74]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 87]]
  Rendered shared/_autocomplete.html.erb (1.4ms)
  Rendered home/index.html.erb within layouts/application (31.3ms)
Completed 200 OK in 1364ms (Views: 1213.6ms | ActiveRecord: 28.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 15:40:16 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 29ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:40:17 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 73]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 77]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 79]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 82]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 69]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 70]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 75]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 78]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 76]]
  [1m[35mQuestion Load (0.5ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 80]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 81]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 84]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 71]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 72]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 74]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 87]]
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (240.1ms)
Completed 200 OK in 2077ms (Views: 1923.1ms | ActiveRecord: 29.1ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:44:06 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 73]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 77]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 79]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 82]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 69]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 70]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 75]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 78]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 76]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 80]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 81]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 84]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 71]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 72]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 74]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 87]]
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (26.6ms)
Completed 200 OK in 278ms (Views: 229.2ms | ActiveRecord: 15.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 15:44:12 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:44:13 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 73]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 77]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 79]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 82]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.4ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 69]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 70]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 75]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 78]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 76]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 80]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 81]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 84]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 71]]
  [1m[36mQuestion Load (1.3ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 72]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 74]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 87]]
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (258.2ms)
Completed 200 OK in 669ms (Views: 625.0ms | ActiveRecord: 16.3ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:48:02 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (2.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.4ms)
  Rendered home/index.html.erb within layouts/application (29.8ms)
Completed 200 OK in 1325ms (Views: 1188.9ms | ActiveRecord: 22.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 15:48:11 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 32ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 15:48:11 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (3.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (2.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (2.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (187.9ms)
Completed 200 OK in 1707ms (Views: 1563.2ms | ActiveRecord: 26.1ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 16:01:16 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (16.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.3ms)
  Rendered home/index.html.erb within layouts/application (30.4ms)
Completed 200 OK in 1525ms (Views: 1362.1ms | ActiveRecord: 37.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 16:01:24 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 19ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 16:01:25 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (1.2ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (166.5ms)
Completed 200 OK in 1606ms (Views: 1478.9ms | ActiveRecord: 20.4ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 17:05:03 +0000

ActionController::RoutingError (No route matches [GET] "/tags"):
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_route.html.erb (13.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_table.html.erb (21.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (68.7ms)


Started GET "/tags/show" for 10.0.2.2 at 2014-08-21 17:05:37 +0000
Processing by TagsController#show as HTML
  Rendered tags/show.html.erb within layouts/application (0.8ms)
  Rendered shared/_search_form.html.erb (1.4ms)
Completed 200 OK in 286ms (Views: 285.0ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 17:05:44 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 17:05:44 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (156.5ms)
Completed 200 OK in 580ms (Views: 545.3ms | ActiveRecord: 14.3ms)


Started GET "/tags/index" for 10.0.2.2 at 2014-08-21 17:14:37 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.4ms)
  Rendered tags/index.html.erb within layouts/application (77.1ms)
Completed 500 Internal Server Error in 118ms

ActionView::Template::Error (undefined local variable or method `categories' for #<#<Class:0x007f7239bb5168>:0x007f7239bb4628>):
    14:           <h1>Listing of All Categories</h1>
    15:         </div>
    16:         <ul>
    17:           <% categories.each do |category| %>
    18:             <li class="category-listing">
    19:               <%
    20:               #= content_tag( :h2, link_to(category.name, category) ) 
  app/views/tags/index.html.erb:17:in `_app_views_tags_index_html_erb___3681562605074235312_70064285849540'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (14.8ms)


Started GET "/tags/index" for 10.0.2.2 at 2014-08-21 17:14:57 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.8ms)
  Rendered tags/index.html.erb within layouts/application (19.7ms)
  Rendered shared/_search_form.html.erb (0.6ms)
Completed 200 OK in 221ms (Views: 220.0ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 17:15:03 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 21ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 17:15:04 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (125.2ms)
Completed 200 OK in 1367ms (Views: 1263.7ms | ActiveRecord: 20.6ms)


Started GET "/tags/index" for 10.0.2.2 at 2014-08-21 17:20:39 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.7ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (19.4ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 200ms (Views: 198.2ms | ActiveRecord: 0.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 17:20:46 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 29ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 17:20:47 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.3ms)
  Rendered home/index.html.erb within layouts/application (215.2ms)
Completed 200 OK in 1935ms (Views: 1836.3ms | ActiveRecord: 20.9ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 18:40:02 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)


  Rendered shared/_autocomplete.html.erb (1.4ms)
Started GET "/" for 10.0.2.2 at 2014-08-21 18:40:02 +0000
  Rendered home/index.html.erb within layouts/application (29.4ms)
Completed 200 OK in 344ms (Views: 307.2ms | ActiveRecord: 12.9ms)
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.5ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (42.2ms)
Completed 200 OK in 1423ms (Views: 1287.0ms | ActiveRecord: 20.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 18:40:10 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 18:40:11 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (245.0ms)
Completed 200 OK in 835ms (Views: 795.7ms | ActiveRecord: 13.4ms)


Started GET "/tags/index" for 10.0.2.2 at 2014-08-21 18:40:49 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m

SyntaxError (/home/vagrant/answers/app/controllers/tags_controller.rb:10: syntax error, unexpected ':', expecting '}'
    render locals {tag: tag}
                       ^):
  app/controllers/tags_controller.rb:10: syntax error, unexpected ':', expecting '}'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (19.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (45.3ms)


Started GET "/tags/index" for 10.0.2.2 at 2014-08-21 19:07:35 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.6ms)
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (41.0ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 1192ms (Views: 1185.9ms | ActiveRecord: 4.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:07:48 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:07:48 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (166.2ms)
Completed 200 OK in 648ms (Views: 545.0ms | ActiveRecord: 15.5ms)


Started GET "/tags/index" for 10.0.2.2 at 2014-08-21 19:11:22 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.9ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (86.8ms)
Completed 500 Internal Server Error in 134ms

ActionView::Template::Error (undefined method `tag_path' for #<#<Class:0x007fb114d38020>:0x007fb12fa11d40>):
    17:           <!-- categories.each do |category| -->
    18:           <% tags.each do |tag| %>
    19:             <li class="category-listing">
    20:               <h2><%= link_to(tag.name, tag_path(tag)) %></h2>
    21:               <h2><a href=""><%= tag.name %></a></h2>
    22:             </li>
    23:           <% end %>
  app/views/tags/index.html.erb:20:in `block in _app_views_tags_index_html_erb__2896269031037133466_70199492510240'
  app/views/tags/index.html.erb:18:in `_app_views_tags_index_html_erb__2896269031037133466_70199492510240'
  app/controllers/tags_controller.rb:4:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (16.5ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:13:06 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.1ms)
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"[0m
  Rendered tags/index.html.erb within layouts/application (20.4ms)
  Rendered shared/_search_form.html.erb (1.2ms)
Completed 200 OK in 208ms (Views: 205.7ms | ActiveRecord: 1.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:13:14 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:13:14 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.4ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (162.2ms)
Completed 200 OK in 571ms (Views: 531.1ms | ActiveRecord: 11.7ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:13:38 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.7ms)
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"[0m
  Rendered tags/index.html.erb within layouts/application (24.5ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 323ms (Views: 321.3ms | ActiveRecord: 0.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:13:44 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 21ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:13:45 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (122.7ms)
Completed 200 OK in 1430ms (Views: 1313.0ms | ActiveRecord: 20.4ms)
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE "tags"."name" = 'fud'[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."name" = 'fud'  ORDER BY "tags"."id" ASC LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."name" = 'fud'  ORDER BY "tags"."id" ASC LIMIT 1[0m
  [1m[35mSQL (1.5ms)[0m  DELETE FROM "tags" WHERE "tags"."id" = 8
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."name" = 'fud'  ORDER BY "tags"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."name" = 'duh'  ORDER BY "tags"."id" ASC LIMIT 1
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "tags" WHERE "tags"."id" = 1[0m


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:15:10 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.3ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (23.6ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 277ms (Views: 275.1ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:15:16 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 40ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:15:16 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (138.1ms)
Completed 200 OK in 1627ms (Views: 1516.6ms | ActiveRecord: 20.6ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:25:47 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.5ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (26.1ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 315ms (Views: 312.9ms | ActiveRecord: 0.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:25:54 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:25:54 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (112.4ms)
Completed 200 OK in 493ms (Views: 457.6ms | ActiveRecord: 12.3ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:26:23 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.9ms)
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"[0m
  Rendered tags/index.html.erb within layouts/application (18.9ms)
  Rendered shared/_search_form.html.erb (1.0ms)
Completed 200 OK in 199ms (Views: 196.7ms | ActiveRecord: 0.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:26:29 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:26:29 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (178.8ms)
Completed 200 OK in 573ms (Views: 540.5ms | ActiveRecord: 11.7ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:31:18 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.7ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (23.3ms)
  Rendered shared/_search_form.html.erb (0.6ms)
Completed 200 OK in 306ms (Views: 303.8ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:31:24 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 27ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:31:25 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (2.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (181.2ms)
Completed 200 OK in 1786ms (Views: 1663.0ms | ActiveRecord: 23.1ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:33:12 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.7ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (20.7ms)
  Rendered shared/_search_form.html.erb (0.6ms)
Completed 200 OK in 202ms (Views: 199.7ms | ActiveRecord: 0.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:33:18 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:33:18 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (2.1ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.6ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (146.7ms)
Completed 200 OK in 531ms (Views: 501.6ms | ActiveRecord: 9.5ms)


Started GET "/tags/3" for 10.0.2.2 at 2014-08-21 19:33:23 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"3"}
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  Rendered tags/show.html.erb within layouts/application (0.8ms)
  Rendered shared/_search_form.html.erb (1.5ms)
Completed 200 OK in 291ms (Views: 287.3ms | ActiveRecord: 0.7ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:35:59 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.0ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (17.6ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 201ms (Views: 199.6ms | ActiveRecord: 0.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:36:05 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:36:05 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.2ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:36:06 +0000
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (253.5ms)
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (3.7ms)
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"[0m
  Rendered tags/index.html.erb within layouts/application (46.7ms)
Completed 200 OK in 743ms (Views: 714.4ms | ActiveRecord: 9.2ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 330ms (Views: 327.5ms | ActiveRecord: 1.0ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:36:17 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.7ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (16.2ms)
  Rendered shared/_search_form.html.erb (0.6ms)
Completed 200 OK in 183ms (Views: 181.7ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:36:23 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 26ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:36:23 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (164.7ms)
Completed 200 OK in 1757ms (Views: 1649.4ms | ActiveRecord: 21.7ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-21 19:36:27 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.5ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (22.1ms)
  Rendered shared/_search_form.html.erb (0.6ms)
Completed 200 OK in 259ms (Views: 257.5ms | ActiveRecord: 0.7ms)


Started GET "/tags/6" for 10.0.2.2 at 2014-08-21 19:36:28 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"6"}
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  Rendered tags/show.html.erb within layouts/application (72.9ms)
Completed 500 Internal Server Error in 139ms

ActionView::Template::Error (undefined local variable or method `category' for #<#<Class:0x007ff04d4a95f8>:0x007ff04e7f9388>):
    1: <% set_meta_tags description: "Questions related to #{category.name}.", 
    2:                   canonical: ENV['OFFICIAL_GOVERNMENT_URL'] + request.fullpath %>
    3: <div class="page-container">
    4:   <div class="breadcrumbs">
  app/views/tags/show.html.erb:1:in `_app_views_tags_show_html_erb___1561756930470630504_70335043040080'
  app/controllers/tags_controller.rb:10:in `show'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (14.7ms)


Started GET "/tags/6" for 10.0.2.2 at 2014-08-21 19:36:29 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"6"}
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 6]]
  Rendered tags/show.html.erb within layouts/application (70.0ms)
Completed 500 Internal Server Error in 133ms

ActionView::Template::Error (undefined local variable or method `category' for #<#<Class:0x007ff04d4a95f8>:0x007ff04fab9040>):
    1: <% set_meta_tags description: "Questions related to #{category.name}.", 
    2:                   canonical: ENV['OFFICIAL_GOVERNMENT_URL'] + request.fullpath %>
    3: <div class="page-container">
    4:   <div class="breadcrumbs">
  app/views/tags/show.html.erb:1:in `_app_views_tags_show_html_erb___1561756930470630504_70335052796740'
  app/controllers/tags_controller.rb:10:in `show'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.8ms)


Started GET "/tags/6" for 10.0.2.2 at 2014-08-21 19:36:40 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"6"}
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  Rendered tags/show.html.erb within layouts/application (1.5ms)
  Rendered shared/_search_form.html.erb (1.6ms)
Completed 200 OK in 289ms (Views: 285.7ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:36:46 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:36:46 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (129.4ms)
Completed 200 OK in 480ms (Views: 455.8ms | ActiveRecord: 7.0ms)


Started GET "/tags/6" for 10.0.2.2 at 2014-08-21 19:36:59 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"6"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 6]]
  Rendered tags/show.html.erb within layouts/application (1.2ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 224ms (Views: 220.9ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:37:05 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:37:05 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (184.5ms)
Completed 200 OK in 673ms (Views: 648.0ms | ActiveRecord: 7.8ms)


Started GET "/tags/" for 10.0.2.2 at 2014-08-21 19:37:16 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.8ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (23.1ms)
  Rendered shared/_search_form.html.erb (1.2ms)
Completed 200 OK in 283ms (Views: 281.5ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:37:22 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:37:22 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (117.8ms)
Completed 200 OK in 456ms (Views: 433.8ms | ActiveRecord: 7.7ms)


Started GET "/tags/" for 10.0.2.2 at 2014-08-21 19:42:19 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.0ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (17.7ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 197ms (Views: 195.4ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-21 19:42:25 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 18ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-21 19:42:25 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.2ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (150.5ms)
Completed 200 OK in 1707ms (Views: 1585.9ms | ActiveRecord: 20.9ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 15:20:23 +0000
  [1m[36mActiveRecord::SchemaMigration Load (5.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (17.5ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (42.3ms)
Completed 200 OK in 1779ms (Views: 1597.5ms | ActiveRecord: 38.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 15:20:34 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 25ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 15:20:34 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (3.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (264.2ms)
Completed 200 OK in 1884ms (Views: 1736.4ms | ActiveRecord: 21.2ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-22 15:37:33 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.7ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (19.4ms)
  Rendered shared/_search_form.html.erb (0.6ms)
Completed 200 OK in 182ms (Views: 179.7ms | ActiveRecord: 0.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 15:37:41 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 22ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 15:37:41 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (168.8ms)
Completed 200 OK in 1497ms (Views: 1396.8ms | ActiveRecord: 21.3ms)


Started GET "/tags" for 10.0.2.2 at 2014-08-22 15:40:15 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.3ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (15.9ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 198ms (Views: 196.0ms | ActiveRecord: 0.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 15:40:21 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 15:40:22 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (1.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (253.8ms)
Completed 200 OK in 589ms (Views: 563.2ms | ActiveRecord: 8.7ms)


Started GET "/tags/3" for 10.0.2.2 at 2014-08-22 15:47:59 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"3"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 3]]
  Rendered tags/show.html.erb within layouts/application (1.2ms)
  Rendered shared/_search_form.html.erb (1.6ms)
Completed 200 OK in 190ms (Views: 186.1ms | ActiveRecord: 0.7ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 15:48:04 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  Rendered tags/show.html.erb within layouts/application (0.6ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 303ms (Views: 298.2ms | ActiveRecord: 0.8ms)
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 2]]


Started GET "/tags/3" for 10.0.2.2 at 2014-08-22 16:04:36 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"3"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 3]]
  Rendered tags/show.html.erb within layouts/application (0.8ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 309ms (Views: 305.9ms | ActiveRecord: 0.7ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 16:04:42 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (21.2ms)
Completed 200 OK in 305ms (Views: 283.3ms | ActiveRecord: 7.6ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:03:27 +0000
Processing by HomeController#index as HTML
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (14.7ms)
Completed 500 Internal Server Error in 209ms

ActionView::Template::Error (/home/vagrant/answers/app/assets/theme/USCIS/stylesheets/all/_mixins.scss isn't in paths: /home/vagrant/answers/app/assets/fonts, /home/vagrant/answers/app/assets/images, /home/vagrant/answers/app/assets/javascripts, /home/vagrant/answers/app/assets/stylesheets, /home/vagrant/answers/vendor/assets/javascripts, /home/vagrant/answers/vendor/assets/stylesheets, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/images, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/javascripts, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/images, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/formtastic-2.3.0.rc3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/bourbon-3.2.3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/turbolinks-2.2.2/lib/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-rails-3.1.1/vendor/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/coffee-rails-4.0.1/lib/assets/javascripts):
    16:       <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css">
    17:   <!--<![endif]--> 
    18:   
    19:   <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    20:   
    21:   <style>
    22:     body {
  app/theme/uscis/views/layouts/application.html.erb:19:in `_app_theme_uscis_views_layouts_application_html_erb__1913644895654669142_70104995934840'
  app/controllers/home_controller.rb:10:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (16.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:03:28 +0000
Processing by HomeController#index as HTML
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (17.2ms)
Completed 500 Internal Server Error in 185ms

ActionView::Template::Error (/home/vagrant/answers/app/assets/theme/USCIS/stylesheets/all/_mixins.scss isn't in paths: /home/vagrant/answers/app/assets/fonts, /home/vagrant/answers/app/assets/images, /home/vagrant/answers/app/assets/javascripts, /home/vagrant/answers/app/assets/stylesheets, /home/vagrant/answers/vendor/assets/javascripts, /home/vagrant/answers/vendor/assets/stylesheets, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/images, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/javascripts, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/images, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/formtastic-2.3.0.rc3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/bourbon-3.2.3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/turbolinks-2.2.2/lib/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-rails-3.1.1/vendor/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/coffee-rails-4.0.1/lib/assets/javascripts):
    16:       <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css">
    17:   <!--<![endif]--> 
    18:   
    19:   <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    20:   
    21:   <style>
    22:     body {
  app/theme/uscis/views/layouts/application.html.erb:19:in `_app_theme_uscis_views_layouts_application_html_erb__1913644895654669142_70104995934840'
  app/controllers/home_controller.rb:10:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:03:28 +0000
Processing by HomeController#index as HTML
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (17.6ms)
Completed 500 Internal Server Error in 171ms

ActionView::Template::Error (/home/vagrant/answers/app/assets/theme/USCIS/stylesheets/all/_mixins.scss isn't in paths: /home/vagrant/answers/app/assets/fonts, /home/vagrant/answers/app/assets/images, /home/vagrant/answers/app/assets/javascripts, /home/vagrant/answers/app/assets/stylesheets, /home/vagrant/answers/vendor/assets/javascripts, /home/vagrant/answers/vendor/assets/stylesheets, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/images, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/javascripts, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/images, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/formtastic-2.3.0.rc3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/bourbon-3.2.3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/turbolinks-2.2.2/lib/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-rails-3.1.1/vendor/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/coffee-rails-4.0.1/lib/assets/javascripts):
    16:       <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css">
    17:   <!--<![endif]--> 
    18:   
    19:   <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    20:   
    21:   <style>
    22:     body {
  app/theme/uscis/views/layouts/application.html.erb:19:in `_app_theme_uscis_views_layouts_application_html_erb__1913644895654669142_70104995934840'
  app/controllers/home_controller.rb:10:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (14.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:14:04 +0000
Processing by HomeController#index as HTML
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (16.3ms)
Completed 500 Internal Server Error in 281ms

ActionView::Template::Error (/home/vagrant/answers/app/assets/theme/USCIS/stylesheets/all/_mixins.scss isn't in paths: /home/vagrant/answers/app/assets/fonts, /home/vagrant/answers/app/assets/images, /home/vagrant/answers/app/assets/javascripts, /home/vagrant/answers/app/assets/stylesheets, /home/vagrant/answers/vendor/assets/javascripts, /home/vagrant/answers/vendor/assets/stylesheets, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/images, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/javascripts, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/images, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/formtastic-2.3.0.rc3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/bourbon-3.2.3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/turbolinks-2.2.2/lib/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-rails-3.1.1/vendor/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/coffee-rails-4.0.1/lib/assets/javascripts):
    16:       <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css">
    17:   <!--<![endif]--> 
    18:   
    19:   <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    20:   
    21:   <style>
    22:     body {
  app/theme/uscis/views/layouts/application.html.erb:19:in `_app_theme_uscis_views_layouts_application_html_erb__1913644895654669142_70104995934840'
  app/controllers/home_controller.rb:10:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.7ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:14:11 +0000
Processing by HomeController#index as HTML
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (18.1ms)
Completed 500 Internal Server Error in 202ms

ActionView::Template::Error (/home/vagrant/answers/app/assets/theme/USCIS/stylesheets/all/_mixins.scss isn't in paths: /home/vagrant/answers/app/assets/fonts, /home/vagrant/answers/app/assets/images, /home/vagrant/answers/app/assets/javascripts, /home/vagrant/answers/app/assets/stylesheets, /home/vagrant/answers/vendor/assets/javascripts, /home/vagrant/answers/vendor/assets/stylesheets, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/images, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/javascripts, /home/vagrant/ruby/2.1.0/bundler/gems/active_admin-efe5a86968c8/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/images, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-ui-rails-5.0.0/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/formtastic-2.3.0.rc3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/bourbon-3.2.3/app/assets/stylesheets, /home/vagrant/ruby/2.1.0/gems/turbolinks-2.2.2/lib/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/jquery-rails-3.1.1/vendor/assets/javascripts, /home/vagrant/ruby/2.1.0/gems/coffee-rails-4.0.1/lib/assets/javascripts):
    16:       <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css">
    17:   <!--<![endif]--> 
    18:   
    19:   <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    20:   
    21:   <style>
    22:     body {
  app/theme/uscis/views/layouts/application.html.erb:19:in `_app_theme_uscis_views_layouts_application_html_erb__1913644895654669142_70104995934840'
  app/controllers/home_controller.rb:10:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:29:57 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (50.6ms)
Completed 200 OK in 3361ms (Views: 3319.7ms | ActiveRecord: 0.0ms)


Started GET "/stylesheets/theme.css" for 10.0.2.2 at 2014-08-22 18:30:01 +0000

ActionController::RoutingError (No route matches [GET] "/stylesheets/theme.css"):
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (22.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_route.html.erb (100.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_table.html.erb (47.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (577.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 18:30:09 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 40ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:30:09 +0000
Processing by HomeController#index as */*
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (31.6ms)
Completed 200 OK in 1736ms (Views: 1705.1ms | ActiveRecord: 0.0ms)


Started GET "/search?q=fff" for 10.0.2.2 at 2014-08-22 18:30:59 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"fff"}
  [1m[33mArticle Search (124.2ms)[0m  curl http://localhost:9200/articles_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"multi_match":{"fields":["_all"],"query":"fff","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"fff","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search2"}},{"multi_match":{"fields":["_all"],"query":"fff","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"fff","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}]}},"size":100000,"from":0,"fields":[]}'
Completed 500 Internal Server Error in 127ms

Searchkick::InvalidQueryError (Bad mapping - run Article.reindex):
  app/controllers/search_controller.rb:10:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 18:31:03 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/search?q=naturalization" for 10.0.2.2 at 2014-08-22 18:33:29 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"naturalization"}
  [1m[33mArticle Search (10.0ms)[0m  curl http://localhost:9200/articles_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search2"}},{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}]}},"size":100000,"from":0,"fields":[]}'
Completed 500 Internal Server Error in 12ms

Searchkick::InvalidQueryError (Bad mapping - run Article.reindex):
  app/controllers/search_controller.rb:10:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.4ms)
  [1m[36mArticle Load (6.9ms)[0m  [1mSELECT  "articles".* FROM "articles"   ORDER BY "articles"."id" ASC LIMIT 1000[0m


Started GET "/search?q=naturalization" for 10.0.2.2 at 2014-08-22 18:35:10 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"naturalization"}
  [1m[33mArticle Search (83.4ms)[0m  curl http://localhost:9200/articles_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":10,"analyzer":"searchkick_search2"}},{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}},{"multi_match":{"fields":["_all"],"query":"naturalization","use_dis_max":false,"operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}]}},"size":100000,"from":0,"fields":[]}'
search-request: IP:10.0.2.2, params[:query]:naturalization, QUERY:naturalization, FIRST_RESULT:, RESULTS_N:0
  [1m[36mCategory Load (4.1ms)[0m  [1mSELECT "categories".* FROM "categories"   ORDER BY name ASC[0m
  Rendered shared/_categories_sidebar.html.erb (6.9ms)
  Rendered search/index.html.erb within layouts/application (63.7ms)
Completed 200 OK in 605ms (Views: 514.8ms | Searchkick: 83.4ms | ActiveRecord: 4.1ms)


Started GET "/stylesheets/theme.css" for 10.0.2.2 at 2014-08-22 18:35:12 +0000

ActionController::RoutingError (No route matches [GET] "/stylesheets/theme.css"):
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_route.html.erb (238.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_table.html.erb (88.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (461.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 18:35:18 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 27ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 18:35:19 +0000
Processing by HomeController#index as */*
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (22.6ms)
Completed 200 OK in 1792ms (Views: 1768.2ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:29:21 +0000
Processing by HomeController#index as HTML
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (2.6ms)
Completed 200 OK in 306ms (Views: 304.5ms | ActiveRecord: 0.0ms)


Started GET "/stylesheets/theme.css" for 10.0.2.2 at 2014-08-22 20:29:23 +0000

ActionController::RoutingError (No route matches [GET] "/stylesheets/theme.css"):
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (15.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_route.html.erb (51.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_table.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (320.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 20:29:31 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:29:32 +0000
Processing by HomeController#index as */*
  Rendered app/theme/uscis/views/home/index.html.erb within layouts/application (2.2ms)
Completed 200 OK in 545ms (Views: 543.9ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:47:12 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f4275a763e0>):
  app/models/question.rb:4:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:47:42 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (3.3ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (27.8ms)
Completed 200 OK in 2775ms (Views: 2645.8ms | ActiveRecord: 21.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 20:47:54 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 21ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:47:54 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (3.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (209.0ms)
Completed 200 OK in 1816ms (Views: 1675.4ms | ActiveRecord: 23.9ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:56:00 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (21.3ms)
Completed 200 OK in 232ms (Views: 198.3ms | ActiveRecord: 11.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 20:56:07 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 34ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:56:07 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (4.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (2.3ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.5ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (123.2ms)


Started GET "/tags/5" for 10.0.2.2 at 2014-08-22 20:56:09 +0000
Completed 200 OK in 1722ms (Views: 1554.1ms | ActiveRecord: 35.7ms)
Processing by TagsController#show as HTML
  Parameters: {"id"=>"5"}
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  Rendered tags/show.html.erb within layouts/application (7.8ms)
  Rendered shared/_search_form.html.erb (1.4ms)
Completed 200 OK in 1124ms (Views: 1083.7ms | ActiveRecord: 5.0ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 20:56:13 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  Rendered tags/show.html.erb within layouts/application (0.7ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 209ms (Views: 205.8ms | ActiveRecord: 0.7ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:56:48 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered home/index.html.erb within layouts/application (65.5ms)
Completed 500 Internal Server Error in 260ms

ActionView::Template::Error (undefined method `question_path' for #<#<Class:0x007f56a9ca3878>:0x007f56a9ca0c90>):
    31:             <p class="right">
    32:             <ul>
    33:               <% tag[:questions].each do |question| %>
    34:                 <p><%= link_to(question.text, question_path(question)) %></p>
    35:                 <p><a href="/"><%= question.text %></a></p>
    36:               <% end %>
    37:             </ul>
  app/views/home/index.html.erb:34:in `block (2 levels) in _app_views_home_index_html_erb__3792447410231661903_70005096260180'
  app/views/home/index.html.erb:33:in `each'
  app/views/home/index.html.erb:33:in `block in _app_views_home_index_html_erb__3792447410231661903_70005096260180'
  app/views/home/index.html.erb:28:in `each'
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb__3792447410231661903_70005096260180'
  app/controllers/home_controller.rb:7:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.5ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:56:54 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered home/index.html.erb within layouts/application (62.6ms)
Completed 500 Internal Server Error in 156ms

ActionView::Template::Error (undefined method `questions_path' for #<#<Class:0x007f56a9ca3878>:0x007f56af9498c0>):
    31:             <p class="right">
    32:             <ul>
    33:               <% tag[:questions].each do |question| %>
    34:                 <p><%= link_to(question.text, questions_path(question)) %></p>
    35:                 <p><a href="/"><%= question.text %></a></p>
    36:               <% end %>
    37:             </ul>
  app/views/home/index.html.erb:34:in `block (2 levels) in _app_views_home_index_html_erb__3792447410231661903_70005144830000'
  app/views/home/index.html.erb:33:in `each'
  app/views/home/index.html.erb:33:in `block in _app_views_home_index_html_erb__3792447410231661903_70005144830000'
  app/views/home/index.html.erb:28:in `each'
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb__3792447410231661903_70005144830000'
  app/controllers/home_controller.rb:7:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (114.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:57:11 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered home/index.html.erb within layouts/application (15.3ms)
Completed 500 Internal Server Error in 73ms

ActionView::Template::Error (undefined method `question_path' for QuestionsHelper:Module):
    31:             <p class="right">
    32:             <ul>
    33:               <% tag[:questions].each do |question| %>
    34:                 <p><%= link_to(question.text, QuestionsHelper.question_path(question)) %></p>
    35:                 <p><a href="/"><%= question.text %></a></p>
    36:               <% end %>
    37:             </ul>
  app/views/home/index.html.erb:34:in `block (2 levels) in _app_views_home_index_html_erb__3792447410231661903_70005111170060'
  app/views/home/index.html.erb:33:in `each'
  app/views/home/index.html.erb:33:in `block in _app_views_home_index_html_erb__3792447410231661903_70005111170060'
  app/views/home/index.html.erb:28:in `each'
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb__3792447410231661903_70005111170060'
  app/controllers/home_controller.rb:7:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:57:12 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered home/index.html.erb within layouts/application (23.4ms)
Completed 500 Internal Server Error in 86ms

ActionView::Template::Error (undefined method `question_path' for QuestionsHelper:Module):
    31:             <p class="right">
    32:             <ul>
    33:               <% tag[:questions].each do |question| %>
    34:                 <p><%= link_to(question.text, QuestionsHelper.question_path(question)) %></p>
    35:                 <p><a href="/"><%= question.text %></a></p>
    36:               <% end %>
    37:             </ul>
  app/views/home/index.html.erb:34:in `block (2 levels) in _app_views_home_index_html_erb__3792447410231661903_70005111170060'
  app/views/home/index.html.erb:33:in `each'
  app/views/home/index.html.erb:33:in `block in _app_views_home_index_html_erb__3792447410231661903_70005111170060'
  app/views/home/index.html.erb:28:in `each'
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb__3792447410231661903_70005111170060'
  app/controllers/home_controller.rb:7:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.4ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 20:57:17 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered home/index.html.erb within layouts/application (23.8ms)
Completed 500 Internal Server Error in 83ms

ActionView::Template::Error (undefined method `questions_path' for QuestionsHelper:Module):
    31:             <p class="right">
    32:             <ul>
    33:               <% tag[:questions].each do |question| %>
    34:                 <p><%= link_to(question.text, QuestionsHelper.questions_path(question)) %></p>
    35:                 <p><a href="/"><%= question.text %></a></p>
    36:               <% end %>
    37:             </ul>
  app/views/home/index.html.erb:34:in `block (2 levels) in _app_views_home_index_html_erb__3792447410231661903_70004851800720'
  app/views/home/index.html.erb:33:in `each'
  app/views/home/index.html.erb:33:in `block in _app_views_home_index_html_erb__3792447410231661903_70004851800720'
  app/views/home/index.html.erb:28:in `each'
  app/views/home/index.html.erb:28:in `_app_views_home_index_html_erb__3792447410231661903_70004851800720'
  app/controllers/home_controller.rb:7:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.4ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:05:42 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (25.6ms)
Completed 200 OK in 312ms (Views: 290.5ms | ActiveRecord: 7.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:05:48 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 36ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:05:49 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (122.8ms)
Completed 200 OK in 1549ms (Views: 1434.9ms | ActiveRecord: 20.6ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:06:53 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.5ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (27.7ms)
Completed 200 OK in 320ms (Views: 295.2ms | ActiveRecord: 8.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:06:58 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:06:59 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.2ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (170.2ms)
Completed 200 OK in 592ms (Views: 554.1ms | ActiveRecord: 13.1ms)


Started GET "/answers/73" for 10.0.2.2 at 2014-08-22 21:08:20 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"73"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 73]]
  [1m[36mAnswer Load (7.0ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 73]]
  Rendered questions/show.html.erb within layouts/application (39.4ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 224ms (Views: 208.8ms | ActiveRecord: 11.3ms)


Started GET "/answers/79" for 10.0.2.2 at 2014-08-22 21:08:22 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"79"}
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 79]]
  [1m[36mAnswer Load (1.1ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 79]]
  Rendered questions/show.html.erb within layouts/application (3.7ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 333ms (Views: 328.5ms | ActiveRecord: 1.9ms)


Started GET "/answers/82" for 10.0.2.2 at 2014-08-22 21:08:24 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"82"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 82]]
  [1m[36mAnswer Load (1.3ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 82]]
  Rendered questions/show.html.erb within layouts/application (3.5ms)
  Rendered shared/_search_form.html.erb (0.5ms)
Completed 200 OK in 244ms (Views: 239.7ms | ActiveRecord: 2.0ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:08:26 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  Rendered tags/show.html.erb within layouts/application (1.5ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 315ms (Views: 310.9ms | ActiveRecord: 0.5ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:12:48 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
Completed 500 Internal Server Error in 2ms

TypeError (wrong argument type Symbol (expected Module)):
  app/controllers/tags_controller.rb:9:in `include'
  app/controllers/tags_controller.rb:9:in `show'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.5ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:12:57 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:14:38 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)
  Rendered tags/show.html.erb within layouts/application (1.3ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 300ms (Views: 269.5ms | ActiveRecord: 2.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:14:44 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:14:44 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (181.6ms)
Completed 200 OK in 604ms (Views: 566.6ms | ActiveRecord: 12.7ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:14:57 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  Rendered tags/show.html.erb within layouts/application (1.4ms)
  Rendered shared/_search_form.html.erb (1.9ms)
Completed 200 OK in 318ms (Views: 290.3ms | ActiveRecord: 3.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:15:03 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:15:03 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (2.3ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (131.7ms)
Completed 200 OK in 512ms (Views: 485.9ms | ActiveRecord: 8.5ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:15:05 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)
  Rendered tags/show.html.erb within layouts/application (0.7ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 204ms (Views: 197.2ms | ActiveRecord: 1.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:15:10 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 31ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:15:11 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.9ms)
  Rendered home/index.html.erb within layouts/application (200.5ms)
Completed 200 OK in 1689ms (Views: 1588.9ms | ActiveRecord: 21.1ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:15:31 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" IN (4)[0m
  Rendered tags/show.html.erb within layouts/application (1.5ms)
  Rendered shared/_search_form.html.erb (1.6ms)
Completed 200 OK in 223ms (Views: 188.3ms | ActiveRecord: 3.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:15:37 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:15:38 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (146.5ms)
Completed 200 OK in 587ms (Views: 553.7ms | ActiveRecord: 12.3ms)
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "taggings"
LINE 1: SELECT  "tags".* FROM "tags"  WHERE (taggings.taggable_type ...
                                             ^
: SELECT  "tags".* FROM "tags"  WHERE (taggings.taggable_type = 'Question') AND "tags"."id" = $1 LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  ORDER BY "taggings"."id" ASC LIMIT 1  [["tag_id", 2]]


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:28:49 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  Rendered tags/show.html.erb within layouts/application (20.6ms)
Completed 500 Internal Server Error in 73ms

ActionView::Template::Error (undefined method `text' for 73:Fixnum):
    13:         <ul>
    14:           <% questions.each do |question| %>
    15:               <li class="article-listing">
    16:                 <%= content_tag(:h2, link_to(question.text,answers.answer_path(question)) ) %>
    17:               </li>
    18:           <% end %>
    19: 
  app/views/tags/show.html.erb:16:in `block in _app_views_tags_show_html_erb__78251051065445870_70004876357520'
  app/views/tags/show.html.erb:14:in `each'
  app/views/tags/show.html.erb:14:in `_app_views_tags_show_html_erb__78251051065445870_70004876357520'
  app/controllers/tags_controller.rb:16:in `show'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.2ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-22 21:29:18 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)
  Rendered tags/show.html.erb within layouts/application (2.4ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 249ms (Views: 227.8ms | ActiveRecord: 7.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:29:24 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:29:24 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.3ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (165.2ms)
Completed 200 OK in 599ms (Views: 560.7ms | ActiveRecord: 13.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:29:31 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.4ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (31.8ms)
Completed 200 OK in 357ms (Views: 330.3ms | ActiveRecord: 8.3ms)


Started GET "/tags/2" for 10.0.2.2 at 2014-08-22 21:29:35 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 2]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78, 83, 85, 86, 88, 91, 105, 108, 116, 117, 132, 135)
  Rendered tags/show.html.erb within layouts/application (2.3ms)
  Rendered shared/_search_form.html.erb (1.7ms)
Completed 200 OK in 388ms (Views: 378.7ms | ActiveRecord: 2.3ms)


Started GET "/tags/5" for 10.0.2.2 at 2014-08-22 21:29:39 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"5"}
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84, 94, 97, 98, 101, 106, 110, 113, 114, 118, 130)[0m
  Rendered tags/show.html.erb within layouts/application (1.6ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 227ms (Views: 218.8ms | ActiveRecord: 2.3ms)


Started GET "/tags/5" for 10.0.2.2 at 2014-08-22 21:30:06 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"5"}
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 5]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84, 94, 97, 98, 101, 106, 110, 113, 114, 118, 130)
  Rendered tags/show.html.erb within layouts/application (2.7ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 236ms (Views: 218.0ms | ActiveRecord: 6.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-22 21:30:12 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-22 21:30:13 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.4ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (125.5ms)
Completed 200 OK in 470ms (Views: 428.6ms | ActiveRecord: 13.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 13:47:01 +0000
  [1m[36mActiveRecord::SchemaMigration Load (4.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (12.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (32.2ms)
Completed 200 OK in 1455ms (Views: 1308.1ms | ActiveRecord: 32.4ms)

Errno::ENOENT (No such file or directory @ rb_file_s_mtime - /home/vagrant/answers/app/controllers/tags_controller.rb):
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `block in max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `map'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:102:in `updated_at'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:59:in `updated?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `map'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `reload_dependencies?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:41:in `block (2 levels) in build_stack'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (1.1.0) lib/better_errors/middleware.rb:58:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'



Errno::ENOENT (No such file or directory @ rb_file_s_mtime - /home/vagrant/answers/app/controllers/tags_controller.rb):
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `block in max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `map'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:102:in `updated_at'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:59:in `updated?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `map'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `reload_dependencies?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:41:in `block (2 levels) in build_stack'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (1.1.0) lib/better_errors/middleware.rb:58:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'



Errno::ENOENT (No such file or directory @ rb_file_s_mtime - /home/vagrant/answers/app/controllers/tags_controller.rb):
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `block in max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `map'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:102:in `updated_at'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:59:in `updated?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `map'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `reload_dependencies?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:41:in `block (2 levels) in build_stack'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (1.1.0) lib/better_errors/middleware.rb:58:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'



Errno::ENOENT (No such file or directory @ rb_file_s_mtime - /home/vagrant/answers/app/controllers/tags_controller.rb):
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `block in max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `map'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:102:in `updated_at'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:74:in `execute'
  railties (4.1.4) lib/rails/application/finisher.rb:107:in `block (2 levels) in <module:Finisher>'
  activesupport (4.1.4) lib/active_support/callbacks.rb:438:in `instance_exec'
  activesupport (4.1.4) lib/active_support/callbacks.rb:438:in `block in make_lambda'
  activesupport (4.1.4) lib/active_support/callbacks.rb:184:in `call'
  activesupport (4.1.4) lib/active_support/callbacks.rb:184:in `block in simple'
  activesupport (4.1.4) lib/active_support/callbacks.rb:86:in `call'
  activesupport (4.1.4) lib/active_support/callbacks.rb:86:in `run_callbacks'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:83:in `prepare!'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:71:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (1.1.0) lib/better_errors/middleware.rb:58:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'



Errno::ENOENT (No such file or directory @ rb_file_s_mtime - /home/vagrant/answers/app/helpers/answers_helper.rb):
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `block in max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `map'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:102:in `updated_at'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:59:in `updated?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `map'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:65:in `reload_dependencies?'
  railties (4.1.4) lib/rails/application/default_middleware_stack.rb:41:in `block (2 levels) in build_stack'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:70:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (1.1.0) lib/better_errors/middleware.rb:58:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'



Errno::ENOENT (No such file or directory @ rb_file_s_mtime - /home/vagrant/answers/app/admin/answer.rb):
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `block in max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `map'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:102:in `updated_at'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:74:in `execute'
  railties (4.1.4) lib/rails/application/finisher.rb:107:in `block (2 levels) in <module:Finisher>'
  activesupport (4.1.4) lib/active_support/callbacks.rb:438:in `instance_exec'
  activesupport (4.1.4) lib/active_support/callbacks.rb:438:in `block in make_lambda'
  activesupport (4.1.4) lib/active_support/callbacks.rb:184:in `call'
  activesupport (4.1.4) lib/active_support/callbacks.rb:184:in `block in simple'
  activesupport (4.1.4) lib/active_support/callbacks.rb:86:in `call'
  activesupport (4.1.4) lib/active_support/callbacks.rb:86:in `run_callbacks'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:83:in `prepare!'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:71:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (1.1.0) lib/better_errors/middleware.rb:58:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'



Errno::ENOENT (No such file or directory @ rb_file_s_mtime - /home/vagrant/answers/app/admin/answer.rb):
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `block in max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `map'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:114:in `max_mtime'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:102:in `updated_at'
  activesupport (4.1.4) lib/active_support/file_update_checker.rb:74:in `execute'
  railties (4.1.4) lib/rails/application/finisher.rb:107:in `block (2 levels) in <module:Finisher>'
  activesupport (4.1.4) lib/active_support/callbacks.rb:438:in `instance_exec'
  activesupport (4.1.4) lib/active_support/callbacks.rb:438:in `block in make_lambda'
  activesupport (4.1.4) lib/active_support/callbacks.rb:184:in `call'
  activesupport (4.1.4) lib/active_support/callbacks.rb:184:in `block in simple'
  activesupport (4.1.4) lib/active_support/callbacks.rb:86:in `call'
  activesupport (4.1.4) lib/active_support/callbacks.rb:86:in `run_callbacks'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:83:in `prepare!'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:71:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (1.1.0) lib/better_errors/middleware.rb:58:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'




Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-25 13:47:14 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 22ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 13:47:15 +0000
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (177.8ms)
Completed 200 OK in 1671ms (Views: 1669.8ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 14:03:45 +0000
  [1m[35mActiveRecord::SchemaMigration Load (0.8ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.5ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (27.0ms)
Completed 200 OK in 564ms (Views: 447.8ms | ActiveRecord: 21.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-25 14:03:53 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 14:03:53 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (112.9ms)
Completed 200 OK in 495ms (Views: 466.4ms | ActiveRecord: 8.7ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 14:04:14 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (3.2ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.3ms)
  Rendered home/index.html.erb within layouts/application (35.0ms)
Completed 200 OK in 1389ms (Views: 1254.0ms | ActiveRecord: 21.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-25 14:04:22 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 7ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 14:04:22 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (125.7ms)
Completed 200 OK in 1486ms (Views: 1334.8ms | ActiveRecord: 20.1ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-25 14:04:44 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)
  Rendered tags/show.html.erb within layouts/application (2.3ms)
  Rendered shared/_search_form.html.erb (1.5ms)
Completed 200 OK in 329ms (Views: 320.3ms | ActiveRecord: 2.3ms)


Started GET "/answers/79" for 10.0.2.2 at 2014-08-25 14:04:48 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"79"}
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 79]]
  [1m[35mAnswer Load (6.4ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 79]]
  Rendered questions/show.html.erb within layouts/application (54.2ms)
  Rendered shared/_search_form.html.erb (1.2ms)
Completed 200 OK in 342ms (Views: 328.1ms | ActiveRecord: 10.7ms)


Started GET "/answers/73" for 10.0.2.2 at 2014-08-25 14:04:51 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"73"}
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 73]]
  [1m[35mAnswer Load (0.9ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 73]]
  Rendered questions/show.html.erb within layouts/application (4.0ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 316ms (Views: 311.3ms | ActiveRecord: 1.6ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 14:09:42 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (16.0ms)
Completed 200 OK in 221ms (Views: 186.5ms | ActiveRecord: 11.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-25 14:09:50 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 25ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 14:09:50 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (182.2ms)
Completed 200 OK in 1655ms (Views: 1536.1ms | ActiveRecord: 22.2ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-25 14:13:04 +0000

ActionController::RoutingError (undefined local variable or method `tags_path' for TagsController:Class):
  app/controllers/tags_controller.rb:5:in `<class:TagsController>'
  app/controllers/tags_controller.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_route.html.erb (13.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_table.html.erb (29.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (89.6ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-25 14:13:05 +0000

ActionController::RoutingError (undefined local variable or method `tags_path' for TagsController:Class):
  app/controllers/tags_controller.rb:5:in `<class:TagsController>'
  app/controllers/tags_controller.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_route.html.erb (15.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_table.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (62.6ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-25 14:13:21 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)
  Rendered tags/show.html.erb within layouts/application (3.0ms)
  Rendered shared/_search_form.html.erb (1.7ms)
Completed 200 OK in 271ms (Views: 260.0ms | ActiveRecord: 2.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-25 14:13:27 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 14:13:27 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (2.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.7ms)
  Rendered home/index.html.erb within layouts/application (142.3ms)
Completed 200 OK in 514ms (Views: 484.4ms | ActiveRecord: 11.0ms)


Started GET "/answers/73" for 10.0.2.2 at 2014-08-25 14:13:59 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"73"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 73]]
  [1m[36mAnswer Load (1.1ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 73]]
  Rendered questions/show.html.erb within layouts/application (36.9ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 224ms (Views: 216.0ms | ActiveRecord: 4.9ms)


Started GET "/admin" for 10.0.2.2 at 2014-08-25 15:22:29 +0000
Processing by Admin::DashboardController#index as HTML
Completed 401 Unauthorized in 67ms


Started GET "/users/sign_in" for 10.0.2.2 at 2014-08-25 15:22:29 +0000
Processing by SessionsController#new as HTML
  Rendered devise/shared/_links.erb (1.6ms)
  Rendered devise/sessions/new.html.erb within layouts/application (64.9ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 323ms (Views: 301.2ms | ActiveRecord: 6.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-25 15:22:36 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 15:22:36 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (155.2ms)
Completed 200 OK in 550ms (Views: 516.8ms | ActiveRecord: 11.9ms)


Started POST "/users/sign_in" for 10.0.2.2 at 2014-08-25 15:22:41 +0000
Processing by SessionsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"T9VQ8T97DsgIqBX7Y/hjdFBVQjtw0+57utPpq59EKwM=", "user"=>{"email"=>"admin@answers.gsa.io", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Sign in"}
  [1m[35mUser Load (4.8ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."email" = 'admin@answers.gsa.io'  ORDER BY "users"."id" ASC LIMIT 1
Completed 401 Unauthorized in 36ms
Processing by SessionsController#new as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"T9VQ8T97DsgIqBX7Y/hjdFBVQjtw0+57utPpq59EKwM=", "user"=>{"email"=>"admin@answers.gsa.io", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Sign in"}
  Rendered devise/shared/_links.erb (1.8ms)
  Rendered devise/sessions/new.html.erb within layouts/application (95.8ms)
  Rendered shared/_search_form.html.erb (1.6ms)
Completed 200 OK in 482ms (Views: 401.0ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-25 15:22:47 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-25 15:22:48 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (159.4ms)
Completed 200 OK in 646ms (Views: 610.7ms | ActiveRecord: 12.5ms)
  [1m[36mUser Load (2.1ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35m (1.4ms)[0m  SELECT COUNT(*) FROM "users"
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (1.1ms)[0m  SELECT  1 AS one FROM "users"  WHERE "users"."email" = 'adelevie@gmail.com' LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "users"  WHERE "users"."email" = 'adelevie@gmail.com' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT  1 AS one FROM "users"  WHERE "users"."email" = 'adelevie@gmail.com' LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (1.7ms)[0m  BEGIN
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "users"  WHERE "users"."email" = 'adelevie@gmail.com' LIMIT 1[0m
  [1m[35mApi::V1::ApiUser Exists (0.9ms)[0m  SELECT  1 AS one FROM "users"  WHERE "users"."authentication_token" = 'tdP5qqQzAt5Bss4nAExq' LIMIT 1
  [1m[36mSQL (3.1ms)[0m  [1mINSERT INTO "users" ("authentication_token", "created_at", "email", "encrypted_password", "is_admin", "is_editor", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["authentication_token", "tdP5qqQzAt5Bss4nAExq"], ["created_at", "2014-08-25 15:26:07.321104"], ["email", "adelevie@gmail.com"], ["encrypted_password", "$2a$10$943pCddTsMGHLQQTLR1wuurDrHXGSOwmMH8Tic6e.OdgPEBrinkYq"], ["is_admin", "t"], ["is_editor", "f"], ["updated_at", "2014-08-25 15:26:07.321104"]]
  [1m[35m (1.1ms)[0m  COMMIT


Started GET "/api/v1/tags.json" for 10.0.2.2 at 2014-08-25 15:26:29 +0000

ActionController::RoutingError (No route matches [GET] "/api/v1/tags.json"):
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.0.8) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.1.236) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_route.html.erb (15.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/routes/_table.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (48.2ms)


Started GET "/api/v1/tags.json" for 10.0.2.2 at 2014-08-25 15:27:16 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::TagsController#index as JSON
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags"
  Rendered api/v1/tags/_tag.json.jbuilder (44.6ms)
  Rendered api/v1/tags/index.json.jbuilder (81.5ms)
Completed 500 Internal Server Error in 330ms

ActionView::Template::Error (undefined method `created_at' for #<ActsAsTaggableOn::Tag:0x007f2ed9894180>):
    1: json.extract! tag, :id, :created_at, :name, :taggings_count
    2: json.url tag_url(tag)
  app/views/api/v1/tags/_tag.json.jbuilder:1:in `_app_views_api_v__tags__tag_json_jbuilder__609184732686804409_69919598178600'
  app/views/api/v1/tags/index.json.jbuilder:1:in `_app_views_api_v__tags_index_json_jbuilder___181884786332986571_69919597098900'
  app/controllers/api/v1/tags_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (3.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (24.6ms)


Started GET "/api/v1/questions.json" for 10.0.2.2 at 2014-08-25 15:28:39 +0000
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.4ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered api/v1/questions/_question.json.jbuilder (85.2ms)
  Rendered api/v1/questions/index.json.jbuilder (115.3ms)
Completed 500 Internal Server Error in 279ms

ActionView::Template::Error (undefined method `question_url' for #<#<Class:0x007f2eda11f2f0>:0x007f2eda11dc70>):
    1: json.extract! question, :id, :created_at, :updated_at, :text
    2: json.url question_url(question)
  app/views/api/v1/questions/_question.json.jbuilder:2:in `_app_views_api_v__questions__question_json_jbuilder___1722808559862334125_69919602515700'
  app/views/api/v1/questions/index.json.jbuilder:1:in `_app_views_api_v__questions_index_json_jbuilder___1532056692481188507_69919601928280'
  app/controllers/api/v1/questions_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (14.8ms)


Started GET "/api/v1/questions.json" for 10.0.2.2 at 2014-08-25 15:39:31 +0000
Processing by Api::V1::QuestionsController#index as JSON
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"
  Rendered api/v1/questions/_question.json.jbuilder (68.7ms)
  Rendered api/v1/questions/index.json.jbuilder (96.3ms)
Completed 500 Internal Server Error in 259ms

ActionView::Template::Error (undefined method `question_url' for #<#<Class:0x007f2ed9c4a018>:0x007f2ed9c49118>):
    1: json.extract! question, :id, :created_at, :updated_at, :text
    2: json.url question_url(question)
  app/views/api/v1/questions/_question.json.jbuilder:2:in `_app_views_api_v__questions__question_json_jbuilder___1722808559862334125_69919600117320'
  app/views/api/v1/questions/index.json.jbuilder:1:in `_app_views_api_v__questions_index_json_jbuilder___1532056692481188507_69919601928280'
  app/controllers/api/v1/questions_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.1ms)


Started GET "/api/v1/questions.json" for 10.0.2.2 at 2014-08-25 15:40:00 +0000
Processing by Api::V1::QuestionsController#index as JSON
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered api/v1/questions/_question.json.jbuilder (1.0ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.8ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.9ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.8ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.8ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.8ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (1.0ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (1.2ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.9ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (1.1ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.9ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.5ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.6ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/_question.json.jbuilder (0.7ms)
  Rendered api/v1/questions/index.json.jbuilder (792.3ms)
Completed 200 OK in 979ms (Views: 976.8ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/questions.json" for 10.0.2.2 at 2014-08-25 15:40:13 +0000
Processing by Api::V1::QuestionsController#index as JSON
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"
  Rendered api/v1/questions/_question.json.jbuilder (100.0ms)
  Rendered api/v1/questions/index.json.jbuilder (120.3ms)
Completed 500 Internal Server Error in 333ms

ActionView::Template::Error (undefined method `questions_url' for #<#<Class:0x007f2ed9c4a018>:0x007f2ec18eb5b0>):
    1: json.extract! question, :id, :created_at, :updated_at, :text
    2: json.url questions_url(question)
  app/views/api/v1/questions/_question.json.jbuilder:2:in `_app_views_api_v__questions__question_json_jbuilder___1722808559862334125_69919396459960'
  app/views/api/v1/questions/index.json.jbuilder:1:in `_app_views_api_v__questions_index_json_jbuilder___1532056692481188507_69919601928280'
  app/controllers/api/v1/questions_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (12.9ms)


Started GET "/api/v1/answers.json" for 10.0.2.2 at 2014-08-25 15:40:27 +0000
Processing by Api::V1::AnswersController#index as JSON
  [1m[36mAnswer Load (4.3ms)[0m  [1mSELECT "answers".* FROM "answers"[0m
  Rendered api/v1/answers/_answer.json.jbuilder (2.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.3ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.5ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/index.json.jbuilder (847.5ms)
Completed 200 OK in 1041ms (Views: 1030.8ms | ActiveRecord: 8.2ms)


Started GET "/api/v1/taggings.json" for 10.0.2.2 at 2014-08-25 15:40:52 +0000
Processing by Api::V1::TaggingsController#index as JSON
  [1m[35mActsAsTaggableOn::Tagging Load (1.7ms)[0m  SELECT "taggings".* FROM "taggings"
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.6ms)
  Rendered api/v1/taggings/index.json.jbuilder (23.1ms)
Completed 500 Internal Server Error in 211ms

SyntaxError (/home/vagrant/answers/app/views/api/v1/taggings/_tagging.json.jbuilder:2: syntax error, unexpected tIDENTIFIER, expecting keyword_end
json.url tagging_url(tagging)
                    ^):
  app/views/api/v1/taggings/_tagging.json.jbuilder:2: syntax error, unexpected tIDENTIFIER, expecting keyword_end
  app/views/api/v1/taggings/index.json.jbuilder:1:in `_app_views_api_v__taggings_index_json_jbuilder___947649990631862349_69919393974560'
  app/controllers/api/v1/taggings_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.0ms)


Started GET "/api/v1/taggings.json" for 10.0.2.2 at 2014-08-25 15:41:57 +0000
Processing by Api::V1::TaggingsController#index as JSON
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"[0m
  Rendered api/v1/taggings/_tagging.json.jbuilder (34.0ms)
  Rendered api/v1/taggings/index.json.jbuilder (52.8ms)
Completed 500 Internal Server Error in 225ms

ActionView::Template::Error (undefined method `updated_at' for #<ActsAsTaggableOn::Tagging:0x007f2ec1a39bd8>):
    1: json.extract! tagging, :id, :created_at, :updated_at, :tag_id, :taggable_id, :taggable_type, :tagger_id, :tagger_type, :context
    2: json.url tagging_url(tagging)
  app/views/api/v1/taggings/_tagging.json.jbuilder:1:in `_app_views_api_v__taggings__tagging_json_jbuilder___761431604593399078_69919397013600'
  app/views/api/v1/taggings/index.json.jbuilder:1:in `_app_views_api_v__taggings_index_json_jbuilder___947649990631862349_69919393974560'
  app/controllers/api/v1/taggings_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (14.9ms)


Started GET "/api/v1/taggings.json" for 10.0.2.2 at 2014-08-25 15:42:05 +0000
Processing by Api::V1::TaggingsController#index as JSON
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings"
  Rendered api/v1/taggings/_tagging.json.jbuilder (107.4ms)
  Rendered api/v1/taggings/index.json.jbuilder (127.5ms)
Completed 500 Internal Server Error in 323ms

ActionView::Template::Error (undefined method `tagging_url' for #<#<Class:0x007f2ec1475fd0>:0x007f2ec2294e68>):
    1: json.extract! tagging, :id, :created_at, :tag_id, :taggable_id, :taggable_type, :tagger_id, :tagger_type, :context
    2: json.url tagging_url(tagging)
  app/views/api/v1/taggings/_tagging.json.jbuilder:2:in `_app_views_api_v__taggings__tagging_json_jbuilder___761431604593399078_69919401582900'
  app/views/api/v1/taggings/index.json.jbuilder:1:in `_app_views_api_v__taggings_index_json_jbuilder___947649990631862349_69919393974560'
  app/controllers/api/v1/taggings_controller.rb:6:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (13.5ms)


Started GET "/api/v1/taggings.json" for 10.0.2.2 at 2014-08-25 15:42:10 +0000
Processing by Api::V1::TaggingsController#index as JSON
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"[0m
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.3ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.3ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.4ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.6ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/index.json.jbuilder (786.8ms)
Completed 200 OK in 939ms (Views: 937.5ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/answers.json" for 10.0.2.2 at 2014-08-25 15:42:52 +0000
Processing by Api::V1::AnswersController#index as JSON
  [1m[35mAnswer Load (2.1ms)[0m  SELECT "answers".* FROM "answers"
  Rendered api/v1/answers/_answer.json.jbuilder (1.4ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.3ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.3ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.3ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.6ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.4ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.3ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.5ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.5ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.5ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (2.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (2.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (2.3ms)
  Rendered api/v1/answers/_answer.json.jbuilder (2.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (2.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.9ms)
  Rendered api/v1/answers/_answer.json.jbuilder (2.5ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.2ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.7ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.8ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.0ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.1ms)
  Rendered api/v1/answers/_answer.json.jbuilder (1.3ms)
  Rendered api/v1/answers/_answer.json.jbuilder (0.9ms)
  Rendered api/v1/answers/index.json.jbuilder (815.1ms)
Completed 200 OK in 1009ms (Views: 1006.0ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/taggings.json" for 10.0.2.2 at 2014-08-25 15:47:07 +0000
Processing by Api::V1::TaggingsController#index as JSON
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"[0m
  Rendered api/v1/taggings/_tagging.json.jbuilder (2.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.3ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.4ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/index.json.jbuilder (857.7ms)
Completed 200 OK in 1062ms (Views: 1059.6ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/taggings" for 10.0.2.2 at 2014-08-25 15:47:15 +0000
Processing by Api::V1::TaggingsController#index as JSON
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.4ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.4ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.3ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (113.5ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/index.json.jbuilder (947.9ms)
Completed 200 OK in 1146ms (Views: 1144.3ms | ActiveRecord: 0.9ms)


Started GET "/api/v1/taggings" for 10.0.2.2 at 2014-08-25 15:47:48 +0000
Processing by Api::V1::TaggingsController#index as JSON
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"[0m
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.1ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.0ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.9ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (1.2ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.7ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/_tagging.json.jbuilder (0.8ms)
  Rendered api/v1/taggings/index.json.jbuilder (786.5ms)
Completed 200 OK in 975ms (Views: 972.8ms | ActiveRecord: 0.9ms)
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m


Started GET "/" for 10.0.2.2 at 2014-08-26 14:39:17 +0000
  [1m[36mActiveRecord::SchemaMigration Load (3.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (15.3ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (31.8ms)
Completed 200 OK in 1550ms (Views: 1389.1ms | ActiveRecord: 35.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 14:39:26 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 24ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 14:39:26 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (129.9ms)
Completed 200 OK in 1717ms (Views: 1583.9ms | ActiveRecord: 19.6ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 14:46:18 +0000
  [1m[35mActiveRecord::SchemaMigration Load (0.7ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.4ms)
  Rendered home/index.html.erb within layouts/application (35.5ms)
Completed 200 OK in 345ms (Views: 307.9ms | ActiveRecord: 13.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 14:46:26 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 5ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 14:46:26 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.4ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (123.8ms)
Completed 200 OK in 583ms (Views: 544.3ms | ActiveRecord: 11.4ms)


Started GET "/answers/73" for 10.0.2.2 at 2014-08-26 14:46:39 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"73"}
  [1m[35mQuestion Load (1.0ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 73]]
  [1m[36mAnswer Load (7.4ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 73]]
  Rendered questions/show.html.erb within layouts/application (87.4ms)
  Rendered shared/_search_form.html.erb (1.5ms)
Completed 200 OK in 1781ms (Views: 1732.4ms | ActiveRecord: 16.4ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 14:47:01 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (9.0ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 320ms (Views: 317.9ms | ActiveRecord: 1.0ms)


Started GET "/answers/71" for 10.0.2.2 at 2014-08-26 14:47:09 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"71"}
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 71]]
  [1m[35mAnswer Load (1.4ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 71]]
  Rendered questions/show.html.erb within layouts/application (3.9ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 190ms (Views: 185.6ms | ActiveRecord: 2.1ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:00:08 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (25.4ms)
Completed 200 OK in 322ms (Views: 252.5ms | ActiveRecord: 19.2ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:00:19 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:00:20 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.4ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.4ms)
  Rendered home/index.html.erb within layouts/application (138.9ms)
Completed 200 OK in 516ms (Views: 487.8ms | ActiveRecord: 6.9ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-26 15:00:26 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)[0m
  Rendered tags/show.html.erb within layouts/application (2.3ms)
  Rendered shared/_search_form.html.erb (1.4ms)
Completed 200 OK in 321ms (Views: 312.3ms | ActiveRecord: 2.0ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-26 15:00:45 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)
  Rendered tags/show.html.erb within layouts/application (2.6ms)
  Rendered shared/_search_form.html.erb (1.2ms)
Completed 200 OK in 209ms (Views: 200.4ms | ActiveRecord: 2.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:00:53 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 49ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:00:53 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (168.5ms)
Completed 200 OK in 2029ms (Views: 1905.3ms | ActiveRecord: 21.2ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-26 15:01:18 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)
  Rendered tags/show.html.erb within layouts/application (2.3ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 267ms (Views: 258.4ms | ActiveRecord: 2.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:01:24 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 33ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:01:24 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.3ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (184.9ms)
Completed 200 OK in 629ms (Views: 591.7ms | ActiveRecord: 8.5ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-26 15:02:38 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)
  Rendered tags/show.html.erb within layouts/application (2.5ms)
  Rendered shared/_search_form.html.erb (1.7ms)
Completed 200 OK in 229ms (Views: 211.0ms | ActiveRecord: 6.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:02:45 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 21ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:02:46 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (183.8ms)
Completed 200 OK in 1657ms (Views: 1514.9ms | ActiveRecord: 20.6ms)


Started GET "/tags/" for 10.0.2.2 at 2014-08-26 15:03:13 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.5ms)
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (22.9ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 330ms (Views: 326.7ms | ActiveRecord: 1.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:03:20 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 1ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:03:20 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.5ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (191.2ms)
Completed 200 OK in 650ms (Views: 615.8ms | ActiveRecord: 12.0ms)


Started GET "/tags/" for 10.0.2.2 at 2014-08-26 15:03:34 +0000
Processing by TagsController#index as HTML
Completed 500 Internal Server Error in 7ms

NameError (undefined local variable or method `index_path' for #<TagsController:0x007fe6b478bd68>):
  app/controllers/tags_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (30.7ms)


Started GET "/tags/" for 10.0.2.2 at 2014-08-26 15:03:40 +0000
Processing by TagsController#index as HTML
Completed 500 Internal Server Error in 7ms

NameError (undefined local variable or method `index_path' for #<TagsController:0x007fe6cbb5ba30>):
  app/controllers/tags_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (25.3ms)


Started GET "/tags/" for 10.0.2.2 at 2014-08-26 15:05:11 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (0.9ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (18.3ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 202ms (Views: 199.2ms | ActiveRecord: 0.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:05:19 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:05:19 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (3.0ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (183.7ms)
Completed 200 OK in 1565ms (Views: 1440.4ms | ActiveRecord: 20.5ms)


Started GET "/tags/" for 10.0.2.2 at 2014-08-26 15:07:00 +0000
Processing by TagsController#index as HTML
  Rendered shared/_search_form.html.erb (1.5ms)
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags"
  Rendered tags/index.html.erb within layouts/application (25.0ms)
  Rendered shared/_search_form.html.erb (0.6ms)
Completed 200 OK in 329ms (Views: 327.1ms | ActiveRecord: 0.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:07:08 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:07:08 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (196.6ms)
Completed 200 OK in 699ms (Views: 662.7ms | ActiveRecord: 13.0ms)


Started GET "/tags/3" for 10.0.2.2 at 2014-08-26 15:07:10 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"3"}
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 3]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87, 90, 96, 103, 122, 123)
  Rendered tags/show.html.erb within layouts/application (1.4ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 301ms (Views: 292.9ms | ActiveRecord: 2.2ms)


Started GET "/tags/3" for 10.0.2.2 at 2014-08-26 15:08:28 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"3"}
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87, 90, 96, 103, 122, 123)[0m
  Rendered tags/show.html.erb within layouts/application (1.6ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 224ms (Views: 206.8ms | ActiveRecord: 6.2ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:08:35 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:08:35 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (2.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (1.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (132.0ms)
Completed 200 OK in 508ms (Views: 481.6ms | ActiveRecord: 9.7ms)


Started GET "/answers/71" for 10.0.2.2 at 2014-08-26 15:08:50 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"71"}
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 71]]
  [1m[35mAnswer Load (0.7ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 71]]
  Rendered questions/show.html.erb within layouts/application (21.8ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 233ms (Views: 225.8ms | ActiveRecord: 4.7ms)


Started GET "/answers/71" for 10.0.2.2 at 2014-08-26 15:18:22 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"71"}
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 71]]
  [1m[35mAnswer Load (0.9ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 71]]
  Rendered questions/show.html.erb within layouts/application (3.3ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 324ms (Views: 320.2ms | ActiveRecord: 1.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:18:29 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 41ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:18:29 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (4.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (187.8ms)
Completed 200 OK in 1662ms (Views: 1551.6ms | ActiveRecord: 23.2ms)


Started GET "/answers/71" for 10.0.2.2 at 2014-08-26 15:19:09 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"71"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 71]]
  [1m[36mAnswer Load (0.9ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 71]]
  Rendered questions/show.html.erb within layouts/application (37.5ms)
  Rendered shared/_search_form.html.erb (2.3ms)
Completed 200 OK in 375ms (Views: 366.1ms | ActiveRecord: 4.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:19:15 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:19:16 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.7ms)
  Rendered home/index.html.erb within layouts/application (176.4ms)
Completed 200 OK in 509ms (Views: 476.3ms | ActiveRecord: 11.8ms)


Started GET "/answers/71" for 10.0.2.2 at 2014-08-26 15:19:55 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"71"}
  [1m[35mQuestion Load (0.6ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 71]]
  [1m[36mAnswer Load (1.4ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 71]]
  Rendered questions/show.html.erb within layouts/application (43.1ms)
  Rendered shared/_search_form.html.erb (1.1ms)
Completed 200 OK in 253ms (Views: 242.2ms | ActiveRecord: 5.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:20:02 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:20:03 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.7ms)
  Rendered home/index.html.erb within layouts/application (110.3ms)
Completed 200 OK in 459ms (Views: 425.7ms | ActiveRecord: 11.9ms)


Started GET "/answers/71" for 10.0.2.2 at 2014-08-26 15:20:16 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"71"}
  [1m[36mQuestion Load (1.3ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 71]]
  [1m[35mAnswer Load (0.7ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 71]]
  Rendered questions/show.html.erb within layouts/application (30.8ms)
  Rendered shared/_search_form.html.erb (1.0ms)
Completed 200 OK in 312ms (Views: 302.7ms | ActiveRecord: 5.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:20:23 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:20:23 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (157.0ms)
Completed 200 OK in 535ms (Views: 501.7ms | ActiveRecord: 11.9ms)


Started GET "/answers/71" for 10.0.2.2 at 2014-08-26 15:20:59 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"71"}
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 71]]
  [1m[36mAnswer Load (0.9ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 71]]
  Rendered questions/show.html.erb within layouts/application (24.5ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 214ms (Views: 205.9ms | ActiveRecord: 4.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:21:05 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:21:06 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (124.0ms)
Completed 200 OK in 1664ms (Views: 1461.8ms | ActiveRecord: 20.7ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 15:21:09 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (7.5ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 196ms (Views: 191.2ms | ActiveRecord: 1.0ms)


Started GET "/answers/77" for 10.0.2.2 at 2014-08-26 15:21:12 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"77"}
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 77]]
  [1m[35mAnswer Load (1.1ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 77]]
  Rendered questions/show.html.erb within layouts/application (46.8ms)
  Rendered shared/_search_form.html.erb (1.1ms)
Completed 200 OK in 369ms (Views: 359.9ms | ActiveRecord: 5.2ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 15:21:15 +0000
Processing by QuestionsController#index as HTML
  [1m[36mQuestion Load (1.2ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (7.6ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 223ms (Views: 220.4ms | ActiveRecord: 1.2ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:21:43 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.5ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.6ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (33.1ms)
Completed 200 OK in 313ms (Views: 280.9ms | ActiveRecord: 7.7ms)


Started GET "/search?q=pets" for 10.0.2.2 at 2014-08-26 15:21:46 +0000
Processing by SearchController#index as HTML
  Parameters: {"q"=>"pets"}
  [1m[33mQuestion Search (327.6ms)[0m  curl http://localhost:9200/questions_development%2Canswers_development/_search?pretty -d '{"query":{"dis_max":{"queries":[{"match":{"_all":{"query":"pets","operator":"and","boost":10,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"pets","operator":"and","boost":10,"analyzer":"searchkick_search2"}}},{"match":{"_all":{"query":"pets","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search"}}},{"match":{"_all":{"query":"pets","operator":"and","boost":1,"fuzziness":1,"max_expansions":3,"analyzer":"searchkick_search2"}}}]}},"size":100000,"from":0,"fields":[]}'
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (104, 101, 132, 112, 131, 76, 88, 115, 70, 99, 121, 85)[0m
  [1m[35mAnswer Load (2.7ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."id" IN (73, 76, 118, 128, 87, 83, 130, 121, 72, 107, 84)
search-request: IP:10.0.2.2, params[:query]:pets, QUERY:pets, FIRST_RESULT:Where can I get tax forms?, RESULTS_N:23
  Rendered search/index.html.erb within layouts/application (2.7ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 703ms (Views: 225.4ms | Searchkick: 327.6ms | ActiveRecord: 3.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:21:53 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:21:53 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (118.8ms)
Completed 200 OK in 466ms (Views: 437.9ms | ActiveRecord: 8.8ms)


Started GET "/answers/104" for 10.0.2.2 at 2014-08-26 15:22:01 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"104"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 104]]
  [1m[36mAnswer Load (0.9ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 104]]
  Rendered questions/show.html.erb within layouts/application (4.2ms)
  Rendered shared/_search_form.html.erb (1.8ms)
Completed 200 OK in 349ms (Views: 344.9ms | ActiveRecord: 1.6ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 15:22:08 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (6.6ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 303ms (Views: 300.4ms | ActiveRecord: 1.2ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 15:22:23 +0000
Processing by QuestionsController#index as HTML
  [1m[36mQuestion Load (1.9ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (8.3ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 281ms (Views: 278.2ms | ActiveRecord: 1.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:22:29 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:22:30 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (154.6ms)
Completed 200 OK in 570ms (Views: 536.7ms | ActiveRecord: 11.9ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 15:23:20 +0000
Processing by QuestionsController#index as HTML
  [1m[36mQuestion Load (1.1ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (8.3ms)
  Rendered shared/_search_form.html.erb (1.5ms)
Completed 200 OK in 326ms (Views: 323.7ms | ActiveRecord: 1.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:23:26 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:23:27 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (234.7ms)
Completed 200 OK in 729ms (Views: 682.1ms | ActiveRecord: 8.4ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 15:24:52 +0000
Processing by QuestionsController#index as HTML
  [1m[36mQuestion Load (1.3ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (6.7ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 196ms (Views: 193.4ms | ActiveRecord: 1.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:24:59 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:24:59 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (118.6ms)
Completed 200 OK in 440ms (Views: 405.2ms | ActiveRecord: 12.2ms)


Started GET "/answers" for 10.0.2.2 at 2014-08-26 15:26:43 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.3ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (8.1ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 223ms (Views: 220.3ms | ActiveRecord: 1.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 15:26:49 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:26:49 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (189.0ms)
Completed 200 OK in 667ms (Views: 608.5ms | ActiveRecord: 12.5ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 15:37:02 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (21.3ms)
Completed 200 OK in 291ms (Views: 269.0ms | ActiveRecord: 7.8ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 22:33:58 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (9.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 5]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)
  Rendered shared/_autocomplete.html.erb (1.3ms)
  Rendered home/index.html.erb within layouts/application (31.4ms)
Completed 200 OK in 1326ms (Views: 1186.6ms | ActiveRecord: 29.9ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-26 22:34:06 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 21ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-26 22:34:07 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 5]]
  [1m[36mQuestion Load (1.2ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (76, 80, 81, 84)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (71, 72, 74, 87)[0m
  Rendered shared/_autocomplete.html.erb (3.0ms)
  Rendered home/index.html.erb within layouts/application (118.7ms)
Completed 200 OK in 1553ms (Views: 1442.1ms | ActiveRecord: 20.0ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-08-26 22:42:30 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1  [["id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (73, 77, 79, 82, 89, 100, 109, 111, 115, 119, 120, 125, 127, 129, 131, 133, 136)
  Rendered tags/show.html.erb within layouts/application (2.1ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 342ms (Views: 333.2ms | ActiveRecord: 2.3ms)


Started GET "/admin" for 10.0.2.2 at 2014-08-27 16:07:58 +0000


Started GET "/" for 10.0.2.2 at 2014-08-27 16:07:58 +0000
  [1m[36mActiveRecord::SchemaMigration Load (3.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (1.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Admin::DashboardController#index as HTML
Completed 401 Unauthorized in 90ms
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.9ms)
  Rendered home/index.html.erb within layouts/application (75.8ms)
Completed 200 OK in 3688ms (Views: 3633.8ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-28 22:51:19 +0000
  [1m[36mActiveRecord::SchemaMigration Load (3.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.9ms)
  Rendered home/index.html.erb within layouts/application (34.4ms)
Completed 200 OK in 1619ms (Views: 1594.5ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-08-28 22:51:28 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 30ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-08-28 22:51:29 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (205.8ms)
Completed 200 OK in 1676ms (Views: 1673.0ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-02 13:36:38 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.6ms)
  Rendered home/index.html.erb within layouts/application (104.4ms)
Completed 200 OK in 1770ms (Views: 1747.6ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-02 13:36:47 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 18ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-02 13:36:47 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (164.5ms)
Completed 200 OK in 1700ms (Views: 1698.7ms | ActiveRecord: 0.0ms)
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.7ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (4.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:32.844942"], ["in_language", "en"], ["text", "Can I revise my City job application?"], ["updated_at", "2014-09-02 13:43:32.844942"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (5.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:32.897974"], ["in_language", "en"], ["need_to_know", "If you're in the process of applying, you can save your application as you go and ahead any edit part you please. You can even use past applications for new job openings so you don't need to re-enter every single past employment. But once you've hit submit it's \"bon voyage.\""], ["question_id", 137], ["text", "Once you've hit that submit button, your application is locked in. However, you can save and edit applications for jobs that you are currently applying to as well as revise old applications and use them to apply to new jobs. "], ["updated_at", "2014-09-02 13:43:32.897974"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:32.911226"], ["in_language", "en"], ["text", "How do I get a motorcycle license?"], ["updated_at", "2014-09-02 13:43:32.911226"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:32.918017"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 138], ["text", "Visit the [Motorcycle License Checklist][1] page at the California Department of Motor Vehicles. [1]: http://www.dmv.ca.gov/dl/checklists/mc.htm"], ["updated_at", "2014-09-02 13:43:32.918017"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:32.925258"], ["in_language", "en"], ["text", "Can a person clear their criminal record? How?"], ["updated_at", "2014-09-02 13:43:32.925258"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:32.932187"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 139], ["text", "You can expunge -- or clear convictions from -- your criminal record by petitioning the state in which you were convicted, or the federal government. If you were convicted of crime in the State of California, instructions for the process of filing a Petition for Dismissal are [here][1] and [here][2]. [1]: http://www.courts.ca.gov/1070.htm [2]: http://www.saccourt.ca.gov/criminal/docs/1203-4-dismissal-process.pdf"], ["updated_at", "2014-09-02 13:43:32.932187"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:32.939448"], ["in_language", "en"], ["text", "Can I submit my resume for any future City job openings?"], ["updated_at", "2014-09-02 13:43:32.939448"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:32.948046"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 140], ["text", "You can file a [Job Interest Card][1] for a specific department within the City of Oakland. After you've filed one you'll get an email when a job opens in that department so you can apply. You cannot file one for a specific job--only by department. Job interest cards last 12 months and then you'll need to re-file them at the above link. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm?action=openjobrequest"], ["updated_at", "2014-09-02 13:43:32.948046"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:32.955171"], ["in_language", "en"], ["text", "Who do I contact if I found a dog?"], ["updated_at", "2014-09-02 13:43:32.955171"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (2.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:32.962556"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 141], ["text", "The city of Oakland's Animal Services is part of the Oakland Police Department. If you find a dog that you can not keep until you find its owner, call the Oakland Police Department non-emergency number: (510)-777-3333. Open 24 hours per day and 7 days per week. "], ["updated_at", "2014-09-02 13:43:32.962556"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:32.972463"], ["in_language", "en"], ["text", "Who do I need to inform if I change my address?"], ["updated_at", "2014-09-02 13:43:32.972463"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:32.979191"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 142], ["text", "The City of Oakland does not need to be informed if you change your address, but you may need to contact other government entities if: 1) You've moved and need to change your mailing address. In this case, contact the US Postal Service [here](https://moversguide.usps.com/icoa/home/icoa-main-flow.do?execution=e1s1&_flowId=icoa-main-flow&referral=MG80). 2) You need to change the address on your drivers license. In this case, contact the CA DMV [here](http://www.dmv.ca.gov/faq/genfaq.htm#CHANGEADDRESS). 3) You need to change your voter registration. In this case, find information about how to register online at the CA Secretary of State [here](https://rtv.sos.ca.gov/elections/register-to-vote/). (Note: You need to go through the whole re-registration process even if you are already registered and simply need to change your address. There is a spot to indicate that you are already registered at another address)."], ["updated_at", "2014-09-02 13:43:32.979191"]]
  [1m[35m (1.3ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:32.987258"], ["in_language", "en"], ["text", "Where are the public swimming pools in Oakland?"], ["updated_at", "2014-09-02 13:43:32.987258"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:32.995580"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 143], ["text", "You can find six public pools in Oakland. - Defremery Pool - 1269 18th Street (510) 238-2205 - East Oakland Sports Center - 9161 Edes Avenue (510) 615-5838 - Fremont Pool - 4550 Foothill Blvd (510) 535-5614 - Lions Pool - 3860 Hanly Road (510) 482-7852 - Live Oak Pool - 1055 MacArthur Blvd (510) 238-2292 - Temescal Pool - 371 45th Street (510) 597-5013 "], ["updated_at", "2014-09-02 13:43:32.995580"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.002691"], ["in_language", "en"], ["text", "How do I get an Oakland ID card?"], ["updated_at", "2014-09-02 13:43:33.002691"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (4.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.010736"], ["in_language", "en"], ["need_to_know", "<p>Before your visit, you can {{must??}} make a 30-minute appointment <a href=\"http://..com/locations.html\" target=\"blank\">online or by phone</a>. </p> <p>Oakland's city ID card is identification accepted and respected as a valid residency card by Oakland Police Department, BART Police, Alameda County Sheriffs and other local authorities {{what about city/state/federal service agencies?}}.</p> <p><b>Accepted proof of residency</b> must show your <b>name</b> (or your spouse's, if you bring a certified copy of your marriage certificate {{where do you get this?? what does it cost?? what about civil unions/domestic partnerships??}} and <b>Oakland address</b>, and be <b>dated within the last 30 days</b>:</p> <ol> <li>Utility or services bill</li> <li>Local property tax statement</li> <li>Mortgage payment {{that doesn't make sense, shouldn't it be a mortgage interest payment invoice?}}</li> <li>Bank statement</li> <li>Pay stub</li> <li>Jury summons or court order</li> <li>Federal or state income tax or refund statement</li> <li>Insurance bill</li> <li>Proof of a minor currently enrolled in a local school</li> <li>Written verification by an Oakland-funded {{how are people supposed to know what's Oakland-funded versus county- or state-funded??}} homeless shelter, hospital, health clinic or social services agency of at least 15 days of residency</li> </ol> <p><b>Accepted proof of identity</b>:</br> <ol> <li>US Permanent Resident Card (\"Green Card\")</li> <li>Current US Driver License</li> <li>Current US State Issued ID</li> <li>Current US Military Service ID</li> <li>Mexican Matricula Consular Identification Card</li> <li>Foreign Government Issued National ID Card</li> <li>Foreign Passport</li> <li>Foreign Driver License</li> <li>Foreign Military Service ID</li> <li>Consular Identification Card</li> </ol> </p> <p>If you're 18 and over and provide one of the first six documents above, you can also apply to activate your city ID for use as a pre-paid debit card. Be aware that pre-paid debit card services carry both <a href=\"http://www.oaklandcityid.com/fees.html\" target=\"blank\">monthly and transactional fees</a> that the vendor estimates range from a low end of $15 to a high end of over $27 per month.</p>"], ["question_id", 144], ["text", "<p>You can apply for a city ID card in person at the <a href=\"http://www.oaklandcityid.com/locations.html\" target=\"blank\">City Center or Fruitvale office</a> of <a href=\"http://www.sfglobalsourcing.com/specialties\" target=\"blank\">SF Global LLC</a>, the private company the city has contracted with to provide this service. Oakland's city ID card is available for purchase by Oakland residents 18 years and up {{?? website implies the card is available for at least some minors because it states that the optional financial services are available only to applicants 18 or older}} with proof of residency and identity.</p>"], ["updated_at", "2014-09-02 13:43:33.010736"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.022235"], ["in_language", "en"], ["text", "What can I do when one or more neighbors start to erect large, all enclosing fences? "], ["updated_at", "2014-09-02 13:43:33.022235"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.029152"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 145], ["text", "Installing of an over-sized fence requires a permit from building services. For reasons of fire safety and for neighborhood appearance, fences in front yards are limited to a height of three and a half feet, which is the same or six inches higher than fences allowed in many nearby cities in the Bay Area. Fencing in the back and along the sides of a house can be much taller. Visit the Planning and Building Department's [Permit information page][1] for more information. Although it is best to solve neighborhood issues in local groups and neighborhood associations, complaints can be sent to building services and these may result in fines for alternations without permits or variances. To file a Code Enforcement complaint, call (510) 238-3381 or visit the [City Code Enforcement][2] page. [1]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/ [2]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/CityCodeEnforcement/index.htm "], ["updated_at", "2014-09-02 13:43:33.029152"]]
  [1m[35m (1.3ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.037545"], ["in_language", "en"], ["text", "Can I plant a tree in a park?"], ["updated_at", "2014-09-02 13:43:33.037545"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.046488"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 146], ["text", "You cannot plant a tree in a public park. "], ["updated_at", "2014-09-02 13:43:33.046488"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.054381"], ["in_language", "en"], ["text", "How can I help the homeless?"], ["updated_at", "2014-09-02 13:43:33.054381"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.061088"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 147], ["text", "There are are a number of ways that Oaklanders can help the homeless. You can be involved in city policy, volunteer, make donations, and become an advocate. Throughout the year, the City partners with local organizations for a variety of events. Oakland’s Permanent Access to Housing (PATH) Strategy provides a roadmap for ending homelessness in the City over a period of the next fifteen years. "], ["updated_at", "2014-09-02 13:43:33.061088"]]
  [1m[35m (1.3ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.068396"], ["in_language", "en"], ["text", "How Many People Live In Oakland?"], ["updated_at", "2014-09-02 13:43:33.068396"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.077100"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 148], ["text", "The 2010 Census reported Oakland's population as 390,724. The California Department of Finance has estimated Oakland's population on January 1, 2013, as 399,326."], ["updated_at", "2014-09-02 13:43:33.077100"]]
  [1m[35m (1.8ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.086635"], ["in_language", "en"], ["text", "What Council District am I in?"], ["updated_at", "2014-09-02 13:43:33.086635"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.093637"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 149], ["text", "Go to [http://mapgis.oaklandnet.com/councildistricts/][1] and enter your address. The map shows how the city is divided into 7 council districts - you can click into any district to see the Councilmember, or you can enter your address in the locator field to see the result. The Councilmember contact information is displayed. [1]: http://mapgis.oaklandnet.com/councildistricts/"], ["updated_at", "2014-09-02 13:43:33.093637"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.100927"], ["in_language", "en"], ["text", "Where can I view a live webcast of City Council Meetings?"], ["updated_at", "2014-09-02 13:43:33.100927"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.108558"], ["in_language", "en"], ["need_to_know", "The City of Oakland website can be found at http://www2.oaklandnet.com/"], ["question_id", 150], ["text", " [Oaklandnet.com][1] features [live (real-time streaming) as well as archived video.][2] Streaming video is available in the following formats. View the system requirements below to select the one that is best for you. (Live) [Microsoft Silverlight Users][3] (for PC and Macintosh) (Live) [Realplayer Users][4] Archived Videos and Agendas of the Oakland City Council: [Click here to view agendas, minutes and videos from past Council meetings.][5] [1]: http://www.Oaklandnet.com [2]: http://www2.oaklandnet.com/Government/o/CityCouncil/s/VideoArchive/index.htm [3]: http://oakland.granicus.com/MediaPlayer.php?publish_id=2 [4]: http://helixvideosvr.oaklandnet.com/ramgen/broadcast/encoderstream.rm [5]: http://oakland.legistar.com/calendar.aspx"], ["updated_at", "2014-09-02 13:43:33.108558"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.116175"], ["in_language", "en"], ["text", "How do I report drug dealing?"], ["updated_at", "2014-09-02 13:43:33.116175"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.123605"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 151], ["text", "If there is drug dealing in progress you can report it to the Oakland Police Departments non-emergency number -- **510-777-3333**. Make sure to get the incident number. You can also call the Drug Hotline -- **510-238-DRUG/ 238-3784** drug dealing tip-line – you can leave a recorded message that police use for follow-up and to note chronic drug dealing hot spots. Give as much information as possible including gender, race, age, height, weight, clothing, possible location of drugs and associated vehicles."], ["updated_at", "2014-09-02 13:43:33.123605"]]
  [1m[35m (1.3ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.132846"], ["in_language", "en"], ["text", "Do I need a permit to throw a party?"], ["updated_at", "2014-09-02 13:43:33.132846"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.139990"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 152], ["text", "**Times when you DON'T need an event permit** If you are having a party **on you own property** (whether it's inside or outside, whether you rent or own) you don't need a permit to play amplified music or serve alcohol. ---------- **Times when you WILL need an event permit** There are times when you will need a **special permit** to hold an event. Conditions that require a special event permit include: - an event that is open to the public with 50 or more people will be in attendance - events that require street closures (e.g. a block party) - a party where people will be drinking alcohol outside of private property - a party with amplified sound that can be heard beyond your own property ---------- **How to get the permits you need** If you think your party meets the qualifications above then you will need **at least one permit from the City, maybe more.** Almost **all** events require a permit from the Special Activities unit of the City Administrator's Office. In most (not all) cases, you are going to need to prove that you have liability insurance for your proposed event. You can apply for a permit by contacting either of the following staff people: - Nancy Marcus - 510-238-3294 - nmarcus@oaklandnet.com - Jasmine Chan - 510-238-6914 - jchan@oaklandnet.com If your party is going to require a **street closure** then you must you must file an application with the Special Event Unit of the Oakland Police Department. Be sure to file the application with OPD **at least 30 days prior to your event**. To hold a party in a public space (e.g. a City park) you will need to request a reservation with the Office of Parks and Recreation by phone at 510-238-3187 or by email at oprscheduling@oaklandnet.com. "], ["updated_at", "2014-09-02 13:43:33.139990"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.147692"], ["in_language", "en"], ["text", "Who do I contact to get a space at a Farmer's Market?"], ["updated_at", "2014-09-02 13:43:33.147692"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.154729"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 153], ["text", "There are different organizations that run the various farmer's markets throughout the city. You can find the contact information for specific farmer's markets through the California Certified Farmer's Market website. [http://www.cafarmersmarkets.com/index.cfm][1] [1]: http://www.cafarmersmarkets.com/index.cfm"], ["updated_at", "2014-09-02 13:43:33.154729"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.162770"], ["in_language", "en"], ["text", "Where is City Hall located?"], ["updated_at", "2014-09-02 13:43:33.162770"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.170983"], ["in_language", "en"], ["need_to_know", "Oakland City Hall is conveniently located right off the BART line at the 12th Street/City Center station. For more information about schedules and for a map of the system, visit BART at [www.bart.gov][1] or call (510) 464-7133 (TDD#: (510) 839-2218). City Hall is also accessible via several different bus lines run by AC Transit. For more information about schedules and a system map, visit AC Transit at [www.actransit.org][2] or call (510) 891-4706 (TDD#: (510) 428-2266). Bus lines that serve City Hall include: 1, 1R, 11, 12, 18, 26, 72, 72R, 72M, 58L, 51A and the [free Broadway Shuttle][3]. [1]: http://www.bart.gov [2]: http://www.actransit.dst.cs.us [3]: http://www.meetdowntownoak.com/shuttle.php"], ["question_id", 154], ["text", "**Oakland City Hall**<br> 1 Frank H. Ogawa Plaza<br> Oakland, CA 94612 [![map of oakland city hall][1]](http://mapq.st/146TJoF)<br> Frank H. Ogawa plaza is located on 14th street, between Broadway and Clay. [1]: http://i.imgur.com/DKkMn9M.png "], ["updated_at", "2014-09-02 13:43:33.170983"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.179234"], ["in_language", "en"], ["text", "How can I report students who are skipping school?"], ["updated_at", "2014-09-02 13:43:33.179234"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.187347"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 155], ["text", "Truancy Reporting: To report and get help for youth not in school, phone the following. OUSD Police Non-Emergency Line: **510-874-7777**. Be sure to describe youth, their clothing, their location, their activity (any drugs or alcohol use) when calling in. For questions to OUSD police, email: **police@ousd.k12.ca.us** "], ["updated_at", "2014-09-02 13:43:33.187347"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.195096"], ["in_language", "en"], ["text", "How do I get a replacement birth certificate?"], ["updated_at", "2014-09-02 13:43:33.195096"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.201744"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 156], ["text", "You have to request a replacement birth certificate from the county where you were born. If you were born in Alameda County, you can find directions for ordering replacement birth certificates [here][1]. [1]: http://www.acgov.org/auditor/clerk/birth2b.htm"], ["updated_at", "2014-09-02 13:43:33.201744"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.209875"], ["in_language", "en"], ["text", "How do I contact my Councilmember?"], ["updated_at", "2014-09-02 13:43:33.209875"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.218487"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 157], ["text", "If you know who your councilmember is, you can go to: http://www2.oaklandnet.com/Government/o/ElectedOfficials/index.htm and click on the link for your member. This will take you to a website for that council member and information on who to contact their office , along with support staff If you don't know your representative, you can go to: http://mapgis.oaklandnet.com/councildistricts/ and enter your address for find the link for your representative."], ["updated_at", "2014-09-02 13:43:33.218487"]]
  [1m[35m (0.8ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.225922"], ["in_language", "en"], ["text", "How do I rent a facility?"], ["updated_at", "2014-09-02 13:43:33.225922"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.233654"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 158], ["text", "Please call Central Reservations at (510) 238-3187 or review our [Rental Facilities page][1] for additional information. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-09-02 13:43:33.233654"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.241216"], ["in_language", "en"], ["text", "How do I start residential garbage and recycling service in Oakland?"], ["updated_at", "2014-09-02 13:43:33.241216"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.248878"], ["in_language", "en"], ["need_to_know", "To establish residential garbage services and green waste pickup in Oakland: - **If you own your home:** contact Waste Management of Alameda County at (510) 613-8710 to start weekly garbage and yard trimmings/food scraps collection service. - **If you are renting:** contact your landlord or property manager to start weekly garbage and yard trimmings/food scraps collection service. To start weekly recycling collection service for both owners and renters, contact your recycling company: - **North and West Oakland:** Recycling service is provided by California Waste Solutions. Call (510) 836-6200 to subscribe for service or to request a cart. - **East Oakland:** Recycling service is provided by Waste Management of Alameda County. Call (510) 613-8710 to subscribe for service or to request a cart."], ["question_id", 159], ["text", ""], ["updated_at", "2014-09-02 13:43:33.248878"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.256160"], ["in_language", "en"], ["text", "Where can I receive language assistance?"], ["updated_at", "2014-09-02 13:43:33.256160"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.264415"], ["in_language", "en"], ["need_to_know", "The Equal Access Office provides many kinds of language assistance to Oakland residents. [This webpage on the City's website][1] has a list of Language Assistance accommodations, that include: - How to know which city services have language assistance provided - A printable card you can carry with you to help city staff know that you need help in a language other than English **You can contact the Office of Equal Access for more information**<br> 150 Frank H. Ogawa Plaza, 2nd Floor, Oakland, CA 94612<br> phone: (510) 238-6813<br> [equalaccess@oaklandnet.com][2] [1]: http://www2.oaklandnet.com/Government/o/HumanResources/o/EqualAccess/DOWD000747 [2]: mailto:equalaccess@oaklandnet.com"], ["question_id", 160], ["text", "Language assistance can also include: - Interpreters - Assistance from a bilingual staff member (who has received appropriate training) - Multimedia resources (for example, a multilingual CD-Rom) - Multilingual information on web sites - Multilingual telephone information - Translated printed materials"], ["updated_at", "2014-09-02 13:43:33.264415"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.272816"], ["in_language", "en"], ["text", "How much is the City’s total budget?"], ["updated_at", "2014-09-02 13:43:33.272816"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.280383"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 161], ["text", "The City’s annual budget across all funds for the current fiscal year (FY 2012-13) is about $1 billion."], ["updated_at", "2014-09-02 13:43:33.280383"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.288572"], ["in_language", "en"], ["text", "How do I report an abandoned vehicle?"], ["updated_at", "2014-09-02 13:43:33.288572"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.295691"], ["in_language", "en"], ["need_to_know", "To report abandoned vehicles parked on a public street for over 72 hours, you can: - Call the Abandoned Auto Detail at (510) 777-8622. - Email the location, description, and license number of the vehicle, if known, to AbandonedAuto@oaklandnet.com. To report an abandoned vehicle parked on private property or a private street, you can: - Call the Vehicle Abatement Detail at (510) 777-8538. The Abandoned Auto Detail operates Monday through Friday, 6am to 4pm. "], ["question_id", 162], ["text", ""], ["updated_at", "2014-09-02 13:43:33.295691"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.303007"], ["in_language", "en"], ["text", "What is the City doing to help the homeless?"], ["updated_at", "2014-09-02 13:43:33.303007"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.313770"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 163], ["text", "The City of Oakland's homeless programs provide housing and services to people in Oakland who are homeless, hungry, HIV/AIDS positive, or living on extremely low incomes. Community Housing Services recognizes the tremendous need for services specific to the homeless population. We partner with non-profit organizations to assist the homeless and near-homeless community with homeless prevention, rapid re-housing, permanent supportive housing, shelter, transitional/supportive housing and special needs housing. We also provide other homeless support services such as food, employment, physical and mental health, drug abuse and domestic violence programs."], ["updated_at", "2014-09-02 13:43:33.313770"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.322607"], ["in_language", "en"], ["text", "How do I request information from the Oakland Police Department"], ["updated_at", "2014-09-02 13:43:33.322607"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.329762"], ["in_language", "en"], ["need_to_know", "Your request will either be fulfilled or denied- if it is denied you will be furnished with details of why the request is not being fulfilled. **Public records include:** - Complaints - Crime Reports - Department publications - Employment contracts - Offense reports - Recordings - List item - Traffic accident reports - Traffic enforcement incidents - Training records "], ["question_id", 164], ["text", "You may request certain types of information from the OPD using an Online, mail or in-person process. We highly suggest the online method. **Online** Step 1: Copy the Public Records [request form][1] to your computer Step 2: Save the PDF document to your computer and then complete the details on the PDF document itself. Step 3: Re-SAVE the PDF on your computer with the details completed. Step 4: Email it to [OPDPublicRecordsRequest@oaklandnet.com][2]. **In-Person** Step 1: Picking up a copy of the form in person at the [Police Administration Building][3] Patrol Desk on the first floor. Step 2: Bring the completed form to the OPD Records Division Kiosk on the first floor of the PAB. The Records Kiosk is open to the public from 8:00 am to 3:00 pm Monday through Friday and from 8:00 am until noon on Saturday and Sunday. **By Mail** Send your completed paper form to: Public Records Request Coordinator Oakland Police Department Records Section 455 7th Street, Room 306 Oakland, CA 94607 Contact Information for Assistance If you need additional assistance with a Public Records request, please contact the Public Records Request Coordinator: (510) 238-7143. [1]: http://www2.oaklandnet.com/Government/o/OPD/s/document/DOWD002885 [2]: http://mailto:OPDPublicRecordsRequest@oaklandnet.com?Subject=RecordsRequest [3]: http://maps.google.com/maps?hl=en&source=hp&ie=UTF8&q=oakland%20police%20department&fb=1&gl=us&hq=police%20department&hnear=oakland&ei=FJrfSrydOYWyswPn-IXoCA&ved=0CCsQnQIwBg&view=map&f=d&daddr=455%207th%20St,%20Oakland,%20CA&geocode=CU8p8gFnSfHUFcnGQAIdCD22-A"], ["updated_at", "2014-09-02 13:43:33.329762"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.337782"], ["in_language", "en"], ["text", "What charter schools are near me?"], ["updated_at", "2014-09-02 13:43:33.337782"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.345260"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 165], ["text", "The [Center for Education Reform][1] can help you find charter schools near you. [This link][2] will show a list of all the charter schools in Oakland. You can also focus the list by choosing the grade level or locations you need. [1]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D= [2]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D="], ["updated_at", "2014-09-02 13:43:33.345260"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.353175"], ["in_language", "en"], ["text", "What are the parking holidays in Oakland?"], ["updated_at", "2014-09-02 13:43:33.353175"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.362298"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 166], ["text", " The only days when there is no parking enforcement in Oakland are: - New Year's Day (January 1st) - Martin Luther King Jr. Day - President's Day - Memorial Day - Independence Day (July 4th) - Labor Day - Thanksgiving Day - Christmas Day (December 25th)"], ["updated_at", "2014-09-02 13:43:33.362298"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.370142"], ["in_language", "en"], ["text", "How do I get a marriage license?"], ["updated_at", "2014-09-02 13:43:33.370142"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.377364"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 167], ["text", "Alameda County will issue you a marriage license is you and your future spouse request one in-person at the County Clerk-Recorder's Office. You can find more information [here][1]. [1]: http://www.acgov.org/auditor/clerk/ml.htm"], ["updated_at", "2014-09-02 13:43:33.377364"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.385051"], ["in_language", "en"], ["text", "Where can I find classes, programs and events that are happening at the library?"], ["updated_at", "2014-09-02 13:43:33.385051"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.392162"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 168], ["text", "You can find a listing of library events on the library's website [here][1]. You can also pick up a monthly calendar of events at any [library branch][2]. [1]: http://oaklandlibrary.org/events [2]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-09-02 13:43:33.392162"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.400669"], ["in_language", "en"], ["text", "How do I get a disabled person parking permit?"], ["updated_at", "2014-09-02 13:43:33.400669"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (2.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.409144"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 169], ["text", "Disabled parking permits need to be obtained from the California Department of Motor Vehicles. You can find more information and the application form [here](http://www.dmv.ca.gov/pubs/brochures/fast_facts/ffvr07.htm#)."], ["updated_at", "2014-09-02 13:43:33.409144"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.418746"], ["in_language", "en"], ["text", "Are there internships at the City?"], ["updated_at", "2014-09-02 13:43:33.418746"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.425970"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 170], ["text", "You can find more information on City internships on the City of Oakland website. Different departments (including the [City Auditor][1], and the [Public Ethics Commission][2]) offer internships which can be found posted on the individual department's website. Go to the City of Oakland website, and search \"[internship][3]\". [1]: http://www.oaklandauditor.com/en/ruby/careers/40 [2]: http://www2.oaklandnet.com/Government/o/CityAdministration/d/PublicEthics/internships/index.htm [3]: http://www2.oaklandnet.com/Search/index.htm?cx=017801668647536616097:grdicmryz10&cof=FORID:10&ie=UTF-8&q=internship&sa=Search"], ["updated_at", "2014-09-02 13:43:33.425970"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.433990"], ["in_language", "en"], ["text", "How can I rent event space in Oakland?"], ["updated_at", "2014-09-02 13:43:33.433990"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.441211"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 171], ["text", "Oakland Parks & Recreation offers rental facilities, listed here: [http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm][1] There are also private facilities available to rent in Oakland. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-09-02 13:43:33.441211"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.448246"], ["in_language", "en"], ["text", "Where can I get tax forms?"], ["updated_at", "2014-09-02 13:43:33.448246"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.456085"], ["in_language", "en"], ["need_to_know", "If you would like to download tax forms online: Federal tax forms are available from the Internal Revenue Service. Many of the frequently used Federal tax forms can be found at http://www.irs.gov/uac/Forms,-Publications,-and-Other-Tax-Products. State tax forms are available from the State of California’s Franchise Tax Board. Many of the frequently used state tax forms can be found at https://www.ftb.ca.gov/forms/search/index.aspx."], ["question_id", 172], ["text", "You can find tax forms at the [Oakland Public Library][1] (like the 1040 EZ tax form). Some are in print form, and others can be printed by a library staff member (printing charges may apply). Before you go, it's helpful to bring the exact form number you need so the library staff member can find it with ease. If you don't have the form number, not to worry: a staff member is happy to help. To find an Oakland Public Library location near you, [look at the map][2]. [1]: http://www.oaklandlibrary.org/using-library/locations-hours [2]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5"], ["updated_at", "2014-09-02 13:43:33.456085"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.464342"], ["in_language", "en"], ["text", "What are the safest areas in Oakland?"], ["updated_at", "2014-09-02 13:43:33.464342"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.484989"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 173], ["text", "The best way to find out what areas of Oakland have the fewest reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-09-02 13:43:33.484989"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.492584"], ["in_language", "en"], ["text", "Are there any sex offenders in my neighborhood?"], ["updated_at", "2014-09-02 13:43:33.492584"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.502337"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 174], ["text", "You can search for your address on the [Meghan's Law Website][1] to find registered sex offenders that live nearby. Before you search the map, you have to click \"continue\" at the bottom of the first page, then click the check box and \"continue\" at the bottom of the second page. Then you will see a map of California and you can search for your address by clicking on the \"address\" box on the left side of the page. [1]: http://www.meganslaw.ca.gov/"], ["updated_at", "2014-09-02 13:43:33.502337"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.511932"], ["in_language", "en"], ["text", "What do I do if my car has been towed?"], ["updated_at", "2014-09-02 13:43:33.511932"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.520590"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 175], ["text", "If you think your car has been towed, first check the A&B Towing site (http://www.abimpound.com/towed.html) to see if they know. You should also call the Police Department Records Division at (510) 238-3021 to confirm your car has been towed. If it has been towed, you can go to the Records Division, 3rd floor, Police Administration Building, 455 7th Street (at Broadway) to get a Release Form for your vehicle."], ["updated_at", "2014-09-02 13:43:33.520590"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.528211"], ["in_language", "en"], ["text", "Where is the closest public library?"], ["updated_at", "2014-09-02 13:43:33.528211"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.535185"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 176], ["text", "To see a map of all of the Oakland Public Libraries, go [here][1]. You can click on each dot to see the address, phone number and hours. You can find a list of library locations on the Oakland Public Library Website [here][2]. If you are looking for a library close to where you are right now, no matter where you are, you can click [here][3]. [1]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5 [2]: http://oaklandlibrary.org/using-library/locations-hours [3]: https://maps.google.com/maps?ie=UTF-8&q=closest%20public%20library"], ["updated_at", "2014-09-02 13:43:33.535185"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.542936"], ["in_language", "en"], ["text", "Where are the recycling centers located?"], ["updated_at", "2014-09-02 13:43:33.542936"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.551692"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 177], ["text", "Here's a [directory of recycling drop off centers in and around Oakland][1]. For more information about recycling in Oakland, visit [www.oaklandrecycles.com][2]. [1]: http://www2.oaklandnet.com/oakca/groups/pwa/documents/form/oak027311.pdf [2]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm"], ["updated_at", "2014-09-02 13:43:33.551692"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.559297"], ["in_language", "en"], ["text", "What are the current job openings at the City?"], ["updated_at", "2014-09-02 13:43:33.559297"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.567682"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 178], ["text", "Check the [Human Resources page][1] for a list of open jobs. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["updated_at", "2014-09-02 13:43:33.567682"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.575043"], ["in_language", "en"], ["text", "What youth services and activities are available?"], ["updated_at", "2014-09-02 13:43:33.575043"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.582697"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 179], ["text", "Several city departments offer services for youth. You can see the Parks and Recreation listings [here][1]. The Oakland Public Library has many services and listings of services for [kids][2] and [teens][3]. Measure Y youth programs are [here][4]. **Late Night Live** Provides safe places for youth and families late Friday and Saturday nights. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Summer Job Program** Program to employ low-income youth during the summer. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Mentoring Initiative** Program that finds caring adults to work with Foster youth, formerly incarcerated youth and chronically absent youth. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Summer Stars Program** An outdoor camping experience for middle school students from our toughest neighborhoods. Find dates for the next trip at the Summer Star's [website][5]. If you would like to sign up your group for a three day/two night camping trip, please contact us via email at oaklandpal@oaklandpal.org OR call 510-615-5758. **Oakland Police Activities League (PAL)** Program dedicated to offering programs and opportunities for kids to work with positive role models and learn about success and failure without guns and drugs. Offers basketball, track and field, overnight camping, and more. [Oakland PAL Website][6] **Oakland Police Explorers** Program designed for high school students who are at least 14.5 years old and want a chance to see what law enforcement is all about. If you are interested in the Explorer Program at the Oakland Police Department, contact the Explorer Advisors, Officer Mildred Oliver or Officer Jumaal Hill at: ph: 510-615-5758 fax: 510-615-5864 oaklandpal@oaklandpal.org **OK (Our Kids) Program** Program focused on reducing the high incarceration and homicide rates of African-American young men (12-18 years old) by providing needed services to youth, promoting economic self-reliance, and encouraging responsible citizenship. [Website][7] ph: 510-238-7998 okprogram@okprogramofoakland.com **GREAT Program** The Gang Resistance, Education and Training program is a structured, school-based program implemented in areas where gang activity either exists or are emerging. [Website][8] You can also find information about some of the [organizations with which we are partnering to give hope to Oakland's youth][10]. [1]: https://securerw.oaklandnet.com/registrationmain.sdi [2]: http://oaklandlibrary.org/kids [3]: http://oaklandlibrary.org/teens [4]: http://oaklandunite.org/youth/ [5]: http://oaklandpal.org/mayor_quan_summer_stars_camping_program [6]: http://oaklandpal.org/home [7]: http://www.okprogramofoakland.com/ [8]: http://www.great-online.org/ [9]: http://www.oaklandlibrary.org/teens/your-life/mind-body/mental-health-0 [10]: http://www2.oaklandnet.com/Government/o/Mayor/i/EducationLeadership/OAK025457"], ["updated_at", "2014-09-02 13:43:33.582697"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.590461"], ["in_language", "en"], ["text", "Where can I get free Wi-Fi?"], ["updated_at", "2014-09-02 13:43:33.590461"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.599453"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 180], ["text", "You can use free Wi-Fi at all Oakland Public Library locations. You can see a list of libraries [here][1]. You can use free Wi-Fi inside City Hall at 1 Frank H. Ogawa Plaza, Oakland, CA 94612. [1]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-09-02 13:43:33.599453"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.607483"], ["in_language", "en"], ["text", "What can and can't I recycle?"], ["updated_at", "2014-09-02 13:43:33.607483"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.615695"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 181], ["text", "You can find a list of what you can and cannot recycle for both residential and commercial services on the [Oakland Recycles website][1]. For recyclable items that are not listed on the Oakland Recycles website, please visit [www.stopwaste.org][2] and use the online Recycling Guide (towards the bottom right side of the Stop Waste web page. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm [2]: http://www.stopwaste.org"], ["updated_at", "2014-09-02 13:43:33.615695"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.623502"], ["in_language", "en"], ["text", "How can I see how my city councilperson voted on a particular issue?"], ["updated_at", "2014-09-02 13:43:33.623502"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.630156"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 182], ["text", "Visit the City Clerk's Legistar search feature at [http://oakland.legistar.com/legislation.aspx][1]. Click on the record number for the legislation in the search results and then on Action Details. [1]: http://oakland.legistar.com/legislation.aspx"], ["updated_at", "2014-09-02 13:43:33.630156"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.637702"], ["in_language", "en"], ["text", "Where do I get a bus pass?"], ["updated_at", "2014-09-02 13:43:33.637702"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.645124"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 183], ["text", "[AC Transit](http://actransit.com) makes bus passes available at many Oakland retail locations, including supermarkets, drug stores, senior centers and news stands. Search for your nearest retail location using your Zip code at [AC Transit's retail locations finder](http://www.actransit.org/rider-info/where-to-buy-a-pass/). Passes can be purchased by mail using the [AC Transit order form](http://www.actransit.org/wp-content/uploads/Ticket_-Order_Form-8.2011.pdf). All AC Transit vehicles accept payments using [Clipper Card](http://www.actransit.org/rider-info/why-clipper/), the Bay Area’s reloadable card for paying transit fares. A Clipper card keeps track of the value on it and automatically deducts the right fare, including transfers and discounts. You can load an AC Transit pass onto a Clipper card, a pass from another agency, or cash value."], ["updated_at", "2014-09-02 13:43:33.645124"]]
  [1m[35m (1.6ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.654444"], ["in_language", "en"], ["text", "How do I register to vote?"], ["updated_at", "2014-09-02 13:43:33.654444"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (1.2ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.662393"], ["in_language", "en"], ["need_to_know", "---------- *Have other questions about how to register to vote, or whether you need to? Go to the [Alameda County Registrar of Voters FAQ Page][1]* [1]: http://www.acgov.org/rov/registrationfaq.htm "], ["question_id", 184], ["text", " **If you just need to register or re-register to vote -- you can do it online!** **Go to the [California Secretary of State's online voter registration page][1].** [1]: http://registertovote.ca.gov/"], ["updated_at", "2014-09-02 13:43:33.662393"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.669547"], ["in_language", "en"], ["text", "Can I speak with a live person at the City for help with a question?"], ["updated_at", "2014-09-02 13:43:33.669547"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.676990"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 185], ["text", "You can call the Oaklanders Assistance Center at (510) 444-CITY, which is (510) 444-2489. Or email your question to [oac@oaklandnet.com][1]. If you prefer, you may visit the center in-person. Office hours are typically 8:30 am to 5pm. [1]: http://mailto:oac@oaklandnet.com"], ["updated_at", "2014-09-02 13:43:33.676990"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.684901"], ["in_language", "en"], ["text", "How much does it cost to ride a bus in Oakland?"], ["updated_at", "2014-09-02 13:43:33.684901"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.692947"], ["in_language", "en"], ["need_to_know", "You might also consider a convenient buss pass. [Click here to see the answer on where to purchase bus passes][1]. [1]: http://answers.oaklandnet.com/quick_answers/where-do-i-get-a-bus-pass"], ["question_id", 186], ["text", "You can find a full detailed listing of bus fares on the AC Transit site [here][1]. * Regular bus fare is $2.10. * Youth bus fare is $1.05 (ages 5-18) * Senior bus fare is $1.05 (ages 65+) [1]: http://www.actransit.org/rider-info/bus-fares/"], ["updated_at", "2014-09-02 13:43:33.692947"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.701290"], ["in_language", "en"], ["text", "Who do I contact if a tree is protruding on to my property?"], ["updated_at", "2014-09-02 13:43:33.701290"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.708161"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 187], ["text", "If there is a tree protruding onto your property you will need to determine if the tree itself is on public or private property. If the tree is on: - **Private Property** - you will need to communicate with the owner and discuss a solution. If the resolution is tree removal, the owner will need to file a [removal permit][1]. - **Public Property** - Please call (510) 615-5566 or submit your request online by clicking here, use the SeeClickFix mobile or web app or email pwacallcenter@oaklandnet.com. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/o/TreeServices/OAK023048"], ["updated_at", "2014-09-02 13:43:33.708161"]]
  [1m[35m (1.8ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.716274"], ["in_language", "en"], ["text", "Does the City have a calendar of fun events?"], ["updated_at", "2014-09-02 13:43:33.716274"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.723433"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 188], ["text", "Visit Oakland, the official destination marketing organization for the City of Oakland, maintains an online event calendar at [www.visitoakland.org][1]. Submit your event information via email to [events@visitoakland.org][2]. [1]: http://www.visitoakland.org [2]: http://mailto:events@visitoakland.org"], ["updated_at", "2014-09-02 13:43:33.723433"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.730726"], ["in_language", "en"], ["text", "How do I get a passport?"], ["updated_at", "2014-09-02 13:43:33.730726"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.738931"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 189], ["text", "To get a passport or to renew your existing passport, visit the U.S. State Department's [website][1] and fill out an application. Then bring your finished application, original birth certificate and check or money order to a local processing center. Visit the following website to find a nearby center. You may need to schedule an appointment. [http://iafdb.travel.state.gov/][2] [1]: http://travel.state.gov/passport/ [2]: http://iafdb.travel.state.gov/"], ["updated_at", "2014-09-02 13:43:33.738931"]]
  [1m[35m (1.3ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.748658"], ["in_language", "en"], ["text", "How can I report an animal nuisance?"], ["updated_at", "2014-09-02 13:43:33.748658"]]
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.756295"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 190], ["text", "If it is an emergency (a vicious dog or an animal in distress), call (510) 777-3333. If it is not an emergency (barking dogs, obnoxious cats, crowing roosters), call (510) 535-5602. Please note that roosters are illegal in Oakland. "], ["updated_at", "2014-09-02 13:43:33.756295"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.763249"], ["in_language", "en"], ["text", "What is the closest park to my house?"], ["updated_at", "2014-09-02 13:43:33.763249"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.770092"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 191], ["text", "You can see a list of all the parks and where they are on a map here[1] [1]: http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm"], ["updated_at", "2014-09-02 13:43:33.770092"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.777872"], ["in_language", "en"], ["text", "What are the closest hiking trails?"], ["updated_at", "2014-09-02 13:43:33.777872"]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.786128"], ["in_language", "en"], ["need_to_know", "There are many trails in the hills and various parks. The Parks and Recreation department lists the names of all of their <a href=\"http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm\">parks</a>, as well as various walking tours. You can search for all Bay Area trails near you on an interactive map. <a href=\"http://www.transitandtrails.org/find/trailheads\">Transit to Trails</a> shows many city and county parks, including those that can be reached by public transit. Yelp also lists trails, with reviews: <a href=\"http://www.yelp.com/search?find_desc=Walking+Trails&find_loc=Oakland%2C+CA\">Search Yelp for Walking Trails.</a> "], ["question_id", 192], ["text", ""], ["updated_at", "2014-09-02 13:43:33.786128"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.793457"], ["in_language", "en"], ["text", "What is the City's budget process?"], ["updated_at", "2014-09-02 13:43:33.793457"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.801659"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 193], ["text", "The City of Oakland operates on a two-year budget cycle and is how City Council establishes its goals, program priorities and desired service levels for the upcoming fiscal period. The City Charter requires the City's budget be balanced -- expenditures must not exceed revenues. The Charter also requires that the budget must be adopted on or before June 30. Budget development and adoption occurs on odd numbered years and mid-cycle budget amendments occur on even numbered years. [Click here to visit the City's web page on the budget process.][1] [1]: http://ttp://www2.oaklandnet.com/Governmacnt/o/CityAdministration/d/BudgetOffice/DOWD005079."], ["updated_at", "2014-09-02 13:43:33.801659"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.808566"], ["in_language", "en"], ["text", "How do you request a bike rack In your neighborhood or commercial street?"], ["updated_at", "2014-09-02 13:43:33.808566"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.815190"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 194], ["text", "You can request a rack on City owned property by filling out the request form. The form asks for information about the address, the business name and your relationship to the business (if available)"], ["updated_at", "2014-09-02 13:43:33.815190"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.822535"], ["in_language", "en"], ["text", "I am behind on my property taxes. Is there a City program that can help?"], ["updated_at", "2014-09-02 13:43:33.822535"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.830269"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 195], ["text", "The City does not assist with the payment of property taxes. Questions about delinquent property taxes should be directed to the Alameda County Treasurer-Tax Collector’s Office at [www.acgov.org/treasurer/][1], or by calling 510.272.6800. The County does offer payment plans. With respect to City liens placed on property taxes, under very limited circumstances, payment plans with the City may be allowed and the lien(s) would be reversed. For more information, contact the Oakland Housing Assistance Center: - Phone: (510) 238-6182 - Email: housingassistance@oaklandnet.com - Address: 250 Frank Ogawa Plaza 6th Floor Oakland, CA 94612 - [http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm][2] [1]: http://www.acgov.org/treasurer/ [2]: http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm"], ["updated_at", "2014-09-02 13:43:33.830269"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.838815"], ["in_language", "en"], ["text", "How do you report a problem with your smartphone."], ["updated_at", "2014-09-02 13:43:33.838815"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.846547"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 196], ["text", "When you are outside and see an issue that the City of Oakland is responsible, take out your smartphone, click a picture, and then report it. This problems gets tracked in the City's database. You get a link to share with your neighbors, while being informed when the City fixes the problem. First download the app - SeeClickFix. You will need to register with SeeClickFix to get an account. Then, you track your reports by going to the web site https://seeclickfix.com. Once you start reporting these issues, you are notified of nearby problems and can support your neighbors efforts to make your neighborhood better."], ["updated_at", "2014-09-02 13:43:33.846547"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.854025"], ["in_language", "en"], ["text", "How do I contact my Council Member?"], ["updated_at", "2014-09-02 13:43:33.854025"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.860984"], ["in_language", "en"], ["need_to_know", "If you know your Council district number, the general phone number for each Councilmember is (510) 238-700[# of District]. For example, the phone number for the District 4 Office (Montclair-Laurel-Allendale) is (510) 238-7004. Oakland's At-Large Councilmember's Office phone is (510) 238-7008. The City's naming convention for emaill addresses is first-initial-last-name@oaklandnet.com, for example Councilmember Libby Schaaf's email is lschaaf@oaklandnet.com. If you want to know what Councilmembers serve on a particular Council Committee go [here][4]. If you want to email ALL Councilmembers at once, send to citycouncil@oaklandnet.com . Many Councilmembers have newsletters you can subscribe to and some hold public office hours for drop-in visits."], ["question_id", 197], ["text", "If you don't know who your Councilmember is, use this [locator tool][1] or call the Council Office Front Desk at (510) 238-7584. The [locator tool][2] also provides your Councilmember's email. Links to all Councilmember websites are [here][3]. [1]: http://mapgis.oaklandnet.com/councildistricts/ [2]: http://%20http://mapgis.oaklandnet.com/councildistricts/ [3]: http://www2.oaklandnet.com/Government/o/CityCouncil/index.htm [4]: http://www2.oaklandnet.com/oakca1/groups/cityclerk/documents/webcontent/oak040150.pdf"], ["updated_at", "2014-09-02 13:43:33.860984"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.868478"], ["in_language", "en"], ["text", "Can I apply for more than one City job at a time?"], ["updated_at", "2014-09-02 13:43:33.868478"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.876709"], ["in_language", "en"], ["need_to_know", "Let's say you've applied to a job before at the [Employment Opportunities][1] page. High five. Your standard information is are all saved with your account in your online profile. Address, past work history, all the stock info is saved. You can use the stored information for your new job with a click of a button and update it as you need to. **However, most jobs have Supplemental Questions that you MUST answer.** These questions are specific and unique. For instance, if I apply for a Park Ranger job and a Park Supervisor job, my resume is going to look pretty much the same and I can use it for both. But the questions asked by the applications for the two jobs are different, so I need to answer those questions differently. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["question_id", 198], ["text", "Yes, you can apply for any City job that is open and apply for as many of them as you like at the same time. But for each position, you have to fill out separate applications since each job posting usually requires information unique to that job – it might be special questions, or you’ll have to attach a copy of a certificate, that sort of thing."], ["updated_at", "2014-09-02 13:43:33.876709"]]
  [1m[35m (1.0ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.884496"], ["in_language", "en"], ["text", "Where can I get help with my taxes?"], ["updated_at", "2014-09-02 13:43:33.884496"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.890954"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 199], ["text", "You can find help with your taxes--for free!--at the following locations: * [American Association Retired Persons (AARP) Foundation Tax-Aide][1] * United Way of Bay Area [SparkPoint Centers][2] * Oakland Public Library [Tax Assistance Program][3] Closer to tax time, visit these organizations: * [The Unity Council][4] * [The East Bay Asian Development Corporation][5] The Internal Revenue Service (IRS) also offers [free tax preparation help][6] on their website. [1]: http://www.aarp.org/money/taxes/aarp_taxaide/ [2]: http://www.uwba.org/cut-poverty/sparkpoint/ [3]: http://www.oaklandlibrary.org/services/tax-assistance-program [4]: http://www.unitycouncil.org/ [5]: http://www.ebaldc.org/ [6]: http://www.irs.gov/Individuals/Free-Tax-Return-Preparation-for-You-by-Volunteers"], ["updated_at", "2014-09-02 13:43:33.890954"]]
  [1m[35m (0.8ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.898205"], ["in_language", "en"], ["text", "How do I get a permit for constructing a building?"], ["updated_at", "2014-09-02 13:43:33.898205"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.905310"], ["in_language", "en"], ["need_to_know", "The type of permit you need to obtain is dependent on the specifics of your project. Before you go, review the [checklist of documents](http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/index.htm) to bring with you in order to apply for your permit. "], ["question_id", 200], ["text", "**Apply in person at the City of Oakland's Building Services Department Permit Center on the second floor of 250 Frank H. Ogawa Plaza, Oakland.** "], ["updated_at", "2014-09-02 13:43:33.905310"]]
  [1m[35m (1.6ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.913436"], ["in_language", "en"], ["text", "When/what are festivals in Oakland?"], ["updated_at", "2014-09-02 13:43:33.913436"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.922166"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 201], ["text", "You can find a list of upcoming and ongoing festivals as well as a general list of fun events taking place in Oakland on the [Visit Oakland Calendar of Festivals page][1]. [1]: http://visitoakland.org/visiting_calendar_of_events.cfm?all=1"], ["updated_at", "2014-09-02 13:43:33.922166"]]
  [1m[35m (1.1ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.930699"], ["in_language", "en"], ["text", "What are the most dangerous areas in Oakland?"], ["updated_at", "2014-09-02 13:43:33.930699"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.937363"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 202], ["text", "The best way to find out what areas of Oakland have the most reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-09-02 13:43:33.937363"]]
  [1m[35m (1.2ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.944685"], ["in_language", "en"], ["text", "What is the best place to live, work, and play?"], ["updated_at", "2014-09-02 13:43:33.944685"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.951495"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 203], ["text", "...the City of Oakland!"], ["updated_at", "2014-09-02 13:43:33.951495"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-02 13:43:33.958684"], ["in_language", "en"], ["text", "I am an Oakland landlord. How can I evict a tenant?"], ["updated_at", "2014-09-02 13:43:33.958684"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Connection refused - connect(2) for "localhost" port 9200
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (2.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-02 13:43:33.966077"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 204], ["text", "**Verify that you are legally allowed to evict the tenant.** ◦ A tenant may be evicted for failing to pay rent. ◦  A tenant may be evicted for violating the lease. ◦  A tenant may be evicted for using the rental unit for an unlawful purpose. ◦  A tenant may be evicted for manufacturing or dealing illegal drugs in the rental unit. ◦  A tenant may be evicted for the unlawful use of a weapon or ammunition. ◦ A tenant may be evicted for materially damaging the rental unit. ◦  A tenant may be evicted for causing a significant nuisance to other tenants. **Serve the tenant with a 3-Day Notice to Pay Rent or Quit form.** ◦ Take the completed form to the tenant and hand it to him or her. If he or she refuses to take it, leave it on the ground near the tenant. ◦ If you are unable to serve it directly to the tenant, leave it with someone who is at least 18 years old at the rental unit or with an adult at the tenant's place of work. A copy must also be mailed to the tenant in this situation. ◦ If unable to serve the form directly to another person, post it on the tenant's door and mail a copy of the form to him or her. **Allow the tenant 3 business days (Monday to Friday) after delivering the notice to remedy the situation.** ◦  The 3-day period begins the day after the notice is served. **File an Unlawful Detainer Complaint, a Civil Case Cover Sheet, and a Pre-judgment Right of Possession form.** ◦ The Unlawful Detainer Complaint can be found at the following URL: http://www.courts.ca.gov/documents/ud100.pdf. This is an eviction notice. ◦  The Civil Case Cover Sheet can be found at the following URL: http://www.courts.ca.gov/documents/cm010.pdf ◦  Submit the paperwork to the courthouse in the county that the property is in. ◦ The County Clerk will give you a Summons and a stamped copy of the Unlawful Detainer Complaint. Make sure you also receive the Pre-judgment Right of Possession form. In some cases, you must provide multiple copies for the Clerk to stamp. **Serve the tenant with the Unlawful Detainer Complaint, the Summons, and the Pre-judgment Right of Possession form.** ◦  Serve these in the same way as you served the 3-day Notice to Pay Rent or Quit form. ◦  The tenant will have 5 days to file a response with you and the court. Post and mail the tenant has 10 days to respond, after the 10 days start counting the 5 days, if no response file for judgement. **Complete the court process.** ◦ If the tenant does not answer within 5 days after being served, request a default judgment from the court. This can be done by submitting a following form to the court. ◦  If a default judgment is issued, you will be given a Writ of Possession. Take this form to the local Sheriff and have him or her evict the tenant. ◦  If the tenant decides to challenge the eviction, you or the tenant may request a trial in front of a judge or jury. The trial will occur within 21 days of the request. ◦ If you win the case, you will be awarded possession of the property and possibly monetary awards. ◦ If you win the case, the court will order the Sheriff to post a notice giving the tenant 5 days to vacate the rental unit. If the tenant does not leave, the Sheriff will forcibly remove him or her. ◦ If the tenant wins the case, he or she will be permitted to remain in the rental unit. You may have to pay his or her court fees and he or she may be ordered to pay any past-due rent. **Store the tenant's items for 2 weeks if he or she is evicted.** ◦ If the tenant leaves items behind, you must store them for 2 weeks and attempt to arrange for the tenant to retrieve them. ◦  If anything remains after this period, you may keep, sell, or dispose of the items. More info: http://www.dca.ca.gov/publications/landlordbook/index.shtml http://www2.oaklandnet.com/oakca/groups/ceda/documents/policy/dowd008116.pdf [1]: http://www.courts.ca.gov/documents/ud100.pdf"], ["updated_at", "2014-09-02 13:43:33.966077"]]
  [1m[35m (0.9ms)[0m  COMMIT
Connection refused - connect(2) for "localhost" port 9200


Started GET "/" for 10.0.2.2 at 2014-09-02 19:36:27 +0000
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (22.2ms)
Completed 200 OK in 268ms (Views: 267.0ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-02 19:36:34 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 24ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-02 19:36:34 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (145.7ms)
Completed 200 OK in 1458ms (Views: 1456.5ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:26:29 +0000
  [1m[36mActiveRecord::SchemaMigration Load (2.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (34.1ms)
Completed 200 OK in 1583ms (Views: 1562.3ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-03 15:26:39 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 28ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:26:40 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (127.4ms)
Completed 200 OK in 1780ms (Views: 1778.9ms | ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:27:26 +0000
Processing by HomeController#index as HTML
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (29.8ms)
Completed 200 OK in 722ms (Views: 720.7ms | ActiveRecord: 0.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-03 15:27:32 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 29ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:27:33 +0000
Processing by HomeController#index as */*
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (177.9ms)
Completed 200 OK in 903ms (Views: 901.5ms | ActiveRecord: 0.0ms)
  [1m[36mQuestion Load (6.4ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1000[0m
  [1m[35mAnswer Load (8.5ms)[0m  SELECT  "answers".* FROM "answers"   ORDER BY "answers"."id" ASC LIMIT 1000
  [1m[36mAnswer Load (2.9ms)[0m  [1mSELECT "answers".* FROM "answers"[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 69]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 70]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 71]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 72]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 73]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 74]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 75]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (1.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 76]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 77]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 78]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 79]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 80]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 81]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 82]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 83]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 84]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 85]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 86]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.4ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 87]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 88]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 89]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 90]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 91]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 92]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 93]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 94]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 95]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 96]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (3.1ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 97]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 98]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 99]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 100]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 101]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 102]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 103]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 104]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 105]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 106]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 107]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 108]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 109]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 110]]
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 111]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 112]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 113]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 114]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 115]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 116]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 117]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 118]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 119]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 120]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 121]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (2.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 122]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 123]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 124]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 125]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 126]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 141]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 127]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 128]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 129]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 130]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 131]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 132]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 133]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 134]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 135]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 136]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 137]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 138]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 139]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 140]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 142]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 143]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 144]]
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 145]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 146]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 147]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 148]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 149]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 150]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 151]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 152]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 153]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 154]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 155]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 156]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 157]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 158]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 159]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 160]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 161]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 162]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 163]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 164]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 165]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 166]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 167]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 168]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 169]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 170]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 171]]
  [1m[35m (1.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 172]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 173]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 174]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 175]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 176]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 177]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 178]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 179]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 180]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 181]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 182]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 183]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 184]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 185]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 186]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 187]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 188]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 189]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 190]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 191]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 192]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 193]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 194]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 195]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 196]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 197]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 198]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 199]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 200]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 201]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 202]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "answers" WHERE "answers"."id" = $1[0m  [["id", 203]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "answers" WHERE "answers"."id" = $1  [["id", 204]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35mQuestion Load (1.6ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 69]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 70]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 71]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 72]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 73]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 74]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 75]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 76]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 77]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 78]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 79]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 80]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 81]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 82]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 83]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 84]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 85]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 86]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 87]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 88]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 89]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 90]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 91]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 92]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 93]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 94]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 95]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 96]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 97]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 98]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 99]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 100]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (1.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 101]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 102]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 103]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 104]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 105]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 106]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 107]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 108]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 109]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 110]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 111]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 112]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 113]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 114]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 115]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 116]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 117]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 118]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 119]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 120]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 121]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 122]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 123]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 124]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 125]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 126]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 127]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 128]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 129]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 130]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 131]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 132]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 133]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 134]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 135]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 136]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 137]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 138]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 139]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 140]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 141]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 142]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 143]]
  [1m[36m (3.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 144]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 145]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 146]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 147]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 148]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 149]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 150]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 151]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 152]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 153]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 154]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 155]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 156]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 157]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 158]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 159]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 160]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 161]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 162]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 163]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 164]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 165]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 166]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 167]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 168]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 169]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 170]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 171]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 172]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 173]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 174]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 175]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 176]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 177]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 178]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 179]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 180]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 181]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 182]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 183]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 184]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 185]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 186]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 187]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 188]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 189]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 190]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 191]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 192]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 193]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 194]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 195]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 196]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 197]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 198]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 199]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 200]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 201]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 202]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = $1  [["id", 203]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 204]]
  [1m[35m (1.2ms)[0m  COMMIT


Started GET "/" for 10.0.2.2 at 2014-09-03 15:45:55 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f247dc38360>):
  app/models/question.rb:2:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (22.7ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:45:56 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f247a618118>):
  app/models/question.rb:2:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.9ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:45:56 +0000


Started GET "/" for 10.0.2.2 at 2014-09-03 15:45:57 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f248028f950>):
  app/models/question.rb:2:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (29.6ms)

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f247f9334b0>):
  app/models/question.rb:2:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (26.1ms)
  [1m[36mActiveRecord::SchemaMigration Load (0.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.9ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.7ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"


Started GET "/" for 10.0.2.2 at 2014-09-03 15:47:27 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f247e3d2170>):
  app/models/question.rb:2:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.6ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.8ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:47:30 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f247ddcdfb8>):
  app/models/question.rb:2:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.3ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:50:06 +0000

NoMethodError (undefined method `acts_as_taggable_on' for #<Class:0x007f247d70d520>):
  app/models/question.rb:2:in `<class:Question>'
  app/models/question.rb:1:in `<top (required)>'
  app/admin/question.rb:1:in `<top (required)>'
  config/routes.rb:3:in `block in <top (required)>'
  config/routes.rb:1:in `<top (required)>'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.9ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:50:46 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (9.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (29.1ms)
Completed 200 OK in 1598ms (Views: 1536.7ms | ActiveRecord: 20.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-03 15:50:54 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:50:54 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (170.2ms)
Completed 200 OK in 795ms (Views: 789.9ms | ActiveRecord: 1.5ms)
  [1m[36mQuestion Load (1.2ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mAnswer Load (1.5ms)[0m  SELECT "answers".* FROM "answers"
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:11.632347"], ["in_language", "en"], ["text", "Can I revise my City job application?"], ["updated_at", "2014-09-03 15:52:11.632347"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 205], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 205 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:11.685867"], ["tag_id", 6], ["taggable_id", 205], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:11.762517"], ["in_language", "en"], ["need_to_know", "If you're in the process of applying, you can save your application as you go and ahead any edit part you please. You can even use past applications for new job openings so you don't need to re-enter every single past employment. But once you've hit submit it's \"bon voyage.\""], ["question_id", 205], ["text", "Once you've hit that submit button, your application is locked in. However, you can save and edit applications for jobs that you are currently applying to as well as revise old applications and use them to apply to new jobs. "], ["updated_at", "2014-09-03 15:52:11.762517"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:11.778294"], ["in_language", "en"], ["text", "How do I get a motorcycle license?"], ["updated_at", "2014-09-03 15:52:11.778294"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 206], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 206 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:11.788580"], ["tag_id", 2], ["taggable_id", 206], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:11.804498"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 206], ["text", "Visit the [Motorcycle License Checklist][1] page at the California Department of Motor Vehicles. [1]: http://www.dmv.ca.gov/dl/checklists/mc.htm"], ["updated_at", "2014-09-03 15:52:11.804498"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:11.817662"], ["in_language", "en"], ["text", "Can a person clear their criminal record? How?"], ["updated_at", "2014-09-03 15:52:11.817662"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 207], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 207 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:11.827586"], ["tag_id", 3], ["taggable_id", 207], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:11.843185"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 207], ["text", "You can expunge -- or clear convictions from -- your criminal record by petitioning the state in which you were convicted, or the federal government. If you were convicted of crime in the State of California, instructions for the process of filing a Petition for Dismissal are [here][1] and [here][2]. [1]: http://www.courts.ca.gov/1070.htm [2]: http://www.saccourt.ca.gov/criminal/docs/1203-4-dismissal-process.pdf"], ["updated_at", "2014-09-03 15:52:11.843185"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:11.858379"], ["in_language", "en"], ["text", "Can I submit my resume for any future City job openings?"], ["updated_at", "2014-09-03 15:52:11.858379"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 208], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 208 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:11.867897"], ["tag_id", 5], ["taggable_id", 208], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:11.883158"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 208], ["text", "You can file a [Job Interest Card][1] for a specific department within the City of Oakland. After you've filed one you'll get an email when a job opens in that department so you can apply. You cannot file one for a specific job--only by department. Job interest cards last 12 months and then you'll need to re-file them at the above link. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm?action=openjobrequest"], ["updated_at", "2014-09-03 15:52:11.883158"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:11.897879"], ["in_language", "en"], ["text", "Who do I contact if I found a dog?"], ["updated_at", "2014-09-03 15:52:11.897879"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 209], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 209 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:11.907420"], ["tag_id", 3], ["taggable_id", 209], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:11.922268"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 209], ["text", "The city of Oakland's Animal Services is part of the Oakland Police Department. If you find a dog that you can not keep until you find its owner, call the Oakland Police Department non-emergency number: (510)-777-3333. Open 24 hours per day and 7 days per week. "], ["updated_at", "2014-09-03 15:52:11.922268"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:11.937430"], ["in_language", "en"], ["text", "Who do I need to inform if I change my address?"], ["updated_at", "2014-09-03 15:52:11.937430"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 210], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 210 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:11.952077"], ["tag_id", 6], ["taggable_id", 210], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:11.966911"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 210], ["text", "The City of Oakland does not need to be informed if you change your address, but you may need to contact other government entities if: 1) You've moved and need to change your mailing address. In this case, contact the US Postal Service [here](https://moversguide.usps.com/icoa/home/icoa-main-flow.do?execution=e1s1&_flowId=icoa-main-flow&referral=MG80). 2) You need to change the address on your drivers license. In this case, contact the CA DMV [here](http://www.dmv.ca.gov/faq/genfaq.htm#CHANGEADDRESS). 3) You need to change your voter registration. In this case, find information about how to register online at the CA Secretary of State [here](https://rtv.sos.ca.gov/elections/register-to-vote/). (Note: You need to go through the whole re-registration process even if you are already registered and simply need to change your address. There is a spot to indicate that you are already registered at another address)."], ["updated_at", "2014-09-03 15:52:11.966911"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:11.980736"], ["in_language", "en"], ["text", "Where are the public swimming pools in Oakland?"], ["updated_at", "2014-09-03 15:52:11.980736"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 211], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (3.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 211 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:11.993490"], ["tag_id", 6], ["taggable_id", 211], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.008242"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 211], ["text", "You can find six public pools in Oakland. - Defremery Pool - 1269 18th Street (510) 238-2205 - East Oakland Sports Center - 9161 Edes Avenue (510) 615-5838 - Fremont Pool - 4550 Foothill Blvd (510) 535-5614 - Lions Pool - 3860 Hanly Road (510) 482-7852 - Live Oak Pool - 1055 MacArthur Blvd (510) 238-2292 - Temescal Pool - 371 45th Street (510) 597-5013 "], ["updated_at", "2014-09-03 15:52:12.008242"]]
  [1m[35m (2.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.023663"], ["in_language", "en"], ["text", "How do I get an Oakland ID card?"], ["updated_at", "2014-09-03 15:52:12.023663"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 212], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 212 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.038841"], ["tag_id", 4], ["taggable_id", 212], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (2.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.068597"], ["in_language", "en"], ["need_to_know", "<p>Before your visit, you can {{must??}} make a 30-minute appointment <a href=\"http://..com/locations.html\" target=\"blank\">online or by phone</a>. </p> <p>Oakland's city ID card is identification accepted and respected as a valid residency card by Oakland Police Department, BART Police, Alameda County Sheriffs and other local authorities {{what about city/state/federal service agencies?}}.</p> <p><b>Accepted proof of residency</b> must show your <b>name</b> (or your spouse's, if you bring a certified copy of your marriage certificate {{where do you get this?? what does it cost?? what about civil unions/domestic partnerships??}} and <b>Oakland address</b>, and be <b>dated within the last 30 days</b>:</p> <ol> <li>Utility or services bill</li> <li>Local property tax statement</li> <li>Mortgage payment {{that doesn't make sense, shouldn't it be a mortgage interest payment invoice?}}</li> <li>Bank statement</li> <li>Pay stub</li> <li>Jury summons or court order</li> <li>Federal or state income tax or refund statement</li> <li>Insurance bill</li> <li>Proof of a minor currently enrolled in a local school</li> <li>Written verification by an Oakland-funded {{how are people supposed to know what's Oakland-funded versus county- or state-funded??}} homeless shelter, hospital, health clinic or social services agency of at least 15 days of residency</li> </ol> <p><b>Accepted proof of identity</b>:</br> <ol> <li>US Permanent Resident Card (\"Green Card\")</li> <li>Current US Driver License</li> <li>Current US State Issued ID</li> <li>Current US Military Service ID</li> <li>Mexican Matricula Consular Identification Card</li> <li>Foreign Government Issued National ID Card</li> <li>Foreign Passport</li> <li>Foreign Driver License</li> <li>Foreign Military Service ID</li> <li>Consular Identification Card</li> </ol> </p> <p>If you're 18 and over and provide one of the first six documents above, you can also apply to activate your city ID for use as a pre-paid debit card. Be aware that pre-paid debit card services carry both <a href=\"http://www.oaklandcityid.com/fees.html\" target=\"blank\">monthly and transactional fees</a> that the vendor estimates range from a low end of $15 to a high end of over $27 per month.</p>"], ["question_id", 212], ["text", "<p>You can apply for a city ID card in person at the <a href=\"http://www.oaklandcityid.com/locations.html\" target=\"blank\">City Center or Fruitvale office</a> of <a href=\"http://www.sfglobalsourcing.com/specialties\" target=\"blank\">SF Global LLC</a>, the private company the city has contracted with to provide this service. Oakland's city ID card is available for purchase by Oakland residents 18 years and up {{?? website implies the card is available for at least some minors because it states that the optional financial services are available only to applicants 18 or older}} with proof of residency and identity.</p>"], ["updated_at", "2014-09-03 15:52:12.068597"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.086116"], ["in_language", "en"], ["text", "What can I do when one or more neighbors start to erect large, all enclosing fences? "], ["updated_at", "2014-09-03 15:52:12.086116"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 213], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 213 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.098021"], ["tag_id", 7], ["taggable_id", 213], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.113287"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 213], ["text", "Installing of an over-sized fence requires a permit from building services. For reasons of fire safety and for neighborhood appearance, fences in front yards are limited to a height of three and a half feet, which is the same or six inches higher than fences allowed in many nearby cities in the Bay Area. Fencing in the back and along the sides of a house can be much taller. Visit the Planning and Building Department's [Permit information page][1] for more information. Although it is best to solve neighborhood issues in local groups and neighborhood associations, complaints can be sent to building services and these may result in fines for alternations without permits or variances. To file a Code Enforcement complaint, call (510) 238-3381 or visit the [City Code Enforcement][2] page. [1]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/ [2]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/CityCodeEnforcement/index.htm "], ["updated_at", "2014-09-03 15:52:12.113287"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.127722"], ["in_language", "en"], ["text", "Can I plant a tree in a park?"], ["updated_at", "2014-09-03 15:52:12.127722"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 214], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 214 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.137196"], ["tag_id", 4], ["taggable_id", 214], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.148767"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 214], ["text", "You cannot plant a tree in a public park. "], ["updated_at", "2014-09-03 15:52:12.148767"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.163544"], ["in_language", "en"], ["text", "How can I help the homeless?"], ["updated_at", "2014-09-03 15:52:12.163544"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 215], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 215 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.175034"], ["tag_id", 6], ["taggable_id", 215], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.189190"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 215], ["text", "There are are a number of ways that Oaklanders can help the homeless. You can be involved in city policy, volunteer, make donations, and become an advocate. Throughout the year, the City partners with local organizations for a variety of events. Oakland’s Permanent Access to Housing (PATH) Strategy provides a roadmap for ending homelessness in the City over a period of the next fifteen years. "], ["updated_at", "2014-09-03 15:52:12.189190"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.203460"], ["in_language", "en"], ["text", "How Many People Live In Oakland?"], ["updated_at", "2014-09-03 15:52:12.203460"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 216], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 216 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.217370"], ["tag_id", 2], ["taggable_id", 216], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.232040"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 216], ["text", "The 2010 Census reported Oakland's population as 390,724. The California Department of Finance has estimated Oakland's population on January 1, 2013, as 399,326."], ["updated_at", "2014-09-03 15:52:12.232040"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.246588"], ["in_language", "en"], ["text", "What Council District am I in?"], ["updated_at", "2014-09-03 15:52:12.246588"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 217], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 217 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.256507"], ["tag_id", 4], ["taggable_id", 217], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.271650"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 217], ["text", "Go to [http://mapgis.oaklandnet.com/councildistricts/][1] and enter your address. The map shows how the city is divided into 7 council districts - you can click into any district to see the Councilmember, or you can enter your address in the locator field to see the result. The Councilmember contact information is displayed. [1]: http://mapgis.oaklandnet.com/councildistricts/"], ["updated_at", "2014-09-03 15:52:12.271650"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.284475"], ["in_language", "en"], ["text", "Where can I view a live webcast of City Council Meetings?"], ["updated_at", "2014-09-03 15:52:12.284475"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 218], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 218 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.298065"], ["tag_id", 6], ["taggable_id", 218], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.315053"], ["in_language", "en"], ["need_to_know", "The City of Oakland website can be found at http://www2.oaklandnet.com/"], ["question_id", 218], ["text", " [Oaklandnet.com][1] features [live (real-time streaming) as well as archived video.][2] Streaming video is available in the following formats. View the system requirements below to select the one that is best for you. (Live) [Microsoft Silverlight Users][3] (for PC and Macintosh) (Live) [Realplayer Users][4] Archived Videos and Agendas of the Oakland City Council: [Click here to view agendas, minutes and videos from past Council meetings.][5] [1]: http://www.Oaklandnet.com [2]: http://www2.oaklandnet.com/Government/o/CityCouncil/s/VideoArchive/index.htm [3]: http://oakland.granicus.com/MediaPlayer.php?publish_id=2 [4]: http://helixvideosvr.oaklandnet.com/ramgen/broadcast/encoderstream.rm [5]: http://oakland.legistar.com/calendar.aspx"], ["updated_at", "2014-09-03 15:52:12.315053"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.333817"], ["in_language", "en"], ["text", "How do I report drug dealing?"], ["updated_at", "2014-09-03 15:52:12.333817"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 219], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 219 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.344400"], ["tag_id", 6], ["taggable_id", 219], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.359479"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 219], ["text", "If there is drug dealing in progress you can report it to the Oakland Police Departments non-emergency number -- **510-777-3333**. Make sure to get the incident number. You can also call the Drug Hotline -- **510-238-DRUG/ 238-3784** drug dealing tip-line – you can leave a recorded message that police use for follow-up and to note chronic drug dealing hot spots. Give as much information as possible including gender, race, age, height, weight, clothing, possible location of drugs and associated vehicles."], ["updated_at", "2014-09-03 15:52:12.359479"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.372222"], ["in_language", "en"], ["text", "Do I need a permit to throw a party?"], ["updated_at", "2014-09-03 15:52:12.372222"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 220], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 220 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.383695"], ["tag_id", 2], ["taggable_id", 220], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.416238"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 220], ["text", "**Times when you DON'T need an event permit** If you are having a party **on you own property** (whether it's inside or outside, whether you rent or own) you don't need a permit to play amplified music or serve alcohol. ---------- **Times when you WILL need an event permit** There are times when you will need a **special permit** to hold an event. Conditions that require a special event permit include: - an event that is open to the public with 50 or more people will be in attendance - events that require street closures (e.g. a block party) - a party where people will be drinking alcohol outside of private property - a party with amplified sound that can be heard beyond your own property ---------- **How to get the permits you need** If you think your party meets the qualifications above then you will need **at least one permit from the City, maybe more.** Almost **all** events require a permit from the Special Activities unit of the City Administrator's Office. In most (not all) cases, you are going to need to prove that you have liability insurance for your proposed event. You can apply for a permit by contacting either of the following staff people: - Nancy Marcus - 510-238-3294 - nmarcus@oaklandnet.com - Jasmine Chan - 510-238-6914 - jchan@oaklandnet.com If your party is going to require a **street closure** then you must you must file an application with the Special Event Unit of the Oakland Police Department. Be sure to file the application with OPD **at least 30 days prior to your event**. To hold a party in a public space (e.g. a City park) you will need to request a reservation with the Office of Parks and Recreation by phone at 510-238-3187 or by email at oprscheduling@oaklandnet.com. "], ["updated_at", "2014-09-03 15:52:12.416238"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.441989"], ["in_language", "en"], ["text", "Who do I contact to get a space at a Farmer's Market?"], ["updated_at", "2014-09-03 15:52:12.441989"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 221], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 221 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.451872"], ["tag_id", 2], ["taggable_id", 221], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.464314"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 221], ["text", "There are different organizations that run the various farmer's markets throughout the city. You can find the contact information for specific farmer's markets through the California Certified Farmer's Market website. [http://www.cafarmersmarkets.com/index.cfm][1] [1]: http://www.cafarmersmarkets.com/index.cfm"], ["updated_at", "2014-09-03 15:52:12.464314"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.475915"], ["in_language", "en"], ["text", "Where is City Hall located?"], ["updated_at", "2014-09-03 15:52:12.475915"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 222], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 222 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.486561"], ["tag_id", 5], ["taggable_id", 222], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.500906"], ["in_language", "en"], ["need_to_know", "Oakland City Hall is conveniently located right off the BART line at the 12th Street/City Center station. For more information about schedules and for a map of the system, visit BART at [www.bart.gov][1] or call (510) 464-7133 (TDD#: (510) 839-2218). City Hall is also accessible via several different bus lines run by AC Transit. For more information about schedules and a system map, visit AC Transit at [www.actransit.org][2] or call (510) 891-4706 (TDD#: (510) 428-2266). Bus lines that serve City Hall include: 1, 1R, 11, 12, 18, 26, 72, 72R, 72M, 58L, 51A and the [free Broadway Shuttle][3]. [1]: http://www.bart.gov [2]: http://www.actransit.dst.cs.us [3]: http://www.meetdowntownoak.com/shuttle.php"], ["question_id", 222], ["text", "**Oakland City Hall**<br> 1 Frank H. Ogawa Plaza<br> Oakland, CA 94612 [![map of oakland city hall][1]](http://mapq.st/146TJoF)<br> Frank H. Ogawa plaza is located on 14th street, between Broadway and Clay. [1]: http://i.imgur.com/DKkMn9M.png "], ["updated_at", "2014-09-03 15:52:12.500906"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.513542"], ["in_language", "en"], ["text", "How can I report students who are skipping school?"], ["updated_at", "2014-09-03 15:52:12.513542"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 223], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 223 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.522815"], ["tag_id", 7], ["taggable_id", 223], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.536780"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 223], ["text", "Truancy Reporting: To report and get help for youth not in school, phone the following. OUSD Police Non-Emergency Line: **510-874-7777**. Be sure to describe youth, their clothing, their location, their activity (any drugs or alcohol use) when calling in. For questions to OUSD police, email: **police@ousd.k12.ca.us** "], ["updated_at", "2014-09-03 15:52:12.536780"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.548689"], ["in_language", "en"], ["text", "How do I get a replacement birth certificate?"], ["updated_at", "2014-09-03 15:52:12.548689"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 224], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 224 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.558277"], ["tag_id", 5], ["taggable_id", 224], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.571869"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 224], ["text", "You have to request a replacement birth certificate from the county where you were born. If you were born in Alameda County, you can find directions for ordering replacement birth certificates [here][1]. [1]: http://www.acgov.org/auditor/clerk/birth2b.htm"], ["updated_at", "2014-09-03 15:52:12.571869"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.591030"], ["in_language", "en"], ["text", "How do I contact my Councilmember?"], ["updated_at", "2014-09-03 15:52:12.591030"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 225], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 225 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.603209"], ["tag_id", 2], ["taggable_id", 225], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.616223"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 225], ["text", "If you know who your councilmember is, you can go to: http://www2.oaklandnet.com/Government/o/ElectedOfficials/index.htm and click on the link for your member. This will take you to a website for that council member and information on who to contact their office , along with support staff If you don't know your representative, you can go to: http://mapgis.oaklandnet.com/councildistricts/ and enter your address for find the link for your representative."], ["updated_at", "2014-09-03 15:52:12.616223"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.628912"], ["in_language", "en"], ["text", "How do I rent a facility?"], ["updated_at", "2014-09-03 15:52:12.628912"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 226], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 226 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.639037"], ["tag_id", 7], ["taggable_id", 226], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.652316"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 226], ["text", "Please call Central Reservations at (510) 238-3187 or review our [Rental Facilities page][1] for additional information. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-09-03 15:52:12.652316"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.664828"], ["in_language", "en"], ["text", "How do I start residential garbage and recycling service in Oakland?"], ["updated_at", "2014-09-03 15:52:12.664828"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 227], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 227 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.675042"], ["tag_id", 6], ["taggable_id", 227], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.688484"], ["in_language", "en"], ["need_to_know", "To establish residential garbage services and green waste pickup in Oakland: - **If you own your home:** contact Waste Management of Alameda County at (510) 613-8710 to start weekly garbage and yard trimmings/food scraps collection service. - **If you are renting:** contact your landlord or property manager to start weekly garbage and yard trimmings/food scraps collection service. To start weekly recycling collection service for both owners and renters, contact your recycling company: - **North and West Oakland:** Recycling service is provided by California Waste Solutions. Call (510) 836-6200 to subscribe for service or to request a cart. - **East Oakland:** Recycling service is provided by Waste Management of Alameda County. Call (510) 613-8710 to subscribe for service or to request a cart."], ["question_id", 227], ["text", ""], ["updated_at", "2014-09-03 15:52:12.688484"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.699684"], ["in_language", "en"], ["text", "Where can I receive language assistance?"], ["updated_at", "2014-09-03 15:52:12.699684"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 228], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 228 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.709458"], ["tag_id", 6], ["taggable_id", 228], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.721918"], ["in_language", "en"], ["need_to_know", "The Equal Access Office provides many kinds of language assistance to Oakland residents. [This webpage on the City's website][1] has a list of Language Assistance accommodations, that include: - How to know which city services have language assistance provided - A printable card you can carry with you to help city staff know that you need help in a language other than English **You can contact the Office of Equal Access for more information**<br> 150 Frank H. Ogawa Plaza, 2nd Floor, Oakland, CA 94612<br> phone: (510) 238-6813<br> [equalaccess@oaklandnet.com][2] [1]: http://www2.oaklandnet.com/Government/o/HumanResources/o/EqualAccess/DOWD000747 [2]: mailto:equalaccess@oaklandnet.com"], ["question_id", 228], ["text", "Language assistance can also include: - Interpreters - Assistance from a bilingual staff member (who has received appropriate training) - Multimedia resources (for example, a multilingual CD-Rom) - Multilingual information on web sites - Multilingual telephone information - Translated printed materials"], ["updated_at", "2014-09-03 15:52:12.721918"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.734690"], ["in_language", "en"], ["text", "How much is the City’s total budget?"], ["updated_at", "2014-09-03 15:52:12.734690"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 229], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 229 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.746315"], ["tag_id", 7], ["taggable_id", 229], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.759975"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 229], ["text", "The City’s annual budget across all funds for the current fiscal year (FY 2012-13) is about $1 billion."], ["updated_at", "2014-09-03 15:52:12.759975"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.771781"], ["in_language", "en"], ["text", "How do I report an abandoned vehicle?"], ["updated_at", "2014-09-03 15:52:12.771781"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 230], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 230 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.781622"], ["tag_id", 5], ["taggable_id", 230], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.795553"], ["in_language", "en"], ["need_to_know", "To report abandoned vehicles parked on a public street for over 72 hours, you can: - Call the Abandoned Auto Detail at (510) 777-8622. - Email the location, description, and license number of the vehicle, if known, to AbandonedAuto@oaklandnet.com. To report an abandoned vehicle parked on private property or a private street, you can: - Call the Vehicle Abatement Detail at (510) 777-8538. The Abandoned Auto Detail operates Monday through Friday, 6am to 4pm. "], ["question_id", 230], ["text", ""], ["updated_at", "2014-09-03 15:52:12.795553"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.807913"], ["in_language", "en"], ["text", "What is the City doing to help the homeless?"], ["updated_at", "2014-09-03 15:52:12.807913"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 231], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 231 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.820230"], ["tag_id", 5], ["taggable_id", 231], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.837380"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 231], ["text", "The City of Oakland's homeless programs provide housing and services to people in Oakland who are homeless, hungry, HIV/AIDS positive, or living on extremely low incomes. Community Housing Services recognizes the tremendous need for services specific to the homeless population. We partner with non-profit organizations to assist the homeless and near-homeless community with homeless prevention, rapid re-housing, permanent supportive housing, shelter, transitional/supportive housing and special needs housing. We also provide other homeless support services such as food, employment, physical and mental health, drug abuse and domestic violence programs."], ["updated_at", "2014-09-03 15:52:12.837380"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.850951"], ["in_language", "en"], ["text", "How do I request information from the Oakland Police Department"], ["updated_at", "2014-09-03 15:52:12.850951"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 232], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 232 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.861517"], ["tag_id", 5], ["taggable_id", 232], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.874452"], ["in_language", "en"], ["need_to_know", "Your request will either be fulfilled or denied- if it is denied you will be furnished with details of why the request is not being fulfilled. **Public records include:** - Complaints - Crime Reports - Department publications - Employment contracts - Offense reports - Recordings - List item - Traffic accident reports - Traffic enforcement incidents - Training records "], ["question_id", 232], ["text", "You may request certain types of information from the OPD using an Online, mail or in-person process. We highly suggest the online method. **Online** Step 1: Copy the Public Records [request form][1] to your computer Step 2: Save the PDF document to your computer and then complete the details on the PDF document itself. Step 3: Re-SAVE the PDF on your computer with the details completed. Step 4: Email it to [OPDPublicRecordsRequest@oaklandnet.com][2]. **In-Person** Step 1: Picking up a copy of the form in person at the [Police Administration Building][3] Patrol Desk on the first floor. Step 2: Bring the completed form to the OPD Records Division Kiosk on the first floor of the PAB. The Records Kiosk is open to the public from 8:00 am to 3:00 pm Monday through Friday and from 8:00 am until noon on Saturday and Sunday. **By Mail** Send your completed paper form to: Public Records Request Coordinator Oakland Police Department Records Section 455 7th Street, Room 306 Oakland, CA 94607 Contact Information for Assistance If you need additional assistance with a Public Records request, please contact the Public Records Request Coordinator: (510) 238-7143. [1]: http://www2.oaklandnet.com/Government/o/OPD/s/document/DOWD002885 [2]: http://mailto:OPDPublicRecordsRequest@oaklandnet.com?Subject=RecordsRequest [3]: http://maps.google.com/maps?hl=en&source=hp&ie=UTF8&q=oakland%20police%20department&fb=1&gl=us&hq=police%20department&hnear=oakland&ei=FJrfSrydOYWyswPn-IXoCA&ved=0CCsQnQIwBg&view=map&f=d&daddr=455%207th%20St,%20Oakland,%20CA&geocode=CU8p8gFnSfHUFcnGQAIdCD22-A"], ["updated_at", "2014-09-03 15:52:12.874452"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.887030"], ["in_language", "en"], ["text", "What charter schools are near me?"], ["updated_at", "2014-09-03 15:52:12.887030"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 233], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 233 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.897147"], ["tag_id", 3], ["taggable_id", 233], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.910616"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 233], ["text", "The [Center for Education Reform][1] can help you find charter schools near you. [This link][2] will show a list of all the charter schools in Oakland. You can also focus the list by choosing the grade level or locations you need. [1]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D= [2]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D="], ["updated_at", "2014-09-03 15:52:12.910616"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.923311"], ["in_language", "en"], ["text", "What are the parking holidays in Oakland?"], ["updated_at", "2014-09-03 15:52:12.923311"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 234], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 234 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.933548"], ["tag_id", 7], ["taggable_id", 234], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.946263"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 234], ["text", " The only days when there is no parking enforcement in Oakland are: - New Year's Day (January 1st) - Martin Luther King Jr. Day - President's Day - Memorial Day - Independence Day (July 4th) - Labor Day - Thanksgiving Day - Christmas Day (December 25th)"], ["updated_at", "2014-09-03 15:52:12.946263"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.957090"], ["in_language", "en"], ["text", "How do I get a marriage license?"], ["updated_at", "2014-09-03 15:52:12.957090"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 235], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 235 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:12.966728"], ["tag_id", 6], ["taggable_id", 235], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.4ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:12.979030"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 235], ["text", "Alameda County will issue you a marriage license is you and your future spouse request one in-person at the County Clerk-Recorder's Office. You can find more information [here][1]. [1]: http://www.acgov.org/auditor/clerk/ml.htm"], ["updated_at", "2014-09-03 15:52:12.979030"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:12.990226"], ["in_language", "en"], ["text", "Where can I find classes, programs and events that are happening at the library?"], ["updated_at", "2014-09-03 15:52:12.990226"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 236], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 236 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.001573"], ["tag_id", 6], ["taggable_id", 236], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.018878"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 236], ["text", "You can find a listing of library events on the library's website [here][1]. You can also pick up a monthly calendar of events at any [library branch][2]. [1]: http://oaklandlibrary.org/events [2]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-09-03 15:52:13.018878"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.040461"], ["in_language", "en"], ["text", "How do I get a disabled person parking permit?"], ["updated_at", "2014-09-03 15:52:13.040461"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 237], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 237 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.051859"], ["tag_id", 7], ["taggable_id", 237], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.065908"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 237], ["text", "Disabled parking permits need to be obtained from the California Department of Motor Vehicles. You can find more information and the application form [here](http://www.dmv.ca.gov/pubs/brochures/fast_facts/ffvr07.htm#)."], ["updated_at", "2014-09-03 15:52:13.065908"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.079027"], ["in_language", "en"], ["text", "Are there internships at the City?"], ["updated_at", "2014-09-03 15:52:13.079027"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 238], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 238 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.088553"], ["tag_id", 2], ["taggable_id", 238], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.103412"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 238], ["text", "You can find more information on City internships on the City of Oakland website. Different departments (including the [City Auditor][1], and the [Public Ethics Commission][2]) offer internships which can be found posted on the individual department's website. Go to the City of Oakland website, and search \"[internship][3]\". [1]: http://www.oaklandauditor.com/en/ruby/careers/40 [2]: http://www2.oaklandnet.com/Government/o/CityAdministration/d/PublicEthics/internships/index.htm [3]: http://www2.oaklandnet.com/Search/index.htm?cx=017801668647536616097:grdicmryz10&cof=FORID:10&ie=UTF-8&q=internship&sa=Search"], ["updated_at", "2014-09-03 15:52:13.103412"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.118160"], ["in_language", "en"], ["text", "How can I rent event space in Oakland?"], ["updated_at", "2014-09-03 15:52:13.118160"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 239], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 239 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.129336"], ["tag_id", 2], ["taggable_id", 239], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.143867"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 239], ["text", "Oakland Parks & Recreation offers rental facilities, listed here: [http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm][1] There are also private facilities available to rent in Oakland. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-09-03 15:52:13.143867"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.158461"], ["in_language", "en"], ["text", "Where can I get tax forms?"], ["updated_at", "2014-09-03 15:52:13.158461"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 240], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 240 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.167626"], ["tag_id", 3], ["taggable_id", 240], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.181409"], ["in_language", "en"], ["need_to_know", "If you would like to download tax forms online: Federal tax forms are available from the Internal Revenue Service. Many of the frequently used Federal tax forms can be found at http://www.irs.gov/uac/Forms,-Publications,-and-Other-Tax-Products. State tax forms are available from the State of California’s Franchise Tax Board. Many of the frequently used state tax forms can be found at https://www.ftb.ca.gov/forms/search/index.aspx."], ["question_id", 240], ["text", "You can find tax forms at the [Oakland Public Library][1] (like the 1040 EZ tax form). Some are in print form, and others can be printed by a library staff member (printing charges may apply). Before you go, it's helpful to bring the exact form number you need so the library staff member can find it with ease. If you don't have the form number, not to worry: a staff member is happy to help. To find an Oakland Public Library location near you, [look at the map][2]. [1]: http://www.oaklandlibrary.org/using-library/locations-hours [2]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5"], ["updated_at", "2014-09-03 15:52:13.181409"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.193729"], ["in_language", "en"], ["text", "What are the safest areas in Oakland?"], ["updated_at", "2014-09-03 15:52:13.193729"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 241], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 241 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.203843"], ["tag_id", 5], ["taggable_id", 241], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.224249"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 241], ["text", "The best way to find out what areas of Oakland have the fewest reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-09-03 15:52:13.224249"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.235893"], ["in_language", "en"], ["text", "Are there any sex offenders in my neighborhood?"], ["updated_at", "2014-09-03 15:52:13.235893"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 242], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 242 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.245842"], ["tag_id", 2], ["taggable_id", 242], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.260298"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 242], ["text", "You can search for your address on the [Meghan's Law Website][1] to find registered sex offenders that live nearby. Before you search the map, you have to click \"continue\" at the bottom of the first page, then click the check box and \"continue\" at the bottom of the second page. Then you will see a map of California and you can search for your address by clicking on the \"address\" box on the left side of the page. [1]: http://www.meganslaw.ca.gov/"], ["updated_at", "2014-09-03 15:52:13.260298"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.273841"], ["in_language", "en"], ["text", "What do I do if my car has been towed?"], ["updated_at", "2014-09-03 15:52:13.273841"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 243], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 243 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.283292"], ["tag_id", 6], ["taggable_id", 243], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.297609"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 243], ["text", "If you think your car has been towed, first check the A&B Towing site (http://www.abimpound.com/towed.html) to see if they know. You should also call the Police Department Records Division at (510) 238-3021 to confirm your car has been towed. If it has been towed, you can go to the Records Division, 3rd floor, Police Administration Building, 455 7th Street (at Broadway) to get a Release Form for your vehicle."], ["updated_at", "2014-09-03 15:52:13.297609"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.309166"], ["in_language", "en"], ["text", "Where is the closest public library?"], ["updated_at", "2014-09-03 15:52:13.309166"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 244], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 244 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.321795"], ["tag_id", 3], ["taggable_id", 244], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.335870"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 244], ["text", "To see a map of all of the Oakland Public Libraries, go [here][1]. You can click on each dot to see the address, phone number and hours. You can find a list of library locations on the Oakland Public Library Website [here][2]. If you are looking for a library close to where you are right now, no matter where you are, you can click [here][3]. [1]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5 [2]: http://oaklandlibrary.org/using-library/locations-hours [3]: https://maps.google.com/maps?ie=UTF-8&q=closest%20public%20library"], ["updated_at", "2014-09-03 15:52:13.335870"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.348743"], ["in_language", "en"], ["text", "Where are the recycling centers located?"], ["updated_at", "2014-09-03 15:52:13.348743"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 245], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 245 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.359136"], ["tag_id", 4], ["taggable_id", 245], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.372264"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 245], ["text", "Here's a [directory of recycling drop off centers in and around Oakland][1]. For more information about recycling in Oakland, visit [www.oaklandrecycles.com][2]. [1]: http://www2.oaklandnet.com/oakca/groups/pwa/documents/form/oak027311.pdf [2]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm"], ["updated_at", "2014-09-03 15:52:13.372264"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.389154"], ["in_language", "en"], ["text", "What are the current job openings at the City?"], ["updated_at", "2014-09-03 15:52:13.389154"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 246], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 246 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.401502"], ["tag_id", 7], ["taggable_id", 246], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.414269"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 246], ["text", "Check the [Human Resources page][1] for a list of open jobs. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["updated_at", "2014-09-03 15:52:13.414269"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.428971"], ["in_language", "en"], ["text", "What youth services and activities are available?"], ["updated_at", "2014-09-03 15:52:13.428971"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 247], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 247 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.447251"], ["tag_id", 5], ["taggable_id", 247], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.460976"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 247], ["text", "Several city departments offer services for youth. You can see the Parks and Recreation listings [here][1]. The Oakland Public Library has many services and listings of services for [kids][2] and [teens][3]. Measure Y youth programs are [here][4]. **Late Night Live** Provides safe places for youth and families late Friday and Saturday nights. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Summer Job Program** Program to employ low-income youth during the summer. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Mentoring Initiative** Program that finds caring adults to work with Foster youth, formerly incarcerated youth and chronically absent youth. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Summer Stars Program** An outdoor camping experience for middle school students from our toughest neighborhoods. Find dates for the next trip at the Summer Star's [website][5]. If you would like to sign up your group for a three day/two night camping trip, please contact us via email at oaklandpal@oaklandpal.org OR call 510-615-5758. **Oakland Police Activities League (PAL)** Program dedicated to offering programs and opportunities for kids to work with positive role models and learn about success and failure without guns and drugs. Offers basketball, track and field, overnight camping, and more. [Oakland PAL Website][6] **Oakland Police Explorers** Program designed for high school students who are at least 14.5 years old and want a chance to see what law enforcement is all about. If you are interested in the Explorer Program at the Oakland Police Department, contact the Explorer Advisors, Officer Mildred Oliver or Officer Jumaal Hill at: ph: 510-615-5758 fax: 510-615-5864 oaklandpal@oaklandpal.org **OK (Our Kids) Program** Program focused on reducing the high incarceration and homicide rates of African-American young men (12-18 years old) by providing needed services to youth, promoting economic self-reliance, and encouraging responsible citizenship. [Website][7] ph: 510-238-7998 okprogram@okprogramofoakland.com **GREAT Program** The Gang Resistance, Education and Training program is a structured, school-based program implemented in areas where gang activity either exists or are emerging. [Website][8] You can also find information about some of the [organizations with which we are partnering to give hope to Oakland's youth][10]. [1]: https://securerw.oaklandnet.com/registrationmain.sdi [2]: http://oaklandlibrary.org/kids [3]: http://oaklandlibrary.org/teens [4]: http://oaklandunite.org/youth/ [5]: http://oaklandpal.org/mayor_quan_summer_stars_camping_program [6]: http://oaklandpal.org/home [7]: http://www.okprogramofoakland.com/ [8]: http://www.great-online.org/ [9]: http://www.oaklandlibrary.org/teens/your-life/mind-body/mental-health-0 [10]: http://www2.oaklandnet.com/Government/o/Mayor/i/EducationLeadership/OAK025457"], ["updated_at", "2014-09-03 15:52:13.460976"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.476474"], ["in_language", "en"], ["text", "Where can I get free Wi-Fi?"], ["updated_at", "2014-09-03 15:52:13.476474"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 248], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 248 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.485026"], ["tag_id", 3], ["taggable_id", 248], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (1.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.497380"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 248], ["text", "You can use free Wi-Fi at all Oakland Public Library locations. You can see a list of libraries [here][1]. You can use free Wi-Fi inside City Hall at 1 Frank H. Ogawa Plaza, Oakland, CA 94612. [1]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-09-03 15:52:13.497380"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.510441"], ["in_language", "en"], ["text", "What can and can't I recycle?"], ["updated_at", "2014-09-03 15:52:13.510441"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 249], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 249 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.520903"], ["tag_id", 7], ["taggable_id", 249], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.533179"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 249], ["text", "You can find a list of what you can and cannot recycle for both residential and commercial services on the [Oakland Recycles website][1]. For recyclable items that are not listed on the Oakland Recycles website, please visit [www.stopwaste.org][2] and use the online Recycling Guide (towards the bottom right side of the Stop Waste web page. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm [2]: http://www.stopwaste.org"], ["updated_at", "2014-09-03 15:52:13.533179"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.546029"], ["in_language", "en"], ["text", "How can I see how my city councilperson voted on a particular issue?"], ["updated_at", "2014-09-03 15:52:13.546029"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 250], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 250 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.555334"], ["tag_id", 2], ["taggable_id", 250], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.569049"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 250], ["text", "Visit the City Clerk's Legistar search feature at [http://oakland.legistar.com/legislation.aspx][1]. Click on the record number for the legislation in the search results and then on Action Details. [1]: http://oakland.legistar.com/legislation.aspx"], ["updated_at", "2014-09-03 15:52:13.569049"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.580720"], ["in_language", "en"], ["text", "Where do I get a bus pass?"], ["updated_at", "2014-09-03 15:52:13.580720"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 251], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 251 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.589031"], ["tag_id", 5], ["taggable_id", 251], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.605776"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 251], ["text", "[AC Transit](http://actransit.com) makes bus passes available at many Oakland retail locations, including supermarkets, drug stores, senior centers and news stands. Search for your nearest retail location using your Zip code at [AC Transit's retail locations finder](http://www.actransit.org/rider-info/where-to-buy-a-pass/). Passes can be purchased by mail using the [AC Transit order form](http://www.actransit.org/wp-content/uploads/Ticket_-Order_Form-8.2011.pdf). All AC Transit vehicles accept payments using [Clipper Card](http://www.actransit.org/rider-info/why-clipper/), the Bay Area’s reloadable card for paying transit fares. A Clipper card keeps track of the value on it and automatically deducts the right fare, including transfers and discounts. You can load an AC Transit pass onto a Clipper card, a pass from another agency, or cash value."], ["updated_at", "2014-09-03 15:52:13.605776"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.619509"], ["in_language", "en"], ["text", "How do I register to vote?"], ["updated_at", "2014-09-03 15:52:13.619509"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 252], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 252 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.631389"], ["tag_id", 7], ["taggable_id", 252], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.643935"], ["in_language", "en"], ["need_to_know", "---------- *Have other questions about how to register to vote, or whether you need to? Go to the [Alameda County Registrar of Voters FAQ Page][1]* [1]: http://www.acgov.org/rov/registrationfaq.htm "], ["question_id", 252], ["text", " **If you just need to register or re-register to vote -- you can do it online!** **Go to the [California Secretary of State's online voter registration page][1].** [1]: http://registertovote.ca.gov/"], ["updated_at", "2014-09-03 15:52:13.643935"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.659401"], ["in_language", "en"], ["text", "Can I speak with a live person at the City for help with a question?"], ["updated_at", "2014-09-03 15:52:13.659401"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 253], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 253 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.673820"], ["tag_id", 4], ["taggable_id", 253], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.689013"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 253], ["text", "You can call the Oaklanders Assistance Center at (510) 444-CITY, which is (510) 444-2489. Or email your question to [oac@oaklandnet.com][1]. If you prefer, you may visit the center in-person. Office hours are typically 8:30 am to 5pm. [1]: http://mailto:oac@oaklandnet.com"], ["updated_at", "2014-09-03 15:52:13.689013"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.705041"], ["in_language", "en"], ["text", "How much does it cost to ride a bus in Oakland?"], ["updated_at", "2014-09-03 15:52:13.705041"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 254], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 254 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.720234"], ["tag_id", 2], ["taggable_id", 254], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.735380"], ["in_language", "en"], ["need_to_know", "You might also consider a convenient buss pass. [Click here to see the answer on where to purchase bus passes][1]. [1]: http://answers.oaklandnet.com/quick_answers/where-do-i-get-a-bus-pass"], ["question_id", 254], ["text", "You can find a full detailed listing of bus fares on the AC Transit site [here][1]. * Regular bus fare is $2.10. * Youth bus fare is $1.05 (ages 5-18) * Senior bus fare is $1.05 (ages 65+) [1]: http://www.actransit.org/rider-info/bus-fares/"], ["updated_at", "2014-09-03 15:52:13.735380"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.750946"], ["in_language", "en"], ["text", "Who do I contact if a tree is protruding on to my property?"], ["updated_at", "2014-09-03 15:52:13.750946"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 255], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 255 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.763979"], ["tag_id", 3], ["taggable_id", 255], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.778013"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 255], ["text", "If there is a tree protruding onto your property you will need to determine if the tree itself is on public or private property. If the tree is on: - **Private Property** - you will need to communicate with the owner and discuss a solution. If the resolution is tree removal, the owner will need to file a [removal permit][1]. - **Public Property** - Please call (510) 615-5566 or submit your request online by clicking here, use the SeeClickFix mobile or web app or email pwacallcenter@oaklandnet.com. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/o/TreeServices/OAK023048"], ["updated_at", "2014-09-03 15:52:13.778013"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.795788"], ["in_language", "en"], ["text", "Does the City have a calendar of fun events?"], ["updated_at", "2014-09-03 15:52:13.795788"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 256], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 256 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.804510"], ["tag_id", 2], ["taggable_id", 256], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.817432"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 256], ["text", "Visit Oakland, the official destination marketing organization for the City of Oakland, maintains an online event calendar at [www.visitoakland.org][1]. Submit your event information via email to [events@visitoakland.org][2]. [1]: http://www.visitoakland.org [2]: http://mailto:events@visitoakland.org"], ["updated_at", "2014-09-03 15:52:13.817432"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.829360"], ["in_language", "en"], ["text", "How do I get a passport?"], ["updated_at", "2014-09-03 15:52:13.829360"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 257], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 257 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.839549"], ["tag_id", 5], ["taggable_id", 257], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.853107"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 257], ["text", "To get a passport or to renew your existing passport, visit the U.S. State Department's [website][1] and fill out an application. Then bring your finished application, original birth certificate and check or money order to a local processing center. Visit the following website to find a nearby center. You may need to schedule an appointment. [http://iafdb.travel.state.gov/][2] [1]: http://travel.state.gov/passport/ [2]: http://iafdb.travel.state.gov/"], ["updated_at", "2014-09-03 15:52:13.853107"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.865475"], ["in_language", "en"], ["text", "How can I report an animal nuisance?"], ["updated_at", "2014-09-03 15:52:13.865475"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 258], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 258 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.876163"], ["tag_id", 3], ["taggable_id", 258], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.889184"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 258], ["text", "If it is an emergency (a vicious dog or an animal in distress), call (510) 777-3333. If it is not an emergency (barking dogs, obnoxious cats, crowing roosters), call (510) 535-5602. Please note that roosters are illegal in Oakland. "], ["updated_at", "2014-09-03 15:52:13.889184"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.901179"], ["in_language", "en"], ["text", "What is the closest park to my house?"], ["updated_at", "2014-09-03 15:52:13.901179"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 259], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 259 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.912076"], ["tag_id", 5], ["taggable_id", 259], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.924779"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 259], ["text", "You can see a list of all the parks and where they are on a map here[1] [1]: http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm"], ["updated_at", "2014-09-03 15:52:13.924779"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.936102"], ["in_language", "en"], ["text", "What are the closest hiking trails?"], ["updated_at", "2014-09-03 15:52:13.936102"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 260], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 260 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.944610"], ["tag_id", 7], ["taggable_id", 260], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.957412"], ["in_language", "en"], ["need_to_know", "There are many trails in the hills and various parks. The Parks and Recreation department lists the names of all of their <a href=\"http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm\">parks</a>, as well as various walking tours. You can search for all Bay Area trails near you on an interactive map. <a href=\"http://www.transitandtrails.org/find/trailheads\">Transit to Trails</a> shows many city and county parks, including those that can be reached by public transit. Yelp also lists trails, with reviews: <a href=\"http://www.yelp.com/search?find_desc=Walking+Trails&find_loc=Oakland%2C+CA\">Search Yelp for Walking Trails.</a> "], ["question_id", 260], ["text", ""], ["updated_at", "2014-09-03 15:52:13.957412"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:13.968756"], ["in_language", "en"], ["text", "What is the City's budget process?"], ["updated_at", "2014-09-03 15:52:13.968756"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 261], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 261 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:13.980416"], ["tag_id", 3], ["taggable_id", 261], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:13.992541"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 261], ["text", "The City of Oakland operates on a two-year budget cycle and is how City Council establishes its goals, program priorities and desired service levels for the upcoming fiscal period. The City Charter requires the City's budget be balanced -- expenditures must not exceed revenues. The Charter also requires that the budget must be adopted on or before June 30. Budget development and adoption occurs on odd numbered years and mid-cycle budget amendments occur on even numbered years. [Click here to visit the City's web page on the budget process.][1] [1]: http://ttp://www2.oaklandnet.com/Governmacnt/o/CityAdministration/d/BudgetOffice/DOWD005079."], ["updated_at", "2014-09-03 15:52:13.992541"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.003923"], ["in_language", "en"], ["text", "How do you request a bike rack In your neighborhood or commercial street?"], ["updated_at", "2014-09-03 15:52:14.003923"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 262], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 262 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.012536"], ["tag_id", 2], ["taggable_id", 262], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.025761"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 262], ["text", "You can request a rack on City owned property by filling out the request form. The form asks for information about the address, the business name and your relationship to the business (if available)"], ["updated_at", "2014-09-03 15:52:14.025761"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.037754"], ["in_language", "en"], ["text", "I am behind on my property taxes. Is there a City program that can help?"], ["updated_at", "2014-09-03 15:52:14.037754"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 263], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 263 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.048137"], ["tag_id", 3], ["taggable_id", 263], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.061720"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 263], ["text", "The City does not assist with the payment of property taxes. Questions about delinquent property taxes should be directed to the Alameda County Treasurer-Tax Collector’s Office at [www.acgov.org/treasurer/][1], or by calling 510.272.6800. The County does offer payment plans. With respect to City liens placed on property taxes, under very limited circumstances, payment plans with the City may be allowed and the lien(s) would be reversed. For more information, contact the Oakland Housing Assistance Center: - Phone: (510) 238-6182 - Email: housingassistance@oaklandnet.com - Address: 250 Frank Ogawa Plaza 6th Floor Oakland, CA 94612 - [http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm][2] [1]: http://www.acgov.org/treasurer/ [2]: http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm"], ["updated_at", "2014-09-03 15:52:14.061720"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.072806"], ["in_language", "en"], ["text", "How do you report a problem with your smartphone."], ["updated_at", "2014-09-03 15:52:14.072806"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 264], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 264 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.082374"], ["tag_id", 6], ["taggable_id", 264], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.094790"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 264], ["text", "When you are outside and see an issue that the City of Oakland is responsible, take out your smartphone, click a picture, and then report it. This problems gets tracked in the City's database. You get a link to share with your neighbors, while being informed when the City fixes the problem. First download the app - SeeClickFix. You will need to register with SeeClickFix to get an account. Then, you track your reports by going to the web site https://seeclickfix.com. Once you start reporting these issues, you are notified of nearby problems and can support your neighbors efforts to make your neighborhood better."], ["updated_at", "2014-09-03 15:52:14.094790"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.105772"], ["in_language", "en"], ["text", "How do I contact my Council Member?"], ["updated_at", "2014-09-03 15:52:14.105772"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 265], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (6.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 265 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.124155"], ["tag_id", 5], ["taggable_id", 265], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.137403"], ["in_language", "en"], ["need_to_know", "If you know your Council district number, the general phone number for each Councilmember is (510) 238-700[# of District]. For example, the phone number for the District 4 Office (Montclair-Laurel-Allendale) is (510) 238-7004. Oakland's At-Large Councilmember's Office phone is (510) 238-7008. The City's naming convention for emaill addresses is first-initial-last-name@oaklandnet.com, for example Councilmember Libby Schaaf's email is lschaaf@oaklandnet.com. If you want to know what Councilmembers serve on a particular Council Committee go [here][4]. If you want to email ALL Councilmembers at once, send to citycouncil@oaklandnet.com . Many Councilmembers have newsletters you can subscribe to and some hold public office hours for drop-in visits."], ["question_id", 265], ["text", "If you don't know who your Councilmember is, use this [locator tool][1] or call the Council Office Front Desk at (510) 238-7584. The [locator tool][2] also provides your Councilmember's email. Links to all Councilmember websites are [here][3]. [1]: http://mapgis.oaklandnet.com/councildistricts/ [2]: http://%20http://mapgis.oaklandnet.com/councildistricts/ [3]: http://www2.oaklandnet.com/Government/o/CityCouncil/index.htm [4]: http://www2.oaklandnet.com/oakca1/groups/cityclerk/documents/webcontent/oak040150.pdf"], ["updated_at", "2014-09-03 15:52:14.137403"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.149625"], ["in_language", "en"], ["text", "Can I apply for more than one City job at a time?"], ["updated_at", "2014-09-03 15:52:14.149625"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 266], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 266 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.158542"], ["tag_id", 4], ["taggable_id", 266], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.172332"], ["in_language", "en"], ["need_to_know", "Let's say you've applied to a job before at the [Employment Opportunities][1] page. High five. Your standard information is are all saved with your account in your online profile. Address, past work history, all the stock info is saved. You can use the stored information for your new job with a click of a button and update it as you need to. **However, most jobs have Supplemental Questions that you MUST answer.** These questions are specific and unique. For instance, if I apply for a Park Ranger job and a Park Supervisor job, my resume is going to look pretty much the same and I can use it for both. But the questions asked by the applications for the two jobs are different, so I need to answer those questions differently. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["question_id", 266], ["text", "Yes, you can apply for any City job that is open and apply for as many of them as you like at the same time. But for each position, you have to fill out separate applications since each job posting usually requires information unique to that job – it might be special questions, or you’ll have to attach a copy of a certificate, that sort of thing."], ["updated_at", "2014-09-03 15:52:14.172332"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.184929"], ["in_language", "en"], ["text", "Where can I get help with my taxes?"], ["updated_at", "2014-09-03 15:52:14.184929"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 267], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 267 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.195684"], ["tag_id", 2], ["taggable_id", 267], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.207782"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 267], ["text", "You can find help with your taxes--for free!--at the following locations: * [American Association Retired Persons (AARP) Foundation Tax-Aide][1] * United Way of Bay Area [SparkPoint Centers][2] * Oakland Public Library [Tax Assistance Program][3] Closer to tax time, visit these organizations: * [The Unity Council][4] * [The East Bay Asian Development Corporation][5] The Internal Revenue Service (IRS) also offers [free tax preparation help][6] on their website. [1]: http://www.aarp.org/money/taxes/aarp_taxaide/ [2]: http://www.uwba.org/cut-poverty/sparkpoint/ [3]: http://www.oaklandlibrary.org/services/tax-assistance-program [4]: http://www.unitycouncil.org/ [5]: http://www.ebaldc.org/ [6]: http://www.irs.gov/Individuals/Free-Tax-Return-Preparation-for-You-by-Volunteers"], ["updated_at", "2014-09-03 15:52:14.207782"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.220615"], ["in_language", "en"], ["text", "How do I get a permit for constructing a building?"], ["updated_at", "2014-09-03 15:52:14.220615"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 268], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 268 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.232035"], ["tag_id", 7], ["taggable_id", 268], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.245695"], ["in_language", "en"], ["need_to_know", "The type of permit you need to obtain is dependent on the specifics of your project. Before you go, review the [checklist of documents](http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/index.htm) to bring with you in order to apply for your permit. "], ["question_id", 268], ["text", "**Apply in person at the City of Oakland's Building Services Department Permit Center on the second floor of 250 Frank H. Ogawa Plaza, Oakland.** "], ["updated_at", "2014-09-03 15:52:14.245695"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.257098"], ["in_language", "en"], ["text", "When/what are festivals in Oakland?"], ["updated_at", "2014-09-03 15:52:14.257098"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 269], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 269 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.265940"], ["tag_id", 5], ["taggable_id", 269], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.280368"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 269], ["text", "You can find a list of upcoming and ongoing festivals as well as a general list of fun events taking place in Oakland on the [Visit Oakland Calendar of Festivals page][1]. [1]: http://visitoakland.org/visiting_calendar_of_events.cfm?all=1"], ["updated_at", "2014-09-03 15:52:14.280368"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.291613"], ["in_language", "en"], ["text", "What are the most dangerous areas in Oakland?"], ["updated_at", "2014-09-03 15:52:14.291613"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 270], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 7 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 270 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.302493"], ["tag_id", 7], ["taggable_id", 270], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 7]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 7
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.315609"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 270], ["text", "The best way to find out what areas of Oakland have the most reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-09-03 15:52:14.315609"]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.329516"], ["in_language", "en"], ["text", "What is the best place to live, work, and play?"], ["updated_at", "2014-09-03 15:52:14.329516"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 271], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 271 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.340962"], ["tag_id", 6], ["taggable_id", 271], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.357638"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 271], ["text", "...the City of Oakland!"], ["updated_at", "2014-09-03 15:52:14.357638"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 15:52:14.370185"], ["in_language", "en"], ["text", "I am an Oakland landlord. How can I evict a tenant?"], ["updated_at", "2014-09-03 15:52:14.370185"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 272], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 272 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 15:52:14.381451"], ["tag_id", 3], ["taggable_id", 272], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 15:52:14.394635"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 272], ["text", "**Verify that you are legally allowed to evict the tenant.** ◦ A tenant may be evicted for failing to pay rent. ◦  A tenant may be evicted for violating the lease. ◦  A tenant may be evicted for using the rental unit for an unlawful purpose. ◦  A tenant may be evicted for manufacturing or dealing illegal drugs in the rental unit. ◦  A tenant may be evicted for the unlawful use of a weapon or ammunition. ◦ A tenant may be evicted for materially damaging the rental unit. ◦  A tenant may be evicted for causing a significant nuisance to other tenants. **Serve the tenant with a 3-Day Notice to Pay Rent or Quit form.** ◦ Take the completed form to the tenant and hand it to him or her. If he or she refuses to take it, leave it on the ground near the tenant. ◦ If you are unable to serve it directly to the tenant, leave it with someone who is at least 18 years old at the rental unit or with an adult at the tenant's place of work. A copy must also be mailed to the tenant in this situation. ◦ If unable to serve the form directly to another person, post it on the tenant's door and mail a copy of the form to him or her. **Allow the tenant 3 business days (Monday to Friday) after delivering the notice to remedy the situation.** ◦  The 3-day period begins the day after the notice is served. **File an Unlawful Detainer Complaint, a Civil Case Cover Sheet, and a Pre-judgment Right of Possession form.** ◦ The Unlawful Detainer Complaint can be found at the following URL: http://www.courts.ca.gov/documents/ud100.pdf. This is an eviction notice. ◦  The Civil Case Cover Sheet can be found at the following URL: http://www.courts.ca.gov/documents/cm010.pdf ◦  Submit the paperwork to the courthouse in the county that the property is in. ◦ The County Clerk will give you a Summons and a stamped copy of the Unlawful Detainer Complaint. Make sure you also receive the Pre-judgment Right of Possession form. In some cases, you must provide multiple copies for the Clerk to stamp. **Serve the tenant with the Unlawful Detainer Complaint, the Summons, and the Pre-judgment Right of Possession form.** ◦  Serve these in the same way as you served the 3-day Notice to Pay Rent or Quit form. ◦  The tenant will have 5 days to file a response with you and the court. Post and mail the tenant has 10 days to respond, after the 10 days start counting the 5 days, if no response file for judgement. **Complete the court process.** ◦ If the tenant does not answer within 5 days after being served, request a default judgment from the court. This can be done by submitting a following form to the court. ◦  If a default judgment is issued, you will be given a Writ of Possession. Take this form to the local Sheriff and have him or her evict the tenant. ◦  If the tenant decides to challenge the eviction, you or the tenant may request a trial in front of a judge or jury. The trial will occur within 21 days of the request. ◦ If you win the case, you will be awarded possession of the property and possibly monetary awards. ◦ If you win the case, the court will order the Sheriff to post a notice giving the tenant 5 days to vacate the rental unit. If the tenant does not leave, the Sheriff will forcibly remove him or her. ◦ If the tenant wins the case, he or she will be permitted to remain in the rental unit. You may have to pay his or her court fees and he or she may be ordered to pay any past-due rent. **Store the tenant's items for 2 weeks if he or she is evicted.** ◦ If the tenant leaves items behind, you must store them for 2 weeks and attempt to arrange for the tenant to retrieve them. ◦  If anything remains after this period, you may keep, sell, or dispose of the items. More info: http://www.dca.ca.gov/publications/landlordbook/index.shtml http://www2.oaklandnet.com/oakca/groups/ceda/documents/policy/dowd008116.pdf [1]: http://www.courts.ca.gov/documents/ud100.pdf"], ["updated_at", "2014-09-03 15:52:14.394635"]]
  [1m[35m (0.8ms)[0m  COMMIT


Started GET "/" for 10.0.2.2 at 2014-09-03 15:52:24 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
Completed 404 Not Found in 60ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.1ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 15:52:33 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
Completed 404 Not Found in 11ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.4ms)
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36m (0.8ms)[0m  [1mSELECT COUNT(*) FROM "tags"[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags"
  [1m[36m (0.8ms)[0m  [1mSELECT COUNT(*) FROM "taggings"[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.4ms)[0m  SELECT "taggings".* FROM "taggings"
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT  "taggings".* FROM "taggings"   ORDER BY "taggings"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.1ms)[0m  SELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 1
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggins_count DESC LIMIT 4
PG::UndefinedColumn: ERROR:  column "taggins_count" does not exist
LINE 1: ...S taggings ON taggings.tag_id = tags.id  ORDER BY taggins_co...
                                                             ^
: SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggins_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tag Load (1.7ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m


Started GET "/" for 10.0.2.2 at 2014-09-03 16:11:19 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (2.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
Completed 404 Not Found in 115ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (27.1ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 16:11:21 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
Completed 404 Not Found in 13ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.6ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 16:11:22 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.8ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
Completed 404 Not Found in 12ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.3ms)
  [1m[36mActsAsTaggableOn::Tag Load (2.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 2]]


Started GET "/" for 10.0.2.2 at 2014-09-03 16:15:16 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
Completed 404 Not Found in 20ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.7ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 16:15:18 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
Completed 404 Not Found in 9ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (0.9ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (17.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 16:15:19 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 2]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
Completed 404 Not Found in 9ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.1ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.1ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 16:15:19 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
Completed 404 Not Found in 9ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.2ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (29.2ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 16:15:19 +0000
Processing by HomeController#index as HTML
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 2]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)[0m
Completed 404 Not Found in 9ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 16:15:20 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (3.0ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 2]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (69, 70, 75, 78)
Completed 404 Not Found in 109ms

ActiveRecord::RecordNotFound (Couldn't find all Questions with 'id': (69, 70, 75, 78) (found 0 results, but was looking for 4)):
  app/models/question.rb:20:in `block in tags_with_questions'
  app/models/question.rb:17:in `tags_with_questions'
  app/controllers/home_controller.rb:8:in `index'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.0ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (25.1ms)
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 2]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 5]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 7]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 2]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 5]]
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 4]]
  [1m[36mActsAsTaggableOn::Tagging Load (0.4ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 7]]
  [1m[36m (1.3ms)[0m  [1mSELECT COUNT(*) FROM "questions"[0m


Started GET "/" for 10.0.2.2 at 2014-09-03 16:57:35 +0000

ActiveRecord::NoDatabaseError (FATAL:  database "answers_dev" does not exist
Run `$ bin/rake db:create db:migrate` to create your database):
  activerecord (4.1.4) lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `rescue in connect'
  activerecord (4.1.4) lib/active_record/connection_adapters/postgresql_adapter.rb:888:in `connect'
  activerecord (4.1.4) lib/active_record/connection_adapters/postgresql_adapter.rb:568:in `initialize'
  activerecord (4.1.4) lib/active_record/connection_adapters/postgresql_adapter.rb:41:in `new'
  activerecord (4.1.4) lib/active_record/connection_adapters/postgresql_adapter.rb:41:in `postgresql_connection'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:435:in `new_connection'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:445:in `checkout_new_connection'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:416:in `acquire_connection'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:351:in `block in checkout'
  /opt/rbenv/versions/2.1.2/lib/ruby/2.1.0/monitor.rb:211:in `mon_synchronize'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:350:in `checkout'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:265:in `block in connection'
  /opt/rbenv/versions/2.1.2/lib/ruby/2.1.0/monitor.rb:211:in `mon_synchronize'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:264:in `connection'
  activerecord (4.1.4) lib/active_record/connection_adapters/abstract/connection_pool.rb:541:in `retrieve_connection'
  activerecord (4.1.4) lib/active_record/connection_handling.rb:113:in `retrieve_connection'
  activerecord (4.1.4) lib/active_record/connection_handling.rb:87:in `connection'
  activerecord (4.1.4) lib/active_record/migration.rb:388:in `check_pending!'
  activerecord (4.1.4) lib/active_record/migration.rb:377:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'
  activesupport (4.1.4) lib/active_support/callbacks.rb:82:in `run_callbacks'
  actionpack (4.1.4) lib/action_dispatch/middleware/callbacks.rb:27:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/reloader.rb:73:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  better_errors (2.0.0) lib/better_errors/middleware.rb:59:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.1.4) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.1.4) lib/rails/rack/logger.rb:20:in `call'
  quiet_assets (1.0.3) lib/quiet_assets.rb:23:in `call_with_quiet_assets'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  request_store (1.1.0) lib/request_store/middleware.rb:8:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  actionpack (4.1.4) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/runtime.rb:17:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  activesupport (4.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/lock.rb:17:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  railties (4.1.4) lib/rails/engine.rb:514:in `call'
  railties (4.1.4) lib/rails/application.rb:144:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  rack (1.5.2) lib/rack/deflater.rb:25:in `call'
  newrelic_rpm (3.9.3.241) lib/new_relic/agent/instrumentation/middleware_tracing.rb:57:in `call'
  passenger (4.0.48) lib/phusion_passenger/rack/thread_handler_extension.rb:74:in `process_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:141:in `accept_and_process_next_request'
  passenger (4.0.48) lib/phusion_passenger/request_handler/thread_handler.rb:109:in `main_loop'
  passenger (4.0.48) lib/phusion_passenger/request_handler.rb:448:in `block (3 levels) in start_threads'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_source.erb (1.7ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.3ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.8ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (32.8ms)
  [1m[36mSQL (1.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (11.4ms)[0m  CREATE TABLE "active_admin_comments" ("id" serial primary key, "resource_id" character varying(255) NOT NULL, "resource_type" character varying(255) NOT NULL, "author_id" integer, "author_type" character varying(255), "body" text, "created_at" timestamp, "updated_at" timestamp, "namespace" character varying(255)) 
  [1m[36m (4.5ms)[0m  [1mCREATE  INDEX  "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" USING btree ("author_type", "author_id")[0m
  [1m[35m (4.4ms)[0m  CREATE  INDEX  "index_active_admin_comments_on_namespace" ON "active_admin_comments" USING btree ("namespace")
  [1m[36m (4.8ms)[0m  [1mCREATE  INDEX  "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" USING btree ("resource_type", "resource_id")[0m
  [1m[35m (10.1ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "need_to_know" text, "text" text, "in_language" character varying(255), "question_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (7.0ms)[0m  [1mCREATE  INDEX  "index_answers_on_question_id" ON "answers" USING btree ("question_id")[0m
  [1m[35m (21.8ms)[0m  CREATE TABLE "articles" ("id" serial primary key, "updated" timestamp, "title" character varying(255), "content" text, "created_at" timestamp, "updated_at" timestamp, "content_type" character varying(255), "preview" text, "contact_id" integer, "tags" text, "service_url" character varying(255), "slug" character varying(255), "category_id" integer, "access_count" integer DEFAULT 0, "author_pic_file_name" character varying(255), "author_pic_content_type" character varying(255), "author_pic_file_size" integer, "author_pic_updated_at" timestamp, "author_name" character varying(255), "author_link" character varying(255), "type" character varying(255), "content_md" text, "render_markdown" boolean DEFAULT 't', "content_main" text, "content_main_extra" text, "content_need_to_know" text, "status" character varying(255) DEFAULT 'Draft', "user_id" integer, "title_es" character varying(255), "preview_es" text, "content_main_es" text, "title_cn" character varying(255), "preview_cn" text, "content_main_cn" text) 
  [1m[36m (14.6ms)[0m  [1mCREATE  INDEX  "index_articles_on_slug" ON "articles" USING btree ("slug")[0m
  [1m[35m (2.8ms)[0m  CREATE  INDEX  "index_articles_on_user_id" ON "articles" USING btree ("user_id")
  [1m[36m (9.1ms)[0m  [1mCREATE TABLE "categories" ("id" serial primary key, "name" character varying(255), "access_count" integer, "created_at" timestamp, "updated_at" timestamp, "article_id" integer, "description" text, "slug" character varying(255)) [0m
  [1m[35m (2.8ms)[0m  CREATE UNIQUE INDEX  "index_categories_on_slug" ON "categories" USING btree ("slug")
  [1m[36m (11.6ms)[0m  [1mCREATE TABLE "contacts" ("id" serial primary key, "name" character varying(255), "number" character varying(255), "url" character varying(255), "address" character varying(255), "department" character varying(255), "description" text, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (6.8ms)[0m  CREATE TABLE "delayed_jobs" ("id" serial primary key, "priority" integer DEFAULT 0, "attempts" integer DEFAULT 0, "handler" text, "last_error" text, "run_at" timestamp, "locked_at" timestamp, "failed_at" timestamp, "locked_by" character varying(255), "queue" character varying(255), "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (3.2ms)[0m  [1mCREATE  INDEX  "delayed_jobs_priority" ON "delayed_jobs" USING btree ("priority", "run_at")[0m
  [1m[35m (7.4ms)[0m  CREATE TABLE "departments" ("id" serial primary key, "name" character varying(255), "acronym" character varying(255), "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (15.4ms)[0m  [1mCREATE TABLE "friendly_id_slugs" ("id" serial primary key, "slug" character varying(255) NOT NULL, "sluggable_id" integer NOT NULL, "sluggable_type" character varying(40), "created_at" timestamp, "scope" character varying(255)) [0m
  [1m[35m (4.5ms)[0m  CREATE UNIQUE INDEX  "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope" ON "friendly_id_slugs" USING btree ("slug", "sluggable_type", "scope")
  [1m[36m (10.2ms)[0m  [1mCREATE  INDEX  "index_friendly_id_slugs_on_slug_and_sluggable_type" ON "friendly_id_slugs" USING btree ("slug", "sluggable_type")[0m
  [1m[35m (8.1ms)[0m  CREATE  INDEX  "index_friendly_id_slugs_on_sluggable_id" ON "friendly_id_slugs" USING btree ("sluggable_id")
  [1m[36m (3.0ms)[0m  [1mCREATE  INDEX  "index_friendly_id_slugs_on_sluggable_type" ON "friendly_id_slugs" USING btree ("sluggable_type")[0m
  [1m[35m (10.4ms)[0m  CREATE TABLE "guide_steps" ("id" serial primary key, "article_id" integer, "title" character varying(255), "content" text, "preview" text, "step" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (10.5ms)[0m  [1mCREATE TABLE "keywords" ("id" serial primary key, "name" character varying(255), "metaphone" character varying(255), "stem" character varying(255), "synonyms" text, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (9.4ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "text" character varying(255), "in_language" character varying(255), "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (13.1ms)[0m  [1mCREATE TABLE "rails_admin_histories" ("id" serial primary key, "message" text, "username" character varying(255), "item" integer, "table" character varying(255), "month" smallint, "year" bigint, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (5.2ms)[0m  CREATE  INDEX  "index_rails_admin_histories" ON "rails_admin_histories" USING btree ("item", "table", "month", "year")
  [1m[36m (31.5ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "taggable_id" integer, "taggable_type" character varying(255), "tagger_id" integer, "tagger_type" character varying(255), "context" character varying(128), "created_at" timestamp) [0m
  [1m[35m (3.2ms)[0m  CREATE UNIQUE INDEX  "taggings_idx" ON "taggings" USING btree ("tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type")
  [1m[36m (6.4ms)[0m  [1mCREATE  INDEX  "index_taggings_on_taggable_id_and_taggable_type_and_context" ON "taggings" USING btree ("taggable_id", "taggable_type", "context")[0m
  [1m[35m (9.5ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "name" character varying(255), "taggings_count" integer DEFAULT 0) 
  [1m[36m (5.4ms)[0m  [1mCREATE UNIQUE INDEX  "index_tags_on_name" ON "tags" USING btree ("name")[0m
  [1m[35m (12.3ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying(255) DEFAULT '' NOT NULL, "encrypted_password" character varying(255) DEFAULT '' NOT NULL, "reset_password_token" character varying(255), "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "sign_in_count" integer DEFAULT 0, "current_sign_in_at" timestamp, "last_sign_in_at" timestamp, "current_sign_in_ip" character varying(255), "last_sign_in_ip" character varying(255), "created_at" timestamp, "updated_at" timestamp, "is_editor" boolean, "is_admin" boolean DEFAULT 'f', "is_writer" boolean DEFAULT 'f', "department_id" integer, "authentication_token" character varying(255)) 
  [1m[36m (3.3ms)[0m  [1mCREATE  INDEX  "index_users_on_authentication_token" ON "users" USING btree ("authentication_token")[0m
  [1m[35m (2.9ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users" USING btree ("email")
  [1m[36m (2.9ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users" USING btree ("reset_password_token")[0m
  [1m[35m (8.9ms)[0m  CREATE TABLE "wordcounts" ("id" serial primary key, "article_id" integer, "keyword_id" integer, "count" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (2.0ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (6.8ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (1.4ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140818141437')
  [1m[36m (1.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120416181217')[0m
  [1m[35m (1.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120424172229')
  [1m[36m (2.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120430224632')[0m
  [1m[35m (2.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120430232605')
  [1m[36m (2.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120501181542')[0m
  [1m[35m (1.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120501181544')
  [1m[36m (1.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120501191040')[0m
  [1m[35m (1.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120628194351')
  [1m[36m (1.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120628200512')[0m
  [1m[35m (3.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120628203747')
  [1m[36m (1.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120629070448')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120629072846')
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120629140930')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120629143105')
  [1m[36m (2.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120701155314')[0m
  [1m[35m (1.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120702150748')
  [1m[36m (2.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120702150749')[0m
  [1m[35m (1.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120702165334')
  [1m[36m (2.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120702171830')[0m
  [1m[35m (2.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120706171506')
  [1m[36m (1.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120706172717')[0m
  [1m[35m (1.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120706173031')
  [1m[36m (3.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120706193649')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120707184743')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120707190634')[0m
  [1m[35m (2.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120714144317')
  [1m[36m (1.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120727004822')[0m
  [1m[35m (1.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120727052215')
  [1m[36m (7.7ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120727124910')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120730225526')
  [1m[36m (1.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120807200215')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120807233918')
  [1m[36m (2.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20120807235112')[0m
  [1m[35m (1.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20120817231009')
  [1m[36m (1.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20121010140714')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20121026145929')
  [1m[36m (1.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20121028193745')[0m
  [1m[35m (0.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20121106123303')
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20121107003920')[0m
  [1m[35m (3.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20121107014855')
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20121107020439')[0m
  [1m[35m (1.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20121108074632')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140527211609')[0m
  [1m[35m (0.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140612192304')
  [1m[36m (1.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140717165411')[0m
  [1m[35m (1.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140717170311')
  [1m[36m (1.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140718162526')[0m
  [1m[35m (2.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140718162552')
  [1m[36m (1.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140721194324')[0m
  [1m[35m (1.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140805001628')
  [1m[36m (1.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140806160418')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140808153110')
  [1m[36m (2.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140808153128')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140808153208')
  [1m[36m (1.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140808153240')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140808153305')
  [1m[36m (1.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140818141434')[0m
  [1m[35m (2.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140818141435')
  [1m[36m (1.7ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140818141436')[0m
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:18.153633"], ["in_language", "en"], ["text", "Can I revise my City job application?"], ["updated_at", "2014-09-03 18:33:18.153633"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (1.4ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'pets' LIMIT 1
  [1m[36mSQL (1.5ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "pets"]]
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 1 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:18.247609"], ["tag_id", 1], ["taggable_id", 1], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (2.4ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (2.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:18.652795"], ["in_language", "en"], ["need_to_know", "If you're in the process of applying, you can save your application as you go and ahead any edit part you please. You can even use past applications for new job openings so you don't need to re-enter every single past employment. But once you've hit submit it's \"bon voyage.\""], ["question_id", 1], ["text", "Once you've hit that submit button, your application is locked in. However, you can save and edit applications for jobs that you are currently applying to as well as revise old applications and use them to apply to new jobs. "], ["updated_at", "2014-09-03 18:33:18.652795"]]
  [1m[35m (2.4ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (5.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:18.703231"], ["in_language", "en"], ["text", "How do I get a motorcycle license?"], ["updated_at", "2014-09-03 18:33:18.703231"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (2.4ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'recycling' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "recycling"]]
  [1m[35mActsAsTaggableOn::Tag Load (8.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 2], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 2 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (2.2ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:18.757026"], ["tag_id", 2], ["taggable_id", 2], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (4.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (4.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.2ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:18.810148"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 2], ["text", "Visit the [Motorcycle License Checklist][1] page at the California Department of Motor Vehicles. [1]: http://www.dmv.ca.gov/dl/checklists/mc.htm"], ["updated_at", "2014-09-03 18:33:18.810148"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (1.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:18.837052"], ["in_language", "en"], ["text", "Can a person clear their criminal record? How?"], ["updated_at", "2014-09-03 18:33:18.837052"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 3], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 3 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:18.847856"], ["tag_id", 2], ["taggable_id", 3], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (7.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (1.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:18.884201"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 3], ["text", "You can expunge -- or clear convictions from -- your criminal record by petitioning the state in which you were convicted, or the federal government. If you were convicted of crime in the State of California, instructions for the process of filing a Petition for Dismissal are [here][1] and [here][2]. [1]: http://www.courts.ca.gov/1070.htm [2]: http://www.saccourt.ca.gov/criminal/docs/1203-4-dismissal-process.pdf"], ["updated_at", "2014-09-03 18:33:18.884201"]]
  [1m[35m (1.7ms)[0m  COMMIT
  [1m[36m (1.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:18.924655"], ["in_language", "en"], ["text", "Can I submit my resume for any future City job openings?"], ["updated_at", "2014-09-03 18:33:18.924655"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (1.2ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'transportation' LIMIT 1
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "transportation"]]
  [1m[35mActsAsTaggableOn::Tag Load (2.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 4], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 4 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:18.941447"], ["tag_id", 3], ["taggable_id", 4], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.3ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:18.982833"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 4], ["text", "You can file a [Job Interest Card][1] for a specific department within the City of Oakland. After you've filed one you'll get an email when a job opens in that department so you can apply. You cannot file one for a specific job--only by department. Job interest cards last 12 months and then you'll need to re-file them at the above link. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm?action=openjobrequest"], ["updated_at", "2014-09-03 18:33:18.982833"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (3.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:19.028175"], ["in_language", "en"], ["text", "Who do I contact if I found a dog?"], ["updated_at", "2014-09-03 18:33:19.028175"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 5], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 5 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:19.050545"], ["tag_id", 1], ["taggable_id", 5], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (16.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:19.113746"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 5], ["text", "The city of Oakland's Animal Services is part of the Oakland Police Department. If you find a dog that you can not keep until you find its owner, call the Oakland Police Department non-emergency number: (510)-777-3333. Open 24 hours per day and 7 days per week. "], ["updated_at", "2014-09-03 18:33:19.113746"]]
  [1m[35m (3.1ms)[0m  COMMIT
  [1m[36m (3.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:19.165224"], ["in_language", "en"], ["text", "Who do I need to inform if I change my address?"], ["updated_at", "2014-09-03 18:33:19.165224"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 6], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 6 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:19.183138"], ["tag_id", 3], ["taggable_id", 6], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (1.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (3.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:19.222523"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 6], ["text", "The City of Oakland does not need to be informed if you change your address, but you may need to contact other government entities if: 1) You've moved and need to change your mailing address. In this case, contact the US Postal Service [here](https://moversguide.usps.com/icoa/home/icoa-main-flow.do?execution=e1s1&_flowId=icoa-main-flow&referral=MG80). 2) You need to change the address on your drivers license. In this case, contact the CA DMV [here](http://www.dmv.ca.gov/faq/genfaq.htm#CHANGEADDRESS). 3) You need to change your voter registration. In this case, find information about how to register online at the CA Secretary of State [here](https://rtv.sos.ca.gov/elections/register-to-vote/). (Note: You need to go through the whole re-registration process even if you are already registered and simply need to change your address. There is a spot to indicate that you are already registered at another address)."], ["updated_at", "2014-09-03 18:33:19.222523"]]
  [1m[35m (2.2ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:19.298110"], ["in_language", "en"], ["text", "Where are the public swimming pools in Oakland?"], ["updated_at", "2014-09-03 18:33:19.298110"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 7], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 7 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:19.315238"], ["tag_id", 1], ["taggable_id", 7], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:19.354378"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 7], ["text", "You can find six public pools in Oakland. - Defremery Pool - 1269 18th Street (510) 238-2205 - East Oakland Sports Center - 9161 Edes Avenue (510) 615-5838 - Fremont Pool - 4550 Foothill Blvd (510) 535-5614 - Lions Pool - 3860 Hanly Road (510) 482-7852 - Live Oak Pool - 1055 MacArthur Blvd (510) 238-2292 - Temescal Pool - 371 45th Street (510) 597-5013 "], ["updated_at", "2014-09-03 18:33:19.354378"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:19.456995"], ["in_language", "en"], ["text", "How do I get an Oakland ID card?"], ["updated_at", "2014-09-03 18:33:19.456995"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (1.5ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'education' LIMIT 1
  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "education"]]
  [1m[35mActsAsTaggableOn::Tag Load (2.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 8], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (5.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 8 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (5.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:19.514017"], ["tag_id", 4], ["taggable_id", 8], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (3.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (2.3ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:19.553596"], ["in_language", "en"], ["need_to_know", "<p>Before your visit, you can {{must??}} make a 30-minute appointment <a href=\"http://..com/locations.html\" target=\"blank\">online or by phone</a>. </p> <p>Oakland's city ID card is identification accepted and respected as a valid residency card by Oakland Police Department, BART Police, Alameda County Sheriffs and other local authorities {{what about city/state/federal service agencies?}}.</p> <p><b>Accepted proof of residency</b> must show your <b>name</b> (or your spouse's, if you bring a certified copy of your marriage certificate {{where do you get this?? what does it cost?? what about civil unions/domestic partnerships??}} and <b>Oakland address</b>, and be <b>dated within the last 30 days</b>:</p> <ol> <li>Utility or services bill</li> <li>Local property tax statement</li> <li>Mortgage payment {{that doesn't make sense, shouldn't it be a mortgage interest payment invoice?}}</li> <li>Bank statement</li> <li>Pay stub</li> <li>Jury summons or court order</li> <li>Federal or state income tax or refund statement</li> <li>Insurance bill</li> <li>Proof of a minor currently enrolled in a local school</li> <li>Written verification by an Oakland-funded {{how are people supposed to know what's Oakland-funded versus county- or state-funded??}} homeless shelter, hospital, health clinic or social services agency of at least 15 days of residency</li> </ol> <p><b>Accepted proof of identity</b>:</br> <ol> <li>US Permanent Resident Card (\"Green Card\")</li> <li>Current US Driver License</li> <li>Current US State Issued ID</li> <li>Current US Military Service ID</li> <li>Mexican Matricula Consular Identification Card</li> <li>Foreign Government Issued National ID Card</li> <li>Foreign Passport</li> <li>Foreign Driver License</li> <li>Foreign Military Service ID</li> <li>Consular Identification Card</li> </ol> </p> <p>If you're 18 and over and provide one of the first six documents above, you can also apply to activate your city ID for use as a pre-paid debit card. Be aware that pre-paid debit card services carry both <a href=\"http://www.oaklandcityid.com/fees.html\" target=\"blank\">monthly and transactional fees</a> that the vendor estimates range from a low end of $15 to a high end of over $27 per month.</p>"], ["question_id", 8], ["text", "<p>You can apply for a city ID card in person at the <a href=\"http://www.oaklandcityid.com/locations.html\" target=\"blank\">City Center or Fruitvale office</a> of <a href=\"http://www.sfglobalsourcing.com/specialties\" target=\"blank\">SF Global LLC</a>, the private company the city has contracted with to provide this service. Oakland's city ID card is available for purchase by Oakland residents 18 years and up {{?? website implies the card is available for at least some minors because it states that the optional financial services are available only to applicants 18 or older}} with proof of residency and identity.</p>"], ["updated_at", "2014-09-03 18:33:19.553596"]]
  [1m[35m (7.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:19.831665"], ["in_language", "en"], ["text", "What can I do when one or more neighbors start to erect large, all enclosing fences? "], ["updated_at", "2014-09-03 18:33:19.831665"]]
  [1m[36mActsAsTaggableOn::Tag Load (5.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (0.9ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'employment' LIMIT 1
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "employment"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 9], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 9 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:19.870227"], ["tag_id", 5], ["taggable_id", 9], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (3.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:19.912066"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 9], ["text", "Installing of an over-sized fence requires a permit from building services. For reasons of fire safety and for neighborhood appearance, fences in front yards are limited to a height of three and a half feet, which is the same or six inches higher than fences allowed in many nearby cities in the Bay Area. Fencing in the back and along the sides of a house can be much taller. Visit the Planning and Building Department's [Permit information page][1] for more information. Although it is best to solve neighborhood issues in local groups and neighborhood associations, complaints can be sent to building services and these may result in fines for alternations without permits or variances. To file a Code Enforcement complaint, call (510) 238-3381 or visit the [City Code Enforcement][2] page. [1]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/ [2]: http://www2.oaklandnet.com/Government/o/PBN/OurServices/CityCodeEnforcement/index.htm "], ["updated_at", "2014-09-03 18:33:19.912066"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (1.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (5.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:19.972022"], ["in_language", "en"], ["text", "Can I plant a tree in a park?"], ["updated_at", "2014-09-03 18:33:19.972022"]]
  [1m[36mActsAsTaggableOn::Tag Load (4.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (10.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 10], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 10 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:20.013303"], ["tag_id", 4], ["taggable_id", 10], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (3.9ms)[0m  BEGIN
  [1m[36mSQL (1.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:20.061458"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 10], ["text", "You cannot plant a tree in a public park. "], ["updated_at", "2014-09-03 18:33:20.061458"]]
  [1m[35m (4.1ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:20.097455"], ["in_language", "en"], ["text", "How can I help the homeless?"], ["updated_at", "2014-09-03 18:33:20.097455"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 11], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 11 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:20.121777"], ["tag_id", 1], ["taggable_id", 11], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (2.2ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:20.176398"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 11], ["text", "There are are a number of ways that Oaklanders can help the homeless. You can be involved in city policy, volunteer, make donations, and become an advocate. Throughout the year, the City partners with local organizations for a variety of events. Oakland’s Permanent Access to Housing (PATH) Strategy provides a roadmap for ending homelessness in the City over a period of the next fifteen years. "], ["updated_at", "2014-09-03 18:33:20.176398"]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:20.213553"], ["in_language", "en"], ["text", "How Many People Live In Oakland?"], ["updated_at", "2014-09-03 18:33:20.213553"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 12], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 12 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:20.238670"], ["tag_id", 5], ["taggable_id", 12], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (4.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (3.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (5.9ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:20.283011"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 12], ["text", "The 2010 Census reported Oakland's population as 390,724. The California Department of Finance has estimated Oakland's population on January 1, 2013, as 399,326."], ["updated_at", "2014-09-03 18:33:20.283011"]]
  [1m[35m (2.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:20.330534"], ["in_language", "en"], ["text", "What Council District am I in?"], ["updated_at", "2014-09-03 18:33:20.330534"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Exists (0.7ms)[0m  SELECT  1 AS one FROM "tags"  WHERE "tags"."name" = 'trash' LIMIT 1
  [1m[36mSQL (4.5ms)[0m  [1mINSERT INTO "tags" ("name") VALUES ($1) RETURNING "id"[0m  [["name", "trash"]]
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 13], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (4.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 13 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:20.371982"], ["tag_id", 6], ["taggable_id", 13], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (2.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (2.3ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:20.446980"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 13], ["text", "Go to [http://mapgis.oaklandnet.com/councildistricts/][1] and enter your address. The map shows how the city is divided into 7 council districts - you can click into any district to see the Councilmember, or you can enter your address in the locator field to see the result. The Councilmember contact information is displayed. [1]: http://mapgis.oaklandnet.com/councildistricts/"], ["updated_at", "2014-09-03 18:33:20.446980"]]
  [1m[35m (28.2ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:20.503840"], ["in_language", "en"], ["text", "Where can I view a live webcast of City Council Meetings?"], ["updated_at", "2014-09-03 18:33:20.503840"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 14], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 14 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:20.523806"], ["tag_id", 2], ["taggable_id", 14], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:20.547786"], ["in_language", "en"], ["need_to_know", "The City of Oakland website can be found at http://www2.oaklandnet.com/"], ["question_id", 14], ["text", " [Oaklandnet.com][1] features [live (real-time streaming) as well as archived video.][2] Streaming video is available in the following formats. View the system requirements below to select the one that is best for you. (Live) [Microsoft Silverlight Users][3] (for PC and Macintosh) (Live) [Realplayer Users][4] Archived Videos and Agendas of the Oakland City Council: [Click here to view agendas, minutes and videos from past Council meetings.][5] [1]: http://www.Oaklandnet.com [2]: http://www2.oaklandnet.com/Government/o/CityCouncil/s/VideoArchive/index.htm [3]: http://oakland.granicus.com/MediaPlayer.php?publish_id=2 [4]: http://helixvideosvr.oaklandnet.com/ramgen/broadcast/encoderstream.rm [5]: http://oakland.legistar.com/calendar.aspx"], ["updated_at", "2014-09-03 18:33:20.547786"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:20.625130"], ["in_language", "en"], ["text", "How do I report drug dealing?"], ["updated_at", "2014-09-03 18:33:20.625130"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 15], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (4.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 15 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:20.650615"], ["tag_id", 3], ["taggable_id", 15], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (6.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (9.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:20.703129"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 15], ["text", "If there is drug dealing in progress you can report it to the Oakland Police Departments non-emergency number -- **510-777-3333**. Make sure to get the incident number. You can also call the Drug Hotline -- **510-238-DRUG/ 238-3784** drug dealing tip-line – you can leave a recorded message that police use for follow-up and to note chronic drug dealing hot spots. Give as much information as possible including gender, race, age, height, weight, clothing, possible location of drugs and associated vehicles."], ["updated_at", "2014-09-03 18:33:20.703129"]]
  [1m[35m (6.3ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:20.772380"], ["in_language", "en"], ["text", "Do I need a permit to throw a party?"], ["updated_at", "2014-09-03 18:33:20.772380"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 16], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 16 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:20.792801"], ["tag_id", 6], ["taggable_id", 16], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:20.880227"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 16], ["text", "**Times when you DON'T need an event permit** If you are having a party **on you own property** (whether it's inside or outside, whether you rent or own) you don't need a permit to play amplified music or serve alcohol. ---------- **Times when you WILL need an event permit** There are times when you will need a **special permit** to hold an event. Conditions that require a special event permit include: - an event that is open to the public with 50 or more people will be in attendance - events that require street closures (e.g. a block party) - a party where people will be drinking alcohol outside of private property - a party with amplified sound that can be heard beyond your own property ---------- **How to get the permits you need** If you think your party meets the qualifications above then you will need **at least one permit from the City, maybe more.** Almost **all** events require a permit from the Special Activities unit of the City Administrator's Office. In most (not all) cases, you are going to need to prove that you have liability insurance for your proposed event. You can apply for a permit by contacting either of the following staff people: - Nancy Marcus - 510-238-3294 - nmarcus@oaklandnet.com - Jasmine Chan - 510-238-6914 - jchan@oaklandnet.com If your party is going to require a **street closure** then you must you must file an application with the Special Event Unit of the Oakland Police Department. Be sure to file the application with OPD **at least 30 days prior to your event**. To hold a party in a public space (e.g. a City park) you will need to request a reservation with the Office of Parks and Recreation by phone at 510-238-3187 or by email at oprscheduling@oaklandnet.com. "], ["updated_at", "2014-09-03 18:33:20.880227"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (1.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:20.996425"], ["in_language", "en"], ["text", "Who do I contact to get a space at a Farmer's Market?"], ["updated_at", "2014-09-03 18:33:20.996425"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 17], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 17 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.015193"], ["tag_id", 6], ["taggable_id", 17], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (3.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.2ms)[0m  BEGIN
  [1m[36mSQL (1.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:21.081822"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 17], ["text", "There are different organizations that run the various farmer's markets throughout the city. You can find the contact information for specific farmer's markets through the California Certified Farmer's Market website. [http://www.cafarmersmarkets.com/index.cfm][1] [1]: http://www.cafarmersmarkets.com/index.cfm"], ["updated_at", "2014-09-03 18:33:21.081822"]]
  [1m[35m (14.1ms)[0m  COMMIT
  [1m[36m (4.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:21.147965"], ["in_language", "en"], ["text", "Where is City Hall located?"], ["updated_at", "2014-09-03 18:33:21.147965"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 18], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 18 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.171350"], ["tag_id", 3], ["taggable_id", 18], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (4.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (4.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (3.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:21.214156"], ["in_language", "en"], ["need_to_know", "Oakland City Hall is conveniently located right off the BART line at the 12th Street/City Center station. For more information about schedules and for a map of the system, visit BART at [www.bart.gov][1] or call (510) 464-7133 (TDD#: (510) 839-2218). City Hall is also accessible via several different bus lines run by AC Transit. For more information about schedules and a system map, visit AC Transit at [www.actransit.org][2] or call (510) 891-4706 (TDD#: (510) 428-2266). Bus lines that serve City Hall include: 1, 1R, 11, 12, 18, 26, 72, 72R, 72M, 58L, 51A and the [free Broadway Shuttle][3]. [1]: http://www.bart.gov [2]: http://www.actransit.dst.cs.us [3]: http://www.meetdowntownoak.com/shuttle.php"], ["question_id", 18], ["text", "**Oakland City Hall**<br> 1 Frank H. Ogawa Plaza<br> Oakland, CA 94612 [![map of oakland city hall][1]](http://mapq.st/146TJoF)<br> Frank H. Ogawa plaza is located on 14th street, between Broadway and Clay. [1]: http://i.imgur.com/DKkMn9M.png "], ["updated_at", "2014-09-03 18:33:21.214156"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:21.247334"], ["in_language", "en"], ["text", "How can I report students who are skipping school?"], ["updated_at", "2014-09-03 18:33:21.247334"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 19], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 19 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.263799"], ["tag_id", 3], ["taggable_id", 19], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (5.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (3.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:21.314807"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 19], ["text", "Truancy Reporting: To report and get help for youth not in school, phone the following. OUSD Police Non-Emergency Line: **510-874-7777**. Be sure to describe youth, their clothing, their location, their activity (any drugs or alcohol use) when calling in. For questions to OUSD police, email: **police@ousd.k12.ca.us** "], ["updated_at", "2014-09-03 18:33:21.314807"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:21.340590"], ["in_language", "en"], ["text", "How do I get a replacement birth certificate?"], ["updated_at", "2014-09-03 18:33:21.340590"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 20], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (6.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 20 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (2.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.365993"], ["tag_id", 4], ["taggable_id", 20], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (4.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (8.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (5.7ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:21.473418"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 20], ["text", "You have to request a replacement birth certificate from the county where you were born. If you were born in Alameda County, you can find directions for ordering replacement birth certificates [here][1]. [1]: http://www.acgov.org/auditor/clerk/birth2b.htm"], ["updated_at", "2014-09-03 18:33:21.473418"]]
  [1m[35m (6.3ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (5.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:21.524335"], ["in_language", "en"], ["text", "How do I contact my Councilmember?"], ["updated_at", "2014-09-03 18:33:21.524335"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 21], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 21 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.544928"], ["tag_id", 5], ["taggable_id", 21], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (1.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:21.586070"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 21], ["text", "If you know who your councilmember is, you can go to: http://www2.oaklandnet.com/Government/o/ElectedOfficials/index.htm and click on the link for your member. This will take you to a website for that council member and information on who to contact their office , along with support staff If you don't know your representative, you can go to: http://mapgis.oaklandnet.com/councildistricts/ and enter your address for find the link for your representative."], ["updated_at", "2014-09-03 18:33:21.586070"]]
  [1m[35m (2.7ms)[0m  COMMIT
  [1m[36m (5.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (5.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:21.637952"], ["in_language", "en"], ["text", "How do I rent a facility?"], ["updated_at", "2014-09-03 18:33:21.637952"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 22], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 22 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.660415"], ["tag_id", 1], ["taggable_id", 22], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (2.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (2.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:21.691762"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 22], ["text", "Please call Central Reservations at (510) 238-3187 or review our [Rental Facilities page][1] for additional information. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-09-03 18:33:21.691762"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (6.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:21.764861"], ["in_language", "en"], ["text", "How do I start residential garbage and recycling service in Oakland?"], ["updated_at", "2014-09-03 18:33:21.764861"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (4.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 23], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 23 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.795621"], ["tag_id", 6], ["taggable_id", 23], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:21.837872"], ["in_language", "en"], ["need_to_know", "To establish residential garbage services and green waste pickup in Oakland: - **If you own your home:** contact Waste Management of Alameda County at (510) 613-8710 to start weekly garbage and yard trimmings/food scraps collection service. - **If you are renting:** contact your landlord or property manager to start weekly garbage and yard trimmings/food scraps collection service. To start weekly recycling collection service for both owners and renters, contact your recycling company: - **North and West Oakland:** Recycling service is provided by California Waste Solutions. Call (510) 836-6200 to subscribe for service or to request a cart. - **East Oakland:** Recycling service is provided by Waste Management of Alameda County. Call (510) 613-8710 to subscribe for service or to request a cart."], ["question_id", 23], ["text", ""], ["updated_at", "2014-09-03 18:33:21.837872"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:21.870930"], ["in_language", "en"], ["text", "Where can I receive language assistance?"], ["updated_at", "2014-09-03 18:33:21.870930"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 24], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (5.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 24 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (2.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:21.901404"], ["tag_id", 3], ["taggable_id", 24], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.2ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (3.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.006451"], ["in_language", "en"], ["need_to_know", "The Equal Access Office provides many kinds of language assistance to Oakland residents. [This webpage on the City's website][1] has a list of Language Assistance accommodations, that include: - How to know which city services have language assistance provided - A printable card you can carry with you to help city staff know that you need help in a language other than English **You can contact the Office of Equal Access for more information**<br> 150 Frank H. Ogawa Plaza, 2nd Floor, Oakland, CA 94612<br> phone: (510) 238-6813<br> [equalaccess@oaklandnet.com][2] [1]: http://www2.oaklandnet.com/Government/o/HumanResources/o/EqualAccess/DOWD000747 [2]: mailto:equalaccess@oaklandnet.com"], ["question_id", 24], ["text", "Language assistance can also include: - Interpreters - Assistance from a bilingual staff member (who has received appropriate training) - Multimedia resources (for example, a multilingual CD-Rom) - Multilingual information on web sites - Multilingual telephone information - Translated printed materials"], ["updated_at", "2014-09-03 18:33:22.006451"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (7.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.082271"], ["in_language", "en"], ["text", "How much is the City’s total budget?"], ["updated_at", "2014-09-03 18:33:22.082271"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 25], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 25 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.123758"], ["tag_id", 6], ["taggable_id", 25], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.168651"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 25], ["text", "The City’s annual budget across all funds for the current fiscal year (FY 2012-13) is about $1 billion."], ["updated_at", "2014-09-03 18:33:22.168651"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.193559"], ["in_language", "en"], ["text", "How do I report an abandoned vehicle?"], ["updated_at", "2014-09-03 18:33:22.193559"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 26], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 26 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.212386"], ["tag_id", 4], ["taggable_id", 26], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (2.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.247173"], ["in_language", "en"], ["need_to_know", "To report abandoned vehicles parked on a public street for over 72 hours, you can: - Call the Abandoned Auto Detail at (510) 777-8622. - Email the location, description, and license number of the vehicle, if known, to AbandonedAuto@oaklandnet.com. To report an abandoned vehicle parked on private property or a private street, you can: - Call the Vehicle Abatement Detail at (510) 777-8538. The Abandoned Auto Detail operates Monday through Friday, 6am to 4pm. "], ["question_id", 26], ["text", ""], ["updated_at", "2014-09-03 18:33:22.247173"]]
  [1m[35m (2.5ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.281965"], ["in_language", "en"], ["text", "What is the City doing to help the homeless?"], ["updated_at", "2014-09-03 18:33:22.281965"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 27], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 27 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.297467"], ["tag_id", 3], ["taggable_id", 27], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (6.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.324207"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 27], ["text", "The City of Oakland's homeless programs provide housing and services to people in Oakland who are homeless, hungry, HIV/AIDS positive, or living on extremely low incomes. Community Housing Services recognizes the tremendous need for services specific to the homeless population. We partner with non-profit organizations to assist the homeless and near-homeless community with homeless prevention, rapid re-housing, permanent supportive housing, shelter, transitional/supportive housing and special needs housing. We also provide other homeless support services such as food, employment, physical and mental health, drug abuse and domestic violence programs."], ["updated_at", "2014-09-03 18:33:22.324207"]]
  [1m[35m (2.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.380752"], ["in_language", "en"], ["text", "How do I request information from the Oakland Police Department"], ["updated_at", "2014-09-03 18:33:22.380752"]]
  [1m[36mActsAsTaggableOn::Tag Load (15.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 28], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (7.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 28 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.483468"], ["tag_id", 1], ["taggable_id", 28], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.509778"], ["in_language", "en"], ["need_to_know", "Your request will either be fulfilled or denied- if it is denied you will be furnished with details of why the request is not being fulfilled. **Public records include:** - Complaints - Crime Reports - Department publications - Employment contracts - Offense reports - Recordings - List item - Traffic accident reports - Traffic enforcement incidents - Training records "], ["question_id", 28], ["text", "You may request certain types of information from the OPD using an Online, mail or in-person process. We highly suggest the online method. **Online** Step 1: Copy the Public Records [request form][1] to your computer Step 2: Save the PDF document to your computer and then complete the details on the PDF document itself. Step 3: Re-SAVE the PDF on your computer with the details completed. Step 4: Email it to [OPDPublicRecordsRequest@oaklandnet.com][2]. **In-Person** Step 1: Picking up a copy of the form in person at the [Police Administration Building][3] Patrol Desk on the first floor. Step 2: Bring the completed form to the OPD Records Division Kiosk on the first floor of the PAB. The Records Kiosk is open to the public from 8:00 am to 3:00 pm Monday through Friday and from 8:00 am until noon on Saturday and Sunday. **By Mail** Send your completed paper form to: Public Records Request Coordinator Oakland Police Department Records Section 455 7th Street, Room 306 Oakland, CA 94607 Contact Information for Assistance If you need additional assistance with a Public Records request, please contact the Public Records Request Coordinator: (510) 238-7143. [1]: http://www2.oaklandnet.com/Government/o/OPD/s/document/DOWD002885 [2]: http://mailto:OPDPublicRecordsRequest@oaklandnet.com?Subject=RecordsRequest [3]: http://maps.google.com/maps?hl=en&source=hp&ie=UTF8&q=oakland%20police%20department&fb=1&gl=us&hq=police%20department&hnear=oakland&ei=FJrfSrydOYWyswPn-IXoCA&ved=0CCsQnQIwBg&view=map&f=d&daddr=455%207th%20St,%20Oakland,%20CA&geocode=CU8p8gFnSfHUFcnGQAIdCD22-A"], ["updated_at", "2014-09-03 18:33:22.509778"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36m (1.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.572183"], ["in_language", "en"], ["text", "What charter schools are near me?"], ["updated_at", "2014-09-03 18:33:22.572183"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 29], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (4.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 29 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.594192"], ["tag_id", 2], ["taggable_id", 29], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (2.4ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.650081"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 29], ["text", "The [Center for Education Reform][1] can help you find charter schools near you. [This link][2] will show a list of all the charter schools in Oakland. You can also focus the list by choosing the grade level or locations you need. [1]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D= [2]: http://www.edreform.com/in-the-states/know-your-choices/find-a-charter-school/?filter%5Bname%5D=&filter%5Bcity%5D=Oakland&filter%5Bstate%5D=CA&filter%5Bgrade%5D=&filter%5Bgrades_categories%5D=&filter%5Bspecialty%5D="], ["updated_at", "2014-09-03 18:33:22.650081"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (4.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.685372"], ["in_language", "en"], ["text", "What are the parking holidays in Oakland?"], ["updated_at", "2014-09-03 18:33:22.685372"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 30], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (5.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 30 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (6.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.709299"], ["tag_id", 2], ["taggable_id", 30], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.794185"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 30], ["text", " The only days when there is no parking enforcement in Oakland are: - New Year's Day (January 1st) - Martin Luther King Jr. Day - President's Day - Memorial Day - Independence Day (July 4th) - Labor Day - Thanksgiving Day - Christmas Day (December 25th)"], ["updated_at", "2014-09-03 18:33:22.794185"]]
  [1m[35m (4.7ms)[0m  COMMIT
  [1m[36m (4.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.837805"], ["in_language", "en"], ["text", "How do I get a marriage license?"], ["updated_at", "2014-09-03 18:33:22.837805"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 31], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 31 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.851381"], ["tag_id", 5], ["taggable_id", 31], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (15.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (5.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.890288"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 31], ["text", "Alameda County will issue you a marriage license is you and your future spouse request one in-person at the County Clerk-Recorder's Office. You can find more information [here][1]. [1]: http://www.acgov.org/auditor/clerk/ml.htm"], ["updated_at", "2014-09-03 18:33:22.890288"]]
  [1m[35m (2.3ms)[0m  COMMIT
  [1m[36m (2.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:22.917193"], ["in_language", "en"], ["text", "Where can I find classes, programs and events that are happening at the library?"], ["updated_at", "2014-09-03 18:33:22.917193"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 32], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 32 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (3.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:22.938795"], ["tag_id", 1], ["taggable_id", 32], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (2.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.3ms)[0m  BEGIN
  [1m[36mSQL (3.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:22.972965"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 32], ["text", "You can find a listing of library events on the library's website [here][1]. You can also pick up a monthly calendar of events at any [library branch][2]. [1]: http://oaklandlibrary.org/events [2]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-09-03 18:33:22.972965"]]
  [1m[35m (2.9ms)[0m  COMMIT
  [1m[36m (3.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.023177"], ["in_language", "en"], ["text", "How do I get a disabled person parking permit?"], ["updated_at", "2014-09-03 18:33:23.023177"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 33], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 33 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.041998"], ["tag_id", 6], ["taggable_id", 33], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.085290"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 33], ["text", "Disabled parking permits need to be obtained from the California Department of Motor Vehicles. You can find more information and the application form [here](http://www.dmv.ca.gov/pubs/brochures/fast_facts/ffvr07.htm#)."], ["updated_at", "2014-09-03 18:33:23.085290"]]
  [1m[35m (10.1ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (12.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.142328"], ["in_language", "en"], ["text", "Are there internships at the City?"], ["updated_at", "2014-09-03 18:33:23.142328"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 34], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 34 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (5.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.174562"], ["tag_id", 3], ["taggable_id", 34], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.1ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.204149"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 34], ["text", "You can find more information on City internships on the City of Oakland website. Different departments (including the [City Auditor][1], and the [Public Ethics Commission][2]) offer internships which can be found posted on the individual department's website. Go to the City of Oakland website, and search \"[internship][3]\". [1]: http://www.oaklandauditor.com/en/ruby/careers/40 [2]: http://www2.oaklandnet.com/Government/o/CityAdministration/d/PublicEthics/internships/index.htm [3]: http://www2.oaklandnet.com/Search/index.htm?cx=017801668647536616097:grdicmryz10&cof=FORID:10&ie=UTF-8&q=internship&sa=Search"], ["updated_at", "2014-09-03 18:33:23.204149"]]
  [1m[35m (1.9ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.234121"], ["in_language", "en"], ["text", "How can I rent event space in Oakland?"], ["updated_at", "2014-09-03 18:33:23.234121"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 35], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 35 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.248647"], ["tag_id", 5], ["taggable_id", 35], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (2.7ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.282228"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 35], ["text", "Oakland Parks & Recreation offers rental facilities, listed here: [http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm][1] There are also private facilities available to rent in Oakland. [1]: http://www2.oaklandnet.com/Government/o/opr/s/rental/index.htm"], ["updated_at", "2014-09-03 18:33:23.282228"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.304082"], ["in_language", "en"], ["text", "Where can I get tax forms?"], ["updated_at", "2014-09-03 18:33:23.304082"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (4.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 36], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 36 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.328758"], ["tag_id", 6], ["taggable_id", 36], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (4.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.350064"], ["in_language", "en"], ["need_to_know", "If you would like to download tax forms online: Federal tax forms are available from the Internal Revenue Service. Many of the frequently used Federal tax forms can be found at http://www.irs.gov/uac/Forms,-Publications,-and-Other-Tax-Products. State tax forms are available from the State of California’s Franchise Tax Board. Many of the frequently used state tax forms can be found at https://www.ftb.ca.gov/forms/search/index.aspx."], ["question_id", 36], ["text", "You can find tax forms at the [Oakland Public Library][1] (like the 1040 EZ tax form). Some are in print form, and others can be printed by a library staff member (printing charges may apply). Before you go, it's helpful to bring the exact form number you need so the library staff member can find it with ease. If you don't have the form number, not to worry: a staff member is happy to help. To find an Oakland Public Library location near you, [look at the map][2]. [1]: http://www.oaklandlibrary.org/using-library/locations-hours [2]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5"], ["updated_at", "2014-09-03 18:33:23.350064"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.375062"], ["in_language", "en"], ["text", "What are the safest areas in Oakland?"], ["updated_at", "2014-09-03 18:33:23.375062"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 37], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 37 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.420770"], ["tag_id", 3], ["taggable_id", 37], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (4.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (3.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.459678"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 37], ["text", "The best way to find out what areas of Oakland have the fewest reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-09-03 18:33:23.459678"]]
  [1m[35m (3.4ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.483644"], ["in_language", "en"], ["text", "Are there any sex offenders in my neighborhood?"], ["updated_at", "2014-09-03 18:33:23.483644"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 38], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 38 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.497857"], ["tag_id", 3], ["taggable_id", 38], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (1.1ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.516667"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 38], ["text", "You can search for your address on the [Meghan's Law Website][1] to find registered sex offenders that live nearby. Before you search the map, you have to click \"continue\" at the bottom of the first page, then click the check box and \"continue\" at the bottom of the second page. Then you will see a map of California and you can search for your address by clicking on the \"address\" box on the left side of the page. [1]: http://www.meganslaw.ca.gov/"], ["updated_at", "2014-09-03 18:33:23.516667"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.546935"], ["in_language", "en"], ["text", "What do I do if my car has been towed?"], ["updated_at", "2014-09-03 18:33:23.546935"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 39], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (3.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 39 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (2.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.564615"], ["tag_id", 4], ["taggable_id", 39], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (2.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.608613"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 39], ["text", "If you think your car has been towed, first check the A&B Towing site (http://www.abimpound.com/towed.html) to see if they know. You should also call the Police Department Records Division at (510) 238-3021 to confirm your car has been towed. If it has been towed, you can go to the Records Division, 3rd floor, Police Administration Building, 455 7th Street (at Broadway) to get a Release Form for your vehicle."], ["updated_at", "2014-09-03 18:33:23.608613"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (3.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.626021"], ["in_language", "en"], ["text", "Where is the closest public library?"], ["updated_at", "2014-09-03 18:33:23.626021"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 40], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 40 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.643632"], ["tag_id", 4], ["taggable_id", 40], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (2.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.664120"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 40], ["text", "To see a map of all of the Oakland Public Libraries, go [here][1]. You can click on each dot to see the address, phone number and hours. You can find a list of library locations on the Oakland Public Library Website [here][2]. If you are looking for a library close to where you are right now, no matter where you are, you can click [here][3]. [1]: https://data.oaklandnet.com/Public-Services/Map-of-Oakland-Public-Libraries/yra4-ynr5 [2]: http://oaklandlibrary.org/using-library/locations-hours [3]: https://maps.google.com/maps?ie=UTF-8&q=closest%20public%20library"], ["updated_at", "2014-09-03 18:33:23.664120"]]
  [1m[35m (3.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.685294"], ["in_language", "en"], ["text", "Where are the recycling centers located?"], ["updated_at", "2014-09-03 18:33:23.685294"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (3.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 41], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (5.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 41 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (2.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.733879"], ["tag_id", 3], ["taggable_id", 41], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (1.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36mSQL (3.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.782296"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 41], ["text", "Here's a [directory of recycling drop off centers in and around Oakland][1]. For more information about recycling in Oakland, visit [www.oaklandrecycles.com][2]. [1]: http://www2.oaklandnet.com/oakca/groups/pwa/documents/form/oak027311.pdf [2]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm"], ["updated_at", "2014-09-03 18:33:23.782296"]]
  [1m[35m (7.6ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.823813"], ["in_language", "en"], ["text", "What are the current job openings at the City?"], ["updated_at", "2014-09-03 18:33:23.823813"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.4ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 42], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.2ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 42 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (2.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.853565"], ["tag_id", 5], ["taggable_id", 42], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (6.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (6.1ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.907204"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 42], ["text", "Check the [Human Resources page][1] for a list of open jobs. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["updated_at", "2014-09-03 18:33:23.907204"]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36m (3.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:23.930448"], ["in_language", "en"], ["text", "What youth services and activities are available?"], ["updated_at", "2014-09-03 18:33:23.930448"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 43], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 43 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:23.957389"], ["tag_id", 4], ["taggable_id", 43], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.4ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (6.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:23.993403"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 43], ["text", "Several city departments offer services for youth. You can see the Parks and Recreation listings [here][1]. The Oakland Public Library has many services and listings of services for [kids][2] and [teens][3]. Measure Y youth programs are [here][4]. **Late Night Live** Provides safe places for youth and families late Friday and Saturday nights. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Summer Job Program** Program to employ low-income youth during the summer. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Mayor's Mentoring Initiative** Program that finds caring adults to work with Foster youth, formerly incarcerated youth and chronically absent youth. Sponsored by the Office of the Mayor 1 Frank H. Ogawa Plaza, 3rd Floor Oakland, CA 94612 phone: (510) 238-3141 fax: (510) 238-4731 TTY: (510) 238-3254 **Summer Stars Program** An outdoor camping experience for middle school students from our toughest neighborhoods. Find dates for the next trip at the Summer Star's [website][5]. If you would like to sign up your group for a three day/two night camping trip, please contact us via email at oaklandpal@oaklandpal.org OR call 510-615-5758. **Oakland Police Activities League (PAL)** Program dedicated to offering programs and opportunities for kids to work with positive role models and learn about success and failure without guns and drugs. Offers basketball, track and field, overnight camping, and more. [Oakland PAL Website][6] **Oakland Police Explorers** Program designed for high school students who are at least 14.5 years old and want a chance to see what law enforcement is all about. If you are interested in the Explorer Program at the Oakland Police Department, contact the Explorer Advisors, Officer Mildred Oliver or Officer Jumaal Hill at: ph: 510-615-5758 fax: 510-615-5864 oaklandpal@oaklandpal.org **OK (Our Kids) Program** Program focused on reducing the high incarceration and homicide rates of African-American young men (12-18 years old) by providing needed services to youth, promoting economic self-reliance, and encouraging responsible citizenship. [Website][7] ph: 510-238-7998 okprogram@okprogramofoakland.com **GREAT Program** The Gang Resistance, Education and Training program is a structured, school-based program implemented in areas where gang activity either exists or are emerging. [Website][8] You can also find information about some of the [organizations with which we are partnering to give hope to Oakland's youth][10]. [1]: https://securerw.oaklandnet.com/registrationmain.sdi [2]: http://oaklandlibrary.org/kids [3]: http://oaklandlibrary.org/teens [4]: http://oaklandunite.org/youth/ [5]: http://oaklandpal.org/mayor_quan_summer_stars_camping_program [6]: http://oaklandpal.org/home [7]: http://www.okprogramofoakland.com/ [8]: http://www.great-online.org/ [9]: http://www.oaklandlibrary.org/teens/your-life/mind-body/mental-health-0 [10]: http://www2.oaklandnet.com/Government/o/Mayor/i/EducationLeadership/OAK025457"], ["updated_at", "2014-09-03 18:33:23.993403"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.027353"], ["in_language", "en"], ["text", "Where can I get free Wi-Fi?"], ["updated_at", "2014-09-03 18:33:24.027353"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 44], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 44 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.041796"], ["tag_id", 2], ["taggable_id", 44], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (2.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (3.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.110508"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 44], ["text", "You can use free Wi-Fi at all Oakland Public Library locations. You can see a list of libraries [here][1]. You can use free Wi-Fi inside City Hall at 1 Frank H. Ogawa Plaza, Oakland, CA 94612. [1]: http://oaklandlibrary.org/using-library/locations-hours"], ["updated_at", "2014-09-03 18:33:24.110508"]]
  [1m[35m (2.8ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.147861"], ["in_language", "en"], ["text", "What can and can't I recycle?"], ["updated_at", "2014-09-03 18:33:24.147861"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 45], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (3.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 45 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.170707"], ["tag_id", 3], ["taggable_id", 45], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.6ms)[0m  BEGIN
  [1m[36mSQL (1.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.197618"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 45], ["text", "You can find a list of what you can and cannot recycle for both residential and commercial services on the [Oakland Recycles website][1]. For recyclable items that are not listed on the Oakland Recycles website, please visit [www.stopwaste.org][2] and use the online Recycling Guide (towards the bottom right side of the Stop Waste web page. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/s/GAR/index.htm [2]: http://www.stopwaste.org"], ["updated_at", "2014-09-03 18:33:24.197618"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.226352"], ["in_language", "en"], ["text", "How can I see how my city councilperson voted on a particular issue?"], ["updated_at", "2014-09-03 18:33:24.226352"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 46], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.9ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 46 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.241119"], ["tag_id", 4], ["taggable_id", 46], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (1.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.270163"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 46], ["text", "Visit the City Clerk's Legistar search feature at [http://oakland.legistar.com/legislation.aspx][1]. Click on the record number for the legislation in the search results and then on Action Details. [1]: http://oakland.legistar.com/legislation.aspx"], ["updated_at", "2014-09-03 18:33:24.270163"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.286406"], ["in_language", "en"], ["text", "Where do I get a bus pass?"], ["updated_at", "2014-09-03 18:33:24.286406"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 47], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 47 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.306856"], ["tag_id", 2], ["taggable_id", 47], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (3.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.330844"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 47], ["text", "[AC Transit](http://actransit.com) makes bus passes available at many Oakland retail locations, including supermarkets, drug stores, senior centers and news stands. Search for your nearest retail location using your Zip code at [AC Transit's retail locations finder](http://www.actransit.org/rider-info/where-to-buy-a-pass/). Passes can be purchased by mail using the [AC Transit order form](http://www.actransit.org/wp-content/uploads/Ticket_-Order_Form-8.2011.pdf). All AC Transit vehicles accept payments using [Clipper Card](http://www.actransit.org/rider-info/why-clipper/), the Bay Area’s reloadable card for paying transit fares. A Clipper card keeps track of the value on it and automatically deducts the right fare, including transfers and discounts. You can load an AC Transit pass onto a Clipper card, a pass from another agency, or cash value."], ["updated_at", "2014-09-03 18:33:24.330844"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (4.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.380300"], ["in_language", "en"], ["text", "How do I register to vote?"], ["updated_at", "2014-09-03 18:33:24.380300"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.5ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (7.5ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 48], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 48 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.457537"], ["tag_id", 6], ["taggable_id", 48], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (3.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.491430"], ["in_language", "en"], ["need_to_know", "---------- *Have other questions about how to register to vote, or whether you need to? Go to the [Alameda County Registrar of Voters FAQ Page][1]* [1]: http://www.acgov.org/rov/registrationfaq.htm "], ["question_id", 48], ["text", " **If you just need to register or re-register to vote -- you can do it online!** **Go to the [California Secretary of State's online voter registration page][1].** [1]: http://registertovote.ca.gov/"], ["updated_at", "2014-09-03 18:33:24.491430"]]
  [1m[35m (5.8ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.523160"], ["in_language", "en"], ["text", "Can I speak with a live person at the City for help with a question?"], ["updated_at", "2014-09-03 18:33:24.523160"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 49], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 49 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.534906"], ["tag_id", 4], ["taggable_id", 49], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (1.4ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.553493"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 49], ["text", "You can call the Oaklanders Assistance Center at (510) 444-CITY, which is (510) 444-2489. Or email your question to [oac@oaklandnet.com][1]. If you prefer, you may visit the center in-person. Office hours are typically 8:30 am to 5pm. [1]: http://mailto:oac@oaklandnet.com"], ["updated_at", "2014-09-03 18:33:24.553493"]]
  [1m[35m (7.3ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.588412"], ["in_language", "en"], ["text", "How much does it cost to ride a bus in Oakland?"], ["updated_at", "2014-09-03 18:33:24.588412"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 50], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 50 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.603060"], ["tag_id", 2], ["taggable_id", 50], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.9ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.635405"], ["in_language", "en"], ["need_to_know", "You might also consider a convenient buss pass. [Click here to see the answer on where to purchase bus passes][1]. [1]: http://answers.oaklandnet.com/quick_answers/where-do-i-get-a-bus-pass"], ["question_id", 50], ["text", "You can find a full detailed listing of bus fares on the AC Transit site [here][1]. * Regular bus fare is $2.10. * Youth bus fare is $1.05 (ages 5-18) * Senior bus fare is $1.05 (ages 65+) [1]: http://www.actransit.org/rider-info/bus-fares/"], ["updated_at", "2014-09-03 18:33:24.635405"]]
  [1m[35m (2.6ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.658957"], ["in_language", "en"], ["text", "Who do I contact if a tree is protruding on to my property?"], ["updated_at", "2014-09-03 18:33:24.658957"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('employment'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 51], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 5 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 51 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.677292"], ["tag_id", 5], ["taggable_id", 51], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 5]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 5
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.705102"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 51], ["text", "If there is a tree protruding onto your property you will need to determine if the tree itself is on public or private property. If the tree is on: - **Private Property** - you will need to communicate with the owner and discuss a solution. If the resolution is tree removal, the owner will need to file a [removal permit][1]. - **Public Property** - Please call (510) 615-5566 or submit your request online by clicking here, use the SeeClickFix mobile or web app or email pwacallcenter@oaklandnet.com. [1]: http://www2.oaklandnet.com/Government/o/PWA/o/FE/o/TreeServices/OAK023048"], ["updated_at", "2014-09-03 18:33:24.705102"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (1.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.751142"], ["in_language", "en"], ["text", "Does the City have a calendar of fun events?"], ["updated_at", "2014-09-03 18:33:24.751142"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 52], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (3.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 52 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (4.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.793462"], ["tag_id", 4], ["taggable_id", 52], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.4ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (16.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (2.7ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.870396"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 52], ["text", "Visit Oakland, the official destination marketing organization for the City of Oakland, maintains an online event calendar at [www.visitoakland.org][1]. Submit your event information via email to [events@visitoakland.org][2]. [1]: http://www.visitoakland.org [2]: http://mailto:events@visitoakland.org"], ["updated_at", "2014-09-03 18:33:24.870396"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (2.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.886264"], ["in_language", "en"], ["text", "How do I get a passport?"], ["updated_at", "2014-09-03 18:33:24.886264"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 53], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (2.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 53 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.908651"], ["tag_id", 4], ["taggable_id", 53], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (4.9ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (1.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (2.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:24.937494"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 53], ["text", "To get a passport or to renew your existing passport, visit the U.S. State Department's [website][1] and fill out an application. Then bring your finished application, original birth certificate and check or money order to a local processing center. Visit the following website to find a nearby center. You may need to schedule an appointment. [http://iafdb.travel.state.gov/][2] [1]: http://travel.state.gov/passport/ [2]: http://iafdb.travel.state.gov/"], ["updated_at", "2014-09-03 18:33:24.937494"]]
  [1m[35m (5.7ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (5.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:24.966192"], ["in_language", "en"], ["text", "How can I report an animal nuisance?"], ["updated_at", "2014-09-03 18:33:24.966192"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 54], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (5.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 54 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (2.4ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:24.998408"], ["tag_id", 1], ["taggable_id", 54], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.040095"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 54], ["text", "If it is an emergency (a vicious dog or an animal in distress), call (510) 777-3333. If it is not an emergency (barking dogs, obnoxious cats, crowing roosters), call (510) 535-5602. Please note that roosters are illegal in Oakland. "], ["updated_at", "2014-09-03 18:33:25.040095"]]
  [1m[35m (2.3ms)[0m  COMMIT
  [1m[36m (3.9ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.089871"], ["in_language", "en"], ["text", "What is the closest park to my house?"], ["updated_at", "2014-09-03 18:33:25.089871"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (3.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 55], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 55 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (3.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.133642"], ["tag_id", 1], ["taggable_id", 55], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (4.4ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (3.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.177219"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 55], ["text", "You can see a list of all the parks and where they are on a map here[1] [1]: http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm"], ["updated_at", "2014-09-03 18:33:25.177219"]]
  [1m[35m (3.9ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.202793"], ["in_language", "en"], ["text", "What are the closest hiking trails?"], ["updated_at", "2014-09-03 18:33:25.202793"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 56], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 56 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.217416"], ["tag_id", 1], ["taggable_id", 56], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.3ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.3ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mSQL (2.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.253613"], ["in_language", "en"], ["need_to_know", "There are many trails in the hills and various parks. The Parks and Recreation department lists the names of all of their <a href=\"http://www2.oaklandnet.com/Government/o/opr/s/Parks/index.htm\">parks</a>, as well as various walking tours. You can search for all Bay Area trails near you on an interactive map. <a href=\"http://www.transitandtrails.org/find/trailheads\">Transit to Trails</a> shows many city and county parks, including those that can be reached by public transit. Yelp also lists trails, with reviews: <a href=\"http://www.yelp.com/search?find_desc=Walking+Trails&find_loc=Oakland%2C+CA\">Search Yelp for Walking Trails.</a> "], ["question_id", 56], ["text", ""], ["updated_at", "2014-09-03 18:33:25.253613"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.288362"], ["in_language", "en"], ["text", "What is the City's budget process?"], ["updated_at", "2014-09-03 18:33:25.288362"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 57], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 57 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.311783"], ["tag_id", 4], ["taggable_id", 57], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.340830"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 57], ["text", "The City of Oakland operates on a two-year budget cycle and is how City Council establishes its goals, program priorities and desired service levels for the upcoming fiscal period. The City Charter requires the City's budget be balanced -- expenditures must not exceed revenues. The Charter also requires that the budget must be adopted on or before June 30. Budget development and adoption occurs on odd numbered years and mid-cycle budget amendments occur on even numbered years. [Click here to visit the City's web page on the budget process.][1] [1]: http://ttp://www2.oaklandnet.com/Governmacnt/o/CityAdministration/d/BudgetOffice/DOWD005079."], ["updated_at", "2014-09-03 18:33:25.340830"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (5.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.368529"], ["in_language", "en"], ["text", "How do you request a bike rack In your neighborhood or commercial street?"], ["updated_at", "2014-09-03 18:33:25.368529"]]
  [1m[36mActsAsTaggableOn::Tag Load (3.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 58], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (8.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 58 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.437286"], ["tag_id", 6], ["taggable_id", 58], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36mSQL (1.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.501096"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 58], ["text", "You can request a rack on City owned property by filling out the request form. The form asks for information about the address, the business name and your relationship to the business (if available)"], ["updated_at", "2014-09-03 18:33:25.501096"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (1.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.524704"], ["in_language", "en"], ["text", "I am behind on my property taxes. Is there a City program that can help?"], ["updated_at", "2014-09-03 18:33:25.524704"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (2.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 59], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 59 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.542483"], ["tag_id", 2], ["taggable_id", 59], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.3ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (1.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.587665"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 59], ["text", "The City does not assist with the payment of property taxes. Questions about delinquent property taxes should be directed to the Alameda County Treasurer-Tax Collector’s Office at [www.acgov.org/treasurer/][1], or by calling 510.272.6800. The County does offer payment plans. With respect to City liens placed on property taxes, under very limited circumstances, payment plans with the City may be allowed and the lien(s) would be reversed. For more information, contact the Oakland Housing Assistance Center: - Phone: (510) 238-6182 - Email: housingassistance@oaklandnet.com - Address: 250 Frank Ogawa Plaza 6th Floor Oakland, CA 94612 - [http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm][2] [1]: http://www.acgov.org/treasurer/ [2]: http://www2.oaklandnet.com/Government/o/hcd/o/HousingAssistanceCenter/index.htm"], ["updated_at", "2014-09-03 18:33:25.587665"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.4ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.631594"], ["in_language", "en"], ["text", "How do you report a problem with your smartphone."], ["updated_at", "2014-09-03 18:33:25.631594"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 60], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 60 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.653129"], ["tag_id", 4], ["taggable_id", 60], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.680510"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 60], ["text", "When you are outside and see an issue that the City of Oakland is responsible, take out your smartphone, click a picture, and then report it. This problems gets tracked in the City's database. You get a link to share with your neighbors, while being informed when the City fixes the problem. First download the app - SeeClickFix. You will need to register with SeeClickFix to get an account. Then, you track your reports by going to the web site https://seeclickfix.com. Once you start reporting these issues, you are notified of nearby problems and can support your neighbors efforts to make your neighborhood better."], ["updated_at", "2014-09-03 18:33:25.680510"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (6.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.6ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.734600"], ["in_language", "en"], ["text", "How do I contact my Council Member?"], ["updated_at", "2014-09-03 18:33:25.734600"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.1ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.3ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 61], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.4ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 61 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (5.7ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.767654"], ["tag_id", 6], ["taggable_id", 61], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.9ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.8ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.848573"], ["in_language", "en"], ["need_to_know", "If you know your Council district number, the general phone number for each Councilmember is (510) 238-700[# of District]. For example, the phone number for the District 4 Office (Montclair-Laurel-Allendale) is (510) 238-7004. Oakland's At-Large Councilmember's Office phone is (510) 238-7008. The City's naming convention for emaill addresses is first-initial-last-name@oaklandnet.com, for example Councilmember Libby Schaaf's email is lschaaf@oaklandnet.com. If you want to know what Councilmembers serve on a particular Council Committee go [here][4]. If you want to email ALL Councilmembers at once, send to citycouncil@oaklandnet.com . Many Councilmembers have newsletters you can subscribe to and some hold public office hours for drop-in visits."], ["question_id", 61], ["text", "If you don't know who your Councilmember is, use this [locator tool][1] or call the Council Office Front Desk at (510) 238-7584. The [locator tool][2] also provides your Councilmember's email. Links to all Councilmember websites are [here][3]. [1]: http://mapgis.oaklandnet.com/councildistricts/ [2]: http://%20http://mapgis.oaklandnet.com/councildistricts/ [3]: http://www2.oaklandnet.com/Government/o/CityCouncil/index.htm [4]: http://www2.oaklandnet.com/oakca1/groups/cityclerk/documents/webcontent/oak040150.pdf"], ["updated_at", "2014-09-03 18:33:25.848573"]]
  [1m[35m (1.1ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.892162"], ["in_language", "en"], ["text", "Can I apply for more than one City job at a time?"], ["updated_at", "2014-09-03 18:33:25.892162"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('education'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 62], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 4 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 62 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.907379"], ["tag_id", 4], ["taggable_id", 62], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (2.3ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mSQL (0.6ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 4
  [1m[36m (1.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (2.2ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:25.959327"], ["in_language", "en"], ["need_to_know", "Let's say you've applied to a job before at the [Employment Opportunities][1] page. High five. Your standard information is are all saved with your account in your online profile. Address, past work history, all the stock info is saved. You can use the stored information for your new job with a click of a button and update it as you need to. **However, most jobs have Supplemental Questions that you MUST answer.** These questions are specific and unique. For instance, if I apply for a Park Ranger job and a Park Supervisor job, my resume is going to look pretty much the same and I can use it for both. But the questions asked by the applications for the two jobs are different, so I need to answer those questions differently. [1]: http://agency.governmentjobs.com/oaklandca/default.cfm"], ["question_id", 62], ["text", "Yes, you can apply for any City job that is open and apply for as many of them as you like at the same time. But for each position, you have to fill out separate applications since each job posting usually requires information unique to that job – it might be special questions, or you’ll have to attach a copy of a certificate, that sort of thing."], ["updated_at", "2014-09-03 18:33:25.959327"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:25.982109"], ["in_language", "en"], ["text", "Where can I get help with my taxes?"], ["updated_at", "2014-09-03 18:33:25.982109"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('pets'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 63], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 1 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 63 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:25.997009"], ["tag_id", 1], ["taggable_id", 63], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mSQL (1.0ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 1
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:26.186138"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 63], ["text", "You can find help with your taxes--for free!--at the following locations: * [American Association Retired Persons (AARP) Foundation Tax-Aide][1] * United Way of Bay Area [SparkPoint Centers][2] * Oakland Public Library [Tax Assistance Program][3] Closer to tax time, visit these organizations: * [The Unity Council][4] * [The East Bay Asian Development Corporation][5] The Internal Revenue Service (IRS) also offers [free tax preparation help][6] on their website. [1]: http://www.aarp.org/money/taxes/aarp_taxaide/ [2]: http://www.uwba.org/cut-poverty/sparkpoint/ [3]: http://www.oaklandlibrary.org/services/tax-assistance-program [4]: http://www.unitycouncil.org/ [5]: http://www.ebaldc.org/ [6]: http://www.irs.gov/Individuals/Free-Tax-Return-Preparation-for-You-by-Volunteers"], ["updated_at", "2014-09-03 18:33:26.186138"]]
  [1m[35m (1.0ms)[0m  COMMIT
  [1m[36m (6.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:26.217883"], ["in_language", "en"], ["text", "How do I get a permit for constructing a building?"], ["updated_at", "2014-09-03 18:33:26.217883"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('transportation'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 64], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (7.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 3 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 64 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (5.3ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:26.247602"], ["tag_id", 3], ["taggable_id", 64], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 3]]
  [1m[35mSQL (6.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 3
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:26.361234"], ["in_language", "en"], ["need_to_know", "The type of permit you need to obtain is dependent on the specifics of your project. Before you go, review the [checklist of documents](http://www2.oaklandnet.com/Government/o/PBN/OurServices/permits/index.htm) to bring with you in order to apply for your permit. "], ["question_id", 64], ["text", "**Apply in person at the City of Oakland's Building Services Department Permit Center on the second floor of 250 Frank H. Ogawa Plaza, Oakland.** "], ["updated_at", "2014-09-03 18:33:26.361234"]]
  [1m[35m (2.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.9ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:26.418840"], ["in_language", "en"], ["text", "When/what are festivals in Oakland?"], ["updated_at", "2014-09-03 18:33:26.418840"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.2ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 65], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.5ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 65 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (4.0ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:26.472013"], ["tag_id", 6], ["taggable_id", 65], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (3.5ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:26.525305"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 65], ["text", "You can find a list of upcoming and ongoing festivals as well as a general list of fun events taking place in Oakland on the [Visit Oakland Calendar of Festivals page][1]. [1]: http://visitoakland.org/visiting_calendar_of_events.cfm?all=1"], ["updated_at", "2014-09-03 18:33:26.525305"]]
  [1m[35m (2.6ms)[0m  COMMIT
  [1m[36m (1.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:26.609902"], ["in_language", "en"], ["text", "What are the most dangerous areas in Oakland?"], ["updated_at", "2014-09-03 18:33:26.609902"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.7ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 66], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 66 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:26.623039"], ["tag_id", 6], ["taggable_id", 66], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.5ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (4.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.2ms)[0m  BEGIN
  [1m[36mSQL (3.7ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:26.786233"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 66], ["text", "The best way to find out what areas of Oakland have the most reported crimes is by using the interactive map at the [Oakland Crimespotting][1] site. You can explore crimes by neighborhood, by type, by time of day, both recently and over time. [1]: http://oakland.crimespotting.org/ "], ["updated_at", "2014-09-03 18:33:26.786233"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (4.8ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:26.820761"], ["in_language", "en"], ["text", "What is the best place to live, work, and play?"], ["updated_at", "2014-09-03 18:33:26.820761"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.8ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('trash'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 67], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (1.6ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 6 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 67 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:26.838484"], ["tag_id", 6], ["taggable_id", 67], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 6]]
  [1m[35mSQL (1.2ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 6
  [1m[36m (8.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.2ms)[0m  BEGIN
  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:26.872628"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 67], ["text", "...the City of Oakland!"], ["updated_at", "2014-09-03 18:33:26.872628"]]
  [1m[35m (3.8ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "in_language", "text", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2014-09-03 18:33:26.923059"], ["in_language", "en"], ["text", "I am an Oakland landlord. How can I evict a tenant?"], ["updated_at", "2014-09-03 18:33:26.923059"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT "tags".* FROM "tags"  WHERE (LOWER(name) = LOWER('recycling'))[0m
  [1m[35mActsAsTaggableOn::Tag Load (0.9ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)  [["taggable_id", 68], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tagging Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "taggings"  WHERE ("taggings"."tag_id" = 2 AND "taggings"."taggable_type" = 'Question' AND "taggings"."taggable_id" = 68 AND "taggings"."context" = 'tags' AND "taggings"."tagger_id" IS NULL AND "taggings"."tagger_type" IS NULL) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "taggings" ("context", "created_at", "tag_id", "taggable_id", "taggable_type") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["context", "tags"], ["created_at", "2014-09-03 18:33:26.939637"], ["tag_id", 2], ["taggable_id", 68], ["taggable_type", "Question"]]
  [1m[36mActsAsTaggableOn::Tag Load (0.7ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 2]]
  [1m[35mSQL (0.8ms)[0m  UPDATE "tags" SET "taggings_count" = COALESCE("taggings_count", 0) + 1 WHERE "tags"."id" = 2
  [1m[36m (9.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36mSQL (1.6ms)[0m  [1mINSERT INTO "answers" ("created_at", "in_language", "need_to_know", "question_id", "text", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["created_at", "2014-09-03 18:33:26.973273"], ["in_language", "en"], ["need_to_know", ""], ["question_id", 68], ["text", "**Verify that you are legally allowed to evict the tenant.** ◦ A tenant may be evicted for failing to pay rent. ◦  A tenant may be evicted for violating the lease. ◦  A tenant may be evicted for using the rental unit for an unlawful purpose. ◦  A tenant may be evicted for manufacturing or dealing illegal drugs in the rental unit. ◦  A tenant may be evicted for the unlawful use of a weapon or ammunition. ◦ A tenant may be evicted for materially damaging the rental unit. ◦  A tenant may be evicted for causing a significant nuisance to other tenants. **Serve the tenant with a 3-Day Notice to Pay Rent or Quit form.** ◦ Take the completed form to the tenant and hand it to him or her. If he or she refuses to take it, leave it on the ground near the tenant. ◦ If you are unable to serve it directly to the tenant, leave it with someone who is at least 18 years old at the rental unit or with an adult at the tenant's place of work. A copy must also be mailed to the tenant in this situation. ◦ If unable to serve the form directly to another person, post it on the tenant's door and mail a copy of the form to him or her. **Allow the tenant 3 business days (Monday to Friday) after delivering the notice to remedy the situation.** ◦  The 3-day period begins the day after the notice is served. **File an Unlawful Detainer Complaint, a Civil Case Cover Sheet, and a Pre-judgment Right of Possession form.** ◦ The Unlawful Detainer Complaint can be found at the following URL: http://www.courts.ca.gov/documents/ud100.pdf. This is an eviction notice. ◦  The Civil Case Cover Sheet can be found at the following URL: http://www.courts.ca.gov/documents/cm010.pdf ◦  Submit the paperwork to the courthouse in the county that the property is in. ◦ The County Clerk will give you a Summons and a stamped copy of the Unlawful Detainer Complaint. Make sure you also receive the Pre-judgment Right of Possession form. In some cases, you must provide multiple copies for the Clerk to stamp. **Serve the tenant with the Unlawful Detainer Complaint, the Summons, and the Pre-judgment Right of Possession form.** ◦  Serve these in the same way as you served the 3-day Notice to Pay Rent or Quit form. ◦  The tenant will have 5 days to file a response with you and the court. Post and mail the tenant has 10 days to respond, after the 10 days start counting the 5 days, if no response file for judgement. **Complete the court process.** ◦ If the tenant does not answer within 5 days after being served, request a default judgment from the court. This can be done by submitting a following form to the court. ◦  If a default judgment is issued, you will be given a Writ of Possession. Take this form to the local Sheriff and have him or her evict the tenant. ◦  If the tenant decides to challenge the eviction, you or the tenant may request a trial in front of a judge or jury. The trial will occur within 21 days of the request. ◦ If you win the case, you will be awarded possession of the property and possibly monetary awards. ◦ If you win the case, the court will order the Sheriff to post a notice giving the tenant 5 days to vacate the rental unit. If the tenant does not leave, the Sheriff will forcibly remove him or her. ◦ If the tenant wins the case, he or she will be permitted to remain in the rental unit. You may have to pay his or her court fees and he or she may be ordered to pay any past-due rent. **Store the tenant's items for 2 weeks if he or she is evicted.** ◦ If the tenant leaves items behind, you must store them for 2 weeks and attempt to arrange for the tenant to retrieve them. ◦  If anything remains after this period, you may keep, sell, or dispose of the items. More info: http://www.dca.ca.gov/publications/landlordbook/index.shtml http://www2.oaklandnet.com/oakca/groups/ceda/documents/policy/dowd008116.pdf [1]: http://www.courts.ca.gov/documents/ud100.pdf"], ["updated_at", "2014-09-03 18:33:26.973273"]]
  [1m[35m (1.5ms)[0m  COMMIT


Started GET "/" for 10.0.2.2 at 2014-09-03 18:33:55 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (4.3ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (3.4ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.3ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (1.9ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (1.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (5.3ms)
  Rendered home/index.html.erb within layouts/application (45.1ms)
Completed 200 OK in 2598ms (Views: 2395.6ms | ActiveRecord: 30.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-03 18:34:09 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 41ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-03 18:34:10 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY "tags"."taggings_count" DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 6]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.5ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 3]]
  [1m[36mQuestion Load (1.3ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT  "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1 LIMIT 4  [["tag_id", 1]]
  [1m[36mQuestion Load (2.6ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (4.1ms)
  Rendered home/index.html.erb within layouts/application (238.3ms)
Completed 200 OK in 3718ms (Views: 3452.0ms | ActiveRecord: 28.6ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:10:17 +0000
  [1m[36mActiveRecord::SchemaMigration Load (4.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (11.7ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.2ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (34.3ms)
Completed 200 OK in 1651ms (Views: 1502.3ms | ActiveRecord: 32.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:10:26 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 25ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:10:26 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (0.9ms)
  Rendered home/index.html.erb within layouts/application (207.5ms)
Completed 200 OK in 1977ms (Views: 1862.1ms | ActiveRecord: 22.1ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:12:12 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (0.9ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (16.3ms)
Completed 200 OK in 407ms (Views: 374.1ms | ActiveRecord: 12.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:12:19 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:12:20 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (0.6ms)
  Rendered home/index.html.erb within layouts/application (119.7ms)
Completed 200 OK in 796ms (Views: 769.5ms | ActiveRecord: 7.4ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:22:54 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (9.2ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  Rendered questions/show.html.erb within layouts/application (46.3ms)
  Rendered shared/_search_form.html.erb (1.7ms)
Completed 200 OK in 592ms (Views: 575.2ms | ActiveRecord: 13.2ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:24:47 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (0.8ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  Rendered questions/show.html.erb within layouts/application (4.2ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 520ms (Views: 515.7ms | ActiveRecord: 1.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:24:53 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 33ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:24:54 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.6ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.0ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (130.4ms)
Completed 200 OK in 1643ms (Views: 1535.6ms | ActiveRecord: 20.1ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:25:27 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (1.2ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  Rendered questions/show.html.erb within layouts/application (48.9ms)
  Rendered shared/_search_form.html.erb (2.0ms)
Completed 200 OK in 600ms (Views: 590.1ms | ActiveRecord: 5.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:25:34 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 21ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:25:34 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (211.5ms)
Completed 200 OK in 2012ms (Views: 1903.1ms | ActiveRecord: 20.4ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:29:49 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (0.9ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  Rendered questions/show.html.erb within layouts/application (39.4ms)
  Rendered shared/_search_form.html.erb (1.6ms)
Completed 200 OK in 565ms (Views: 554.8ms | ActiveRecord: 5.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:29:55 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 23ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:29:56 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (132.3ms)
Completed 200 OK in 1979ms (Views: 1861.6ms | ActiveRecord: 19.8ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:30:04 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (1.1ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  Rendered questions/show.html.erb within layouts/application (42.0ms)
  Rendered shared/_search_form.html.erb (1.6ms)
Completed 200 OK in 558ms (Views: 548.0ms | ActiveRecord: 5.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:30:10 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:30:11 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.5ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (132.8ms)
Completed 200 OK in 822ms (Views: 797.1ms | ActiveRecord: 8.9ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:30:27 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 8]]
  [1m[35mAnswer Load (0.8ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 8]]
  Rendered questions/show.html.erb within layouts/application (3.7ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 509ms (Views: 504.8ms | ActiveRecord: 1.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:30:33 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:30:34 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (1.3ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (175.4ms)
Completed 200 OK in 832ms (Views: 810.4ms | ActiveRecord: 8.1ms)
  [1m[36mQuestion Load (1.3ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  [["taggable_id", 1], ["taggable_type", "Question"]]


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:45:25 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 8]]
  [1m[35mAnswer Load (0.8ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 8]]
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 8], ["taggable_type", "Question"]]
  Rendered questions/show.html.erb within layouts/application (46.7ms)
  Rendered shared/_search_form.html.erb (1.0ms)
Completed 200 OK in 727ms (Views: 721.4ms | ActiveRecord: 3.0ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:45:32 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:45:32 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (286.9ms)
Completed 200 OK in 978ms (Views: 949.9ms | ActiveRecord: 7.5ms)


Started GET "/tags/4" for 10.0.2.2 at 2014-09-05 14:45:42 +0000
Processing by TagsController#show as HTML
  Parameters: {"id"=>"4"}
  [1m[36mActsAsTaggableOn::Tag Load (0.6ms)[0m  [1mSELECT  "tags".* FROM "tags"  WHERE "tags"."id" = $1 LIMIT 1[0m  [["id", 4]]
  [1m[35mActsAsTaggableOn::Tagging Load (1.2ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26, 39, 40, 43, 46, 49, 52, 53, 57, 60, 62)[0m
  Rendered tags/show.html.erb within layouts/application (2.4ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 519ms (Views: 507.9ms | ActiveRecord: 2.7ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:45:50 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.9ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (0.7ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  [["taggable_id", 8], ["taggable_type", "Question"]]
  Rendered questions/show.html.erb within layouts/application (45.0ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 651ms (Views: 645.6ms | ActiveRecord: 2.4ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:45:57 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:45:57 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (186.3ms)
Completed 200 OK in 828ms (Views: 796.7ms | ActiveRecord: 11.7ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:47:39 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (1.1ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  Rendered questions/show.html.erb within layouts/application (101.6ms)
Completed 500 Internal Server Error in 146ms

ActionView::Template::Error (':tags' is not an ActiveModel-compatible object. It must implement :to_partial_path.):
    20:           </div>
    21:         <% end %>
    22:         
    23:         <%= render partial: :tags, locals: {tags: @question.tags} %>
    24:       </div>
    25: 
    26:     </div><!-- /span9 -->
  app/views/questions/show.html.erb:23:in `_app_views_questions_show_html_erb__1710685615130337819_70138777383380'
  app/controllers/questions_controller.rb:19:in `show'


  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.4ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.5ms)
  Rendered /home/vagrant/ruby/2.1.0/gems/actionpack-4.1.4/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (18.0ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:47:59 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.8ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (0.8ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  [1m[35mActsAsTaggableOn::Tag Load (1.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  [["taggable_id", 8], ["taggable_type", "Question"]]
  Rendered questions/_tags.html.erb (4.7ms)
  Rendered questions/show.html.erb within layouts/application (34.6ms)
  Rendered shared/_search_form.html.erb (1.3ms)
Completed 200 OK in 581ms (Views: 575.5ms | ActiveRecord: 2.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:48:05 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:48:05 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.6ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (1.1ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (116.6ms)
Completed 200 OK in 733ms (Views: 709.0ms | ActiveRecord: 9.0ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 14:58:19 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 8]]
  [1m[35mAnswer Load (1.1ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 8]]
  [1m[36mActsAsTaggableOn::Tag Load (0.9ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 8], ["taggable_type", "Question"]]
  Rendered questions/_tags.html.erb (3.8ms)
  Rendered questions/show.html.erb within layouts/application (31.5ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 624ms (Views: 618.8ms | ActiveRecord: 2.7ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 14:58:25 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 14:58:26 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.3ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (1.2ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (178.6ms)
Completed 200 OK in 879ms (Views: 851.7ms | ActiveRecord: 9.1ms)


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 15:27:29 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[35mQuestion Load (0.7ms)[0m  SELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1  [["id", 8]]
  [1m[36mAnswer Load (0.8ms)[0m  [1mSELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1[0m  [["question_id", 8]]
  [1m[35mActsAsTaggableOn::Tag Load (0.8ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  [["taggable_id", 8], ["taggable_type", "Question"]]
  Rendered questions/_tags.html.erb (3.9ms)
  Rendered questions/show.html.erb within layouts/application (56.8ms)
  Rendered shared/_search_form.html.erb (0.8ms)
Completed 200 OK in 544ms (Views: 525.1ms | ActiveRecord: 9.8ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 15:27:36 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 15:27:37 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (170.1ms)
Completed 200 OK in 836ms (Views: 802.0ms | ActiveRecord: 12.8ms)
  [1m[36mQuestion Load (1.7ms)[0m  [1mSELECT  "questions".* FROM "questions"   ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mActsAsTaggableOn::Tag Load (1.2ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))  [["taggable_id", 1], ["taggable_type", "Question"]]


Started GET "/answers/8" for 10.0.2.2 at 2014-09-05 15:39:14 +0000
Processing by QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT  "questions".* FROM "questions"  WHERE "questions"."id" = $1 LIMIT 1[0m  [["id", 8]]
  [1m[35mAnswer Load (0.8ms)[0m  SELECT "answers".* FROM "answers"  WHERE "answers"."question_id" = $1  [["question_id", 8]]
  [1m[36mActsAsTaggableOn::Tag Load (1.0ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "taggings" ON "tags"."id" = "taggings"."tag_id" WHERE "taggings"."taggable_id" = $1 AND "taggings"."taggable_type" = $2 AND (taggings.context = ('tags'))[0m  [["taggable_id", 8], ["taggable_type", "Question"]]
  Rendered questions/_tags.html.erb (3.7ms)
  Rendered questions/show.html.erb within layouts/application (70.9ms)
  Rendered shared/_search_form.html.erb (0.7ms)
Completed 200 OK in 629ms (Views: 621.1ms | ActiveRecord: 5.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 15:39:21 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 22ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 15:39:21 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (3.4ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.9ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m


Started GET "/answers" for 10.0.2.2 at 2014-09-05 15:39:22 +0000
Processing by QuestionsController#index as HTML
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (240.7ms)
  [1m[35mQuestion Load (1.8ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (17.3ms)
  Rendered shared/_search_form.html.erb (1.6ms)
Completed 200 OK in 590ms (Views: 585.1ms | ActiveRecord: 1.8ms)
Completed 200 OK in 2074ms (Views: 1862.4ms | ActiveRecord: 22.7ms)


Started GET "/answers" for 10.0.2.2 at 2014-09-05 15:40:04 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.2ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (7.5ms)
  Rendered shared/_search_form.html.erb (1.5ms)
Completed 200 OK in 498ms (Views: 494.6ms | ActiveRecord: 1.2ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 15:40:10 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 15:40:11 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (183.7ms)
Completed 200 OK in 848ms (Views: 815.4ms | ActiveRecord: 12.9ms)


Started GET "/answers" for 10.0.2.2 at 2014-09-05 15:40:20 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.3ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (8.8ms)
  Rendered shared/_search_form.html.erb (1.0ms)
Completed 200 OK in 419ms (Views: 415.4ms | ActiveRecord: 1.3ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 15:40:26 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 2ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 15:40:27 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.9ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.3ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.6ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (0.4ms)
  Rendered home/index.html.erb within layouts/application (175.0ms)
Completed 200 OK in 1022ms (Views: 978.6ms | ActiveRecord: 14.9ms)


Started GET "/answers" for 10.0.2.2 at 2014-09-05 15:42:07 +0000
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (8.1ms)
  Rendered shared/_search_form.html.erb (0.9ms)
Completed 200 OK in 453ms (Views: 450.8ms | ActiveRecord: 1.1ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-05 15:42:13 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 4ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-05 15:42:14 +0000
Processing by HomeController#index as */*
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.6ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.9ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (0.5ms)
  Rendered home/index.html.erb within layouts/application (172.1ms)
Completed 200 OK in 861ms (Views: 825.0ms | ActiveRecord: 13.2ms)


Started GET "/" for 10.0.2.2 at 2014-09-08 14:38:46 +0000
  [1m[36mActiveRecord::SchemaMigration Load (4.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (12.3ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (1.3ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (2.3ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.8ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (1.0ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (1.1ms)
  Rendered home/index.html.erb within layouts/application (35.0ms)
Completed 200 OK in 1648ms (Views: 1483.1ms | ActiveRecord: 35.6ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-08 14:39:03 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 33ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-08 14:39:04 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (2.5ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.9ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.8ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (1.0ms)
  Rendered home/index.html.erb within layouts/application (117.9ms)
Completed 200 OK in 1773ms (Views: 1663.0ms | ActiveRecord: 19.8ms)


Started GET "/" for 10.0.2.2 at 2014-09-08 15:23:20 +0000
Processing by HomeController#index as HTML
  [1m[35mActsAsTaggableOn::Tag Load (1.6ms)[0m  SELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 4]]
  [1m[35mQuestion Load (0.7ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 3]]
  [1m[35mQuestion Load (1.1ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)
  [1m[36mActsAsTaggableOn::Tagging Load (1.0ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 6]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)
  [1m[36mActsAsTaggableOn::Tagging Load (0.7ms)[0m  [1mSELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1[0m  [["tag_id", 1]]
  [1m[35mQuestion Load (0.8ms)[0m  SELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)
  Rendered shared/_autocomplete.html.erb (1.2ms)
  Rendered home/index.html.erb within layouts/application (30.1ms)
Completed 200 OK in 498ms (Views: 462.6ms | ActiveRecord: 12.5ms)


Started GET "/search.json?q=" for 10.0.2.2 at 2014-09-08 15:23:28 +0000
Processing by SearchController#index as JSON
  Parameters: {"q"=>""}
Redirected to http://localhost:9080/
Completed 302 Found in 3ms (ActiveRecord: 0.0ms)


Started GET "/" for 10.0.2.2 at 2014-09-08 15:23:29 +0000
Processing by HomeController#index as */*
  [1m[36mActsAsTaggableOn::Tag Load (1.8ms)[0m  [1mSELECT  tags.*, taggings.tags_count AS count FROM "tags" JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM "taggings" INNER JOIN questions ON questions.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Question' AND taggings.context = 'tags') AND (taggings.taggable_id IN(SELECT questions.id FROM "questions")) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) > 0) AS taggings ON taggings.tag_id = tags.id  ORDER BY taggings_count DESC LIMIT 4[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (8, 10, 20, 26)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (0.7ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (4, 6, 15, 18)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 6]]
  [1m[36mQuestion Load (0.8ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (13, 16, 17, 23)[0m
  [1m[35mActsAsTaggableOn::Tagging Load (1.1ms)[0m  SELECT "taggings".* FROM "taggings"  WHERE "taggings"."tag_id" = $1  [["tag_id", 1]]
  [1m[36mQuestion Load (1.0ms)[0m  [1mSELECT "questions".* FROM "questions"  WHERE "questions"."id" IN (1, 5, 7, 11)[0m
  Rendered shared/_autocomplete.html.erb (0.8ms)
  Rendered home/index.html.erb within layouts/application (172.1ms)
Completed 200 OK in 915ms (Views: 888.7ms | ActiveRecord: 8.9ms)
